"use strict";(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[756],{5756:(n,e,A)=>{A.r(e),A.d(e,{default:()=>fn});var t=A(959),o=A(9069),r=A(7714),l=A(9872),a=A(5034),i=A(8516),c=A(6841);function s(n){var e=(0,a.s0)(),A=t.useState(null),o=(0,l.Z)(A,2),r=o[0],s=o[1],d=Boolean(r),u=d?"simple-popover":void 0;return t.createElement("div",null,t.createElement("div",{"aria-describedby":u,variant:"contained",onClick:function(n){s(n.currentTarget)}},n.children),t.createElement(i.ZP,{id:u,open:d,anchorEl:r,onClose:function(){s(null)},anchorOrigin:{vertical:"bottom",horizontal:"left"}},t.createElement(c.Z,{sx:{p:1},onClick:function(){return e("/blog")}},"随笔"),t.createElement(c.Z,{sx:{p:1}},t.createElement("a",{href:"https://juejin.cn/creator/content/column?status=all",target:"_blank",style:{color:"#3d3d3d"}},"博客"))))}var d=A(3072),u=A.n(d),p=A(2298),m=A.n(p),f=A(7976),E=A.n(f),g=A(5147),x=A.n(g),C=A(566),h=A.n(C),b=A(9396),v=A.n(b),y=A(5401),w={};w.styleTagTransform=v(),w.setAttributes=x(),w.insert=E().bind(null,"head"),w.domAPI=m(),w.insertStyleElement=h(),u()(y.Z,w);const Z=y.Z&&y.Z.locals?y.Z.locals:void 0,B=function(){var n=(0,a.s0)(),e=mn.routes[0].children.filter((function(n){return"博客"!==n.cname})),A=(0,t.useState)(e[0]),o=(0,l.Z)(A,2),r=o[0],i=o[1];return t.createElement(t.Fragment,null,t.createElement("div",{className:Z.header},t.createElement("section",{className:Z.left},e.map((function(e){return t.createElement("h1",{className:e.path===r.path?Z.active:"",key:e.path,onClick:function(){return function(e){i(e),n(e.path)}(e)}},e.cname)}))),t.createElement("section",{className:Z.right},t.createElement(s,null,t.createElement("div",{className:Z.via,onClick:function(){i(null)}})))),t.createElement(a.j3,null))};var k=A(7209),J={};J.styleTagTransform=v(),J.setAttributes=x(),J.insert=E().bind(null,"head"),J.domAPI=m(),J.insertStyleElement=h(),u()(k.Z,J);const F=k.Z&&k.Z.locals?k.Z.locals:void 0;var N=A(3605),z=A(6435);const S=function(){var n,e,A,o=(0,t.useState)("CommonTools"),r=(0,l.Z)(o,2),a=r[0],i=r[1],c=(n=N.Z,e=new Map,A=[],n.forEach((function(n,t){n.menu?(A.push({title:n.title,card:n.card,eventName:t}),e.set(n.menu,A)):e.set(n.title,{title:n.title,card:n.card,eventName:t})})),e),s=[];function d(n,e){z.Z.emit("nemuClick",e),i(e)}return c.forEach((function(n,e){s.push(t.createElement("li",{key:e},t.createElement("h1",{className:(null==n?void 0:n.eventName)===a||Array.isArray(n)&&n.some((function(n){return n.eventName===a}))?F.active:"",onClick:function(e){return d(0,n.eventName||n[0].eventName)}},e),Array.isArray(n)?t.createElement("ul",null,n.map((function(n){return t.createElement("li",{key:n.title,className:n.eventName===a?F.active:"",onClick:function(e){return d(0,n.eventName)}},t.createElement("p",null,n.title))}))):t.createElement(t.Fragment,null)))})),t.createElement("aside",{className:F.aside},t.createElement("ul",null,s))};var I=A(6097),P=A(9993),U=A.n(P),T=A(5903),L={};L.styleTagTransform=v(),L.setAttributes=x(),L.insert=E().bind(null,"head"),L.domAPI=m(),L.insertStyleElement=h(),u()(T.Z,L);const j=T.Z&&T.Z.locals?T.Z.locals:void 0;var q=A(457),W={};W.styleTagTransform=v(),W.setAttributes=x(),W.insert=E().bind(null,"head"),W.domAPI=m(),W.insertStyleElement=h(),u()(q.Z,W);const R=q.Z&&q.Z.locals?q.Z.locals:void 0;var _=A(902);function H(n){var e,A;return t.createElement(t.Fragment,null,t.createElement("div",{className:R.menu},null===(e=n.data)||void 0===e?void 0:e.title),t.createElement("div",{className:R.content},null===(A=n.data)||void 0===A?void 0:A.card.map((function(n,e){var A=(0,_.Q)(n.logo);return t.createElement("a",{href:n.href,target:"_blank",className:R.link,key:e},t.createElement("div",{className:R.card},A?t.createElement("img",{width:"32px",height:"32px",src:n.logo}):t.createElement("p",null,n.logo),t.createElement("div",null,t.createElement("b",{className:R.title},n.title),t.createElement("p",{className:R.describe},n.describe))))}))))}const M=function(){var n=(0,t.useState)("CommonTools"),e=(0,l.Z)(n,2),A=e[0],o=e[1],r=N.Z;return(0,t.useEffect)((function(){z.Z.addListener("nemuClick",function(){var n=(0,I.Z)(U().mark((function n(e){return U().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:o(e);case 1:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}())}),[]),t.createElement("section",{className:j.main},t.createElement(H,{data:r.get(A)}))};var G=A(3423),X={};X.styleTagTransform=v(),X.setAttributes=x(),X.insert=E().bind(null,"head"),X.domAPI=m(),X.insertStyleElement=h(),u()(G.Z,X);const Q=G.Z&&G.Z.locals?G.Z.locals:void 0,D=function(){return t.createElement(t.Fragment,null,t.createElement("section",{className:Q.layout},t.createElement(S,null),t.createElement(M,null)))};var V=A(4875),K=A.n(V),O=A(6738),Y={};Y.styleTagTransform=v(),Y.setAttributes=x(),Y.insert=E().bind(null,"head"),Y.domAPI=m(),Y.insertStyleElement=h(),u()(O.Z,Y);const $=O.Z&&O.Z.locals?O.Z.locals:void 0;var nn=[],en=A(4952).keys().map((function(n){return nn.push(n.replace(/\.\//,"").replace(/.md$/,"")),A(1397)("./blog"+n.replace(/\.\//,"/"))}));const An=function(){var n=(0,t.useRef)(null),e=en[en.length-1].default;return(0,t.useEffect)((function(){n.current&&(n.current.innerHTML=e)}),[]),t.createElement("section",{className:$.blog},t.createElement("div",{className:K()("markdown-body",$.blogContent),ref:n,style:{backgroundColor:"white"}}))};var tn=A(9905),on=A(2899),rn=A(4154),ln=A(4230),an=A(1778),cn={};cn.styleTagTransform=v(),cn.setAttributes=x(),cn.insert=E().bind(null,"head"),cn.domAPI=m(),cn.insertStyleElement=h(),u()(an.Z,cn);const sn=an.Z&&an.Z.locals?an.Z.locals:void 0;var dn=A(8416);function un(){var n=(0,t.useState)([]),e=(0,l.Z)(n,2),A=e[0],o=e[1];(0,t.useEffect)((function(){function n(){return(n=(0,I.Z)(U().mark((function n(e){var A;return U().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,(0,dn.gp)(e);case 2:A=n.sent,o(A);case 4:case"end":return n.stop()}}),n)})))).apply(this,arguments)}!function(e){n.apply(this,arguments)}("")}),[]);var r=(0,t.useRef)(null),a=function(n){r.current=n.touches[0].clientX},i=function(){var n=(0,I.Z)(U().mark((function n(e,A){return U().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(e.changedTouches[0].clientX-r.current<-50)){n.next=13;break}return n.next=5,(0,dn.Ry)(A.id);case 5:return n.t0=o,n.next=8,(0,dn.gp)("");case 8:if(n.t1=n.sent,n.t1){n.next=11;break}n.t1=[];case 11:n.t2=n.t1,(0,n.t0)(n.t2);case 13:case"end":return n.stop()}}),n)})));return function(e,A){return n.apply(this,arguments)}}();return t.createElement("section",{className:sn.memorandum},t.createElement(tn.Z,{sx:{width:"100%",bgcolor:"background.paper"}},t.createElement(on.Z,{sx:{padding:0}},A.map((function(n){return t.createElement(rn.Z,{key:n.id,onTouchStart:a,onTouchEnd:function(e){return i(e,n)}},t.createElement(ln.Z,{primary:n.title}))})))))}function pn(){return t.createElement("div",null,"暂无完善，后续上线")}const mn=(0,o.aj)([{path:"/",element:t.createElement(B,null),errorElement:t.createElement(r.Z,null),children:[{path:"/",cname:"前端导航",element:t.createElement(D,null)},{path:"blog",cname:"博客",element:t.createElement(An,null)},{path:"memorandum",cname:"备忘录",element:t.createElement(un,null)},{path:"ebook",cname:"电子书",element:t.createElement(pn,null)}]}]);function fn(){return t.createElement(t.StrictMode,null,t.createElement(a.pG,{router:mn}))}},457:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".tWgKE_UudcDgKDwzNbJt {\n  margin-bottom: 20px;\n  font-size: 20px;\n  letter-spacing: 1.2px;\n  font-weight: 400;\n}\n.XZRfTXRvzmPIracnb5cX {\n  display: flex;\n  flex-flow: wrap row;\n}\n.kJSFZpQZUt2lke6HRnyV {\n  flex: 1;\n  margin-bottom: 10px;\n  background-color: #fff;\n}\n.kJSFZpQZUt2lke6HRnyV:hover {\n  box-shadow: 0 6px 16px 0 #d6e0e8;\n}\n.UStbqJ6qLorlUwyfjSDn {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  min-width: 200px;\n  height: 88px;\n  vertical-align: top;\n}\n.UStbqJ6qLorlUwyfjSDn img {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n.UStbqJ6qLorlUwyfjSDn > p {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n.GS7XieMHeA01JB89nZ7F {\n  font-size: 14px;\n  color: #3d3d3d;\n}\n.HaO5zpaa6zldlJzLdiCs {\n  font-size: 12px;\n  color: #909090;\n}\n","",{version:3,sources:["webpack://./src/platform/mobile/components/card/index.module.less"],names:[],mappings:"AAAA;EACE,mBAAA;EACA,eAAA;EACA,qBAAA;EACA,gBAAA;AACF;AACA;EACE,aAAA;EACA,mBAAA;AACF;AACA;EACE,OAAA;EACA,mBAAA;EACA,sBAAA;AACF;AACA;EACE,gCAAA;AACF;AACA;EACE,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,gBAAA;EACA,YAAA;EACA,mBAAA;AACF;AAPA;EAQI,iBAAA;EACA,kBAAA;AAEJ;AAXA;EAYI,iBAAA;EACA,kBAAA;AAEJ;AACA;EACE,eAAA;EACA,cAAA;AACF;AACA;EACE,eAAA;EACA,cAAA;AACF",sourcesContent:[".menu {\n  margin-bottom: 20px;\n  font-size: 20px;\n  letter-spacing: 1.2px;\n  font-weight: 400;\n}\n.content {\n  display: flex;\n  flex-flow: wrap row;\n}\n.link {\n  flex: 1;\n  margin-bottom: 10px;\n  background-color: #fff;\n}\n.link:hover {\n  box-shadow: 0 6px 16px 0 #d6e0e8;\n}\n.card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  min-width: 200px;\n  height: 88px;\n  vertical-align: top;\n  img {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n  >p {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n}\n.title {\n  font-size: 14px;\n  color: #3d3d3d;\n}\n.describe {\n  font-size: 12px;\n  color: #909090;\n}\n"],sourceRoot:""}]),l.locals={menu:"tWgKE_UudcDgKDwzNbJt",content:"XZRfTXRvzmPIracnb5cX",link:"kJSFZpQZUt2lke6HRnyV",card:"UStbqJ6qLorlUwyfjSDn",title:"GS7XieMHeA01JB89nZ7F",describe:"HaO5zpaa6zldlJzLdiCs"};const a=l},5401:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".E_T9zZc1fleI3b68mzzv {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.qQInqJZ8NaBVeQVTF5Jx {\n  position: fixed;\n  top: 0;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 60px;\n  border-bottom: 1px solid #d4dee6;\n  background-color: #fff;\n}\n.qQInqJZ8NaBVeQVTF5Jx + section {\n  margin-top: 60px;\n}\n.jDGmdUr8AZX6W_2Z_sMF {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  margin-left: 10px;\n  line-height: 60px;\n}\n.jDGmdUr8AZX6W_2Z_sMF h1 {\n  padding: 0 10px;\n  color: #909090;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 18px;\n}\n.jDGmdUr8AZX6W_2Z_sMF .H_4RB44_GX7wPDt6p10S {\n  font-weight: 700;\n  color: #000;\n}\n.n4H71Qj4TFWLpjSxfJCg {\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n}\n.n4H71Qj4TFWLpjSxfJCg .UZH75qu8TIq7uacJLyIa {\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  margin-right: 20px;\n  border: 1px #a39595 solid;\n  border-radius: 50%;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/layout/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EACE,eAAA;EACA,MAAA;EDFA,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECCA,WAAA;EACA,YAAA;EACA,gCAAA;EACA,sBAAA;AASF;AAhBA;EASI,gBAAA;AAUJ;AAPA;EDZE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECWA,iBAAA;EACA,iBAAA;AAYF;AAfA;EAKI,eAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;AAaJ;AAtBA;EAYI,gBAAA;EACA,WAAA;AAaJ;AAVA;EACE,OAAA;EACA,aAAA;EACA,yBAAA;AAYF;AAfA;EAKI,uBAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAaJ",sourcesContent:[".flex-start {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}","@import '../../pc/styles/mixins';\n.header {\n  position: fixed;\n  top: 0;\n  .flex-start();\n  width: 100%;\n  height: 60px;\n  border-bottom: 1px solid #d4dee6;\n  background-color: #fff;\n  + section {\n    margin-top: 60px;\n  }\n}\n.left {\n  .flex-start();\n  margin-left: 10px;\n  line-height: 60px;\n  h1 {\n    padding: 0 10px;\n    color: #909090;\n    cursor: pointer;\n    font-weight: 500;\n    font-size: 18px;\n  }\n  .active {\n    font-weight: 700;\n    color: #000;\n  }\n}\n.right {\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  .via {\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    margin-right: 20px;\n    border: 1px rgb(163, 149, 149) solid;\n    border-radius: 50%;\n  }\n}\n\n"],sourceRoot:""}]),l.locals={"flex-start":"E_T9zZc1fleI3b68mzzv",header:"qQInqJZ8NaBVeQVTF5Jx",left:"jDGmdUr8AZX6W_2Z_sMF",active:"H_4RB44_GX7wPDt6p10S",right:"n4H71Qj4TFWLpjSxfJCg",via:"UZH75qu8TIq7uacJLyIa"};const a=l},6738:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".dPOKicdWl10kJJrZR3SE {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.VRQrf82kK3SW4HyNduCq {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 6px 8px;\n}\n.Czq8gLyGaCePULPeu_oA {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\n.Czq8gLyGaCePULPeu_oA ul {\n  font-size: 14px;\n  padding-bottom: 3px;\n}\n.Czq8gLyGaCePULPeu_oA ul li {\n  cursor: pointer;\n  color: #909090;\n}\n.Czq8gLyGaCePULPeu_oA ul li :hover {\n  color: #00a4ec;\n}\n.Czq8gLyGaCePULPeu_oA ul .dKbNGZhRykEEItXIv3Wb {\n  font-weight: 700;\n  color: #3d3d3d;\n}\n.Czq8gLyGaCePULPeu_oA ul h1 {\n  font-size: 14px;\n  padding: 5px 20px;\n}\n.Czq8gLyGaCePULPeu_oA ul h1.dKbNGZhRykEEItXIv3Wb {\n  font-weight: 700;\n  background-color: #e4e4e4;\n}\n.Czq8gLyGaCePULPeu_oA ul p {\n  padding: 5px 0;\n}\n.hbR7A9CbioyLLm2gPWmc {\n  flex: 9;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/views/blog/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EDAE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECDA,WAAA;EACA,gBAAA;AASF;AAPA;EACE,OAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AASF;AAbA;EAMI,eAAA;EACA,mBAAA;AAUJ;AAjBA;EASM,eAAA;EACA,cAAA;AAWN;AArBA;EAaM,cAAA;AAWN;AAxBA;EAgBM,gBAAA;EACA,cAAA;AAWN;AA5BA;EAoBM,eAAA;EACA,iBAAA;AAWN;AAhCA;EAwBM,gBAAA;EACA,yBAAA;AAWN;AApCA;EA4BM,cAAA;AAWN;AAPA;EACE,OAAA;AASF",sourcesContent:[".flex-start {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}","@import '@/platform/pc/styles/mixins.less';\n.blog {\n  .flex-start();\n  width: 100%;\n  padding: 6px 8px;\n}\n.blogMenu {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n  ul {\n    font-size: 14px;\n    padding-bottom: 3px;\n    li {\n      cursor: pointer;\n      color: #909090;\n    }\n    li :hover {\n      color: #00a4ec;\n    }\n    .active {\n      font-weight: 700;\n      color: #3d3d3d;\n    }\n    h1 {\n      font-size: 14px;\n      padding: 5px 20px;\n    }\n    h1.active {\n      font-weight: 700;\n      background-color: #e4e4e4;\n    }\n    p {\n      padding: 5px 0;\n    }\n  }\n}\n.blogContent {\n  flex:9;\n}\n"],sourceRoot:""}]),l.locals={"flex-start":"dPOKicdWl10kJJrZR3SE",blog:"VRQrf82kK3SW4HyNduCq",blogMenu:"Czq8gLyGaCePULPeu_oA",active:"dKbNGZhRykEEItXIv3Wb",blogContent:"hbR7A9CbioyLLm2gPWmc"};const a=l},7209:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".ooHbWpcWiQRpnZTvtbyg {\n  height: 100vh;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\nul {\n  font-size: 14px;\n  padding-bottom: 3px;\n}\nul li {\n  cursor: pointer;\n  color: #909090;\n}\nul li :hover {\n  color: #00a4ec;\n}\nul .TUMYIo6FCyHV8BH2pONy {\n  font-weight: 700;\n  color: #3d3d3d;\n}\nul h1 {\n  font-size: 14px;\n  padding: 5px 20px;\n}\nul h1.TUMYIo6FCyHV8BH2pONy {\n  font-weight: 700;\n  background-color: #e4e4e4;\n}\nul p {\n  padding: 5px 0;\n  padding-left: 40px;\n}\n","",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/aside/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AACF;AACA;EACE,eAAA;EACA,mBAAA;AACF;AAHA;EAII,eAAA;EACA,cAAA;AAEJ;AAPA;EAQI,cAAA;AAEJ;AAVA;EAWI,gBAAA;EACA,cAAA;AAEJ;AAdA;EAeI,eAAA;EACA,iBAAA;AAEJ;AAlBA;EAmBI,gBAAA;EACA,yBAAA;AAEJ;AAtBA;EAuBI,cAAA;EACA,kBAAA;AAEJ",sourcesContent:[".aside {\n  height: 100vh;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\nul {\n  font-size: 14px;\n  padding-bottom: 3px;\n  li {\n    cursor: pointer;\n    color: #909090;\n  }\n  li :hover {\n    color: #00a4ec;\n  }\n  .active {\n    font-weight: 700;\n    color: #3d3d3d;\n  }\n  h1 {\n    font-size: 14px;\n    padding: 5px 20px;\n  }\n  h1.active {\n    font-weight: 700;\n    background-color: #e4e4e4;\n  }\n  p {\n    padding: 5px 0;\n    padding-left: 40px;\n  }\n}\n\n\n"],sourceRoot:""}]),l.locals={aside:"ooHbWpcWiQRpnZTvtbyg",active:"TUMYIo6FCyHV8BH2pONy"};const a=l},3423:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".mCLUMJbXUyMsQxmzskVn {\n  display: flex;\n}\n","",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;AACF",sourcesContent:[".layout {\n  display: flex;\n  // height: calc(100vh - 60px);\n}"],sourceRoot:""}]),l.locals={layout:"mCLUMJbXUyMsQxmzskVn"};const a=l},5903:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,".fvnjaAGF4afUmF0jyJZ9 {\n  flex: 9;\n  padding: 10px 20px;\n  color: #777;\n  background-color: #e4e4e4;\n}\n","",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/main/index.module.less"],names:[],mappings:"AAAA;EACE,OAAA;EACA,kBAAA;EACA,WAAA;EACA,yBAAA;AACF",sourcesContent:[".main {\n  flex: 9;\n  padding: 10px 20px;\n  color: #777;\n  background-color: #e4e4e4;\n}\n"],sourceRoot:""}]),l.locals={main:"fvnjaAGF4afUmF0jyJZ9"};const a=l},1778:(n,e,A)=>{A.d(e,{Z:()=>a});var t=A(187),o=A.n(t),r=A(3282),l=A.n(r)()(o());l.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),l.locals={};const a=l}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,