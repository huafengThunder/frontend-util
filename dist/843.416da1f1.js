"use strict";(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[843],{487:(n,e,t)=>{var r=t(4039);e.Z=void 0;var o=r(t(6934)),i=t(1527),a=(0,o.default)((0,i.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete");e.Z=a},7743:(n,e,t)=>{var r=t(4039);e.Z=void 0;var o=r(t(6934)),i=t(1527),a=(0,o.default)((0,i.jsx)("path",{d:"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"}),"Inbox");e.Z=a},6946:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(4529),o=t(7366),i=t(959),a=t(5924),s=t(7605);function l(n,e){const t=(0,s.Z)({},e);return Object.keys(n).forEach((r=>{if(r.toString().match(/^(components|slots)$/))t[r]=(0,s.Z)({},n[r],t[r]);else if(r.toString().match(/^(componentsProps|slotProps)$/)){const o=n[r]||{},i=e[r];t[r]={},i&&Object.keys(i)?o&&Object.keys(o)?(t[r]=(0,s.Z)({},i),Object.keys(o).forEach((n=>{t[r][n]=l(o[n],i[n])}))):t[r]=i:t[r]=o}else void 0===t[r]&&(t[r]=n[r])})),t}var A=t(6337),c=t(9305),d=t(5428),p=t(9301),u=t(3380),h=t(6885),g=t(5083),m=t(7810);function b(n){return(0,m.Z)("MuiButton",n)}const f=(0,g.Z)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]),y=i.createContext({});var k=t(1527);const x=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],z=n=>(0,o.Z)({},"small"===n.size&&{"& > *:nth-of-type(1)":{fontSize:18}},"medium"===n.size&&{"& > *:nth-of-type(1)":{fontSize:20}},"large"===n.size&&{"& > *:nth-of-type(1)":{fontSize:22}}),E=(0,d.ZP)(u.Z,{shouldForwardProp:n=>(0,d.FO)(n)||"classes"===n,name:"MuiButton",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,e[t.variant],e[`${t.variant}${(0,h.Z)(t.color)}`],e[`size${(0,h.Z)(t.size)}`],e[`${t.variant}Size${(0,h.Z)(t.size)}`],"inherit"===t.color&&e.colorInherit,t.disableElevation&&e.disableElevation,t.fullWidth&&e.fullWidth]}})((({theme:n,ownerState:e})=>{var t,r;const i="light"===n.palette.mode?n.palette.grey[300]:n.palette.grey[800],a="light"===n.palette.mode?n.palette.grey.A100:n.palette.grey[700];return(0,o.Z)({},n.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(n.vars||n).shape.borderRadius,transition:n.transitions.create(["background-color","box-shadow","border-color","color"],{duration:n.transitions.duration.short}),"&:hover":(0,o.Z)({textDecoration:"none",backgroundColor:n.vars?`rgba(${n.vars.palette.text.primaryChannel} / ${n.vars.palette.action.hoverOpacity})`:(0,c.Fq)(n.palette.text.primary,n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"text"===e.variant&&"inherit"!==e.color&&{backgroundColor:n.vars?`rgba(${n.vars.palette[e.color].mainChannel} / ${n.vars.palette.action.hoverOpacity})`:(0,c.Fq)(n.palette[e.color].main,n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"outlined"===e.variant&&"inherit"!==e.color&&{border:`1px solid ${(n.vars||n).palette[e.color].main}`,backgroundColor:n.vars?`rgba(${n.vars.palette[e.color].mainChannel} / ${n.vars.palette.action.hoverOpacity})`:(0,c.Fq)(n.palette[e.color].main,n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"contained"===e.variant&&{backgroundColor:n.vars?n.vars.palette.Button.inheritContainedHoverBg:a,boxShadow:(n.vars||n).shadows[4],"@media (hover: none)":{boxShadow:(n.vars||n).shadows[2],backgroundColor:(n.vars||n).palette.grey[300]}},"contained"===e.variant&&"inherit"!==e.color&&{backgroundColor:(n.vars||n).palette[e.color].dark,"@media (hover: none)":{backgroundColor:(n.vars||n).palette[e.color].main}}),"&:active":(0,o.Z)({},"contained"===e.variant&&{boxShadow:(n.vars||n).shadows[8]}),[`&.${f.focusVisible}`]:(0,o.Z)({},"contained"===e.variant&&{boxShadow:(n.vars||n).shadows[6]}),[`&.${f.disabled}`]:(0,o.Z)({color:(n.vars||n).palette.action.disabled},"outlined"===e.variant&&{border:`1px solid ${(n.vars||n).palette.action.disabledBackground}`},"contained"===e.variant&&{color:(n.vars||n).palette.action.disabled,boxShadow:(n.vars||n).shadows[0],backgroundColor:(n.vars||n).palette.action.disabledBackground})},"text"===e.variant&&{padding:"6px 8px"},"text"===e.variant&&"inherit"!==e.color&&{color:(n.vars||n).palette[e.color].main},"outlined"===e.variant&&{padding:"5px 15px",border:"1px solid currentColor"},"outlined"===e.variant&&"inherit"!==e.color&&{color:(n.vars||n).palette[e.color].main,border:n.vars?`1px solid rgba(${n.vars.palette[e.color].mainChannel} / 0.5)`:`1px solid ${(0,c.Fq)(n.palette[e.color].main,.5)}`},"contained"===e.variant&&{color:n.vars?n.vars.palette.text.primary:null==(t=(r=n.palette).getContrastText)?void 0:t.call(r,n.palette.grey[300]),backgroundColor:n.vars?n.vars.palette.Button.inheritContainedBg:i,boxShadow:(n.vars||n).shadows[2]},"contained"===e.variant&&"inherit"!==e.color&&{color:(n.vars||n).palette[e.color].contrastText,backgroundColor:(n.vars||n).palette[e.color].main},"inherit"===e.color&&{color:"inherit",borderColor:"currentColor"},"small"===e.size&&"text"===e.variant&&{padding:"4px 5px",fontSize:n.typography.pxToRem(13)},"large"===e.size&&"text"===e.variant&&{padding:"8px 11px",fontSize:n.typography.pxToRem(15)},"small"===e.size&&"outlined"===e.variant&&{padding:"3px 9px",fontSize:n.typography.pxToRem(13)},"large"===e.size&&"outlined"===e.variant&&{padding:"7px 21px",fontSize:n.typography.pxToRem(15)},"small"===e.size&&"contained"===e.variant&&{padding:"4px 10px",fontSize:n.typography.pxToRem(13)},"large"===e.size&&"contained"===e.variant&&{padding:"8px 22px",fontSize:n.typography.pxToRem(15)},e.fullWidth&&{width:"100%"})}),(({ownerState:n})=>n.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${f.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${f.disabled}`]:{boxShadow:"none"}})),w=(0,d.ZP)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.startIcon,e[`iconSize${(0,h.Z)(t.size)}`]]}})((({ownerState:n})=>(0,o.Z)({display:"inherit",marginRight:8,marginLeft:-4},"small"===n.size&&{marginLeft:-2},z(n)))),v=(0,d.ZP)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.endIcon,e[`iconSize${(0,h.Z)(t.size)}`]]}})((({ownerState:n})=>(0,o.Z)({display:"inherit",marginRight:-4,marginLeft:8},"small"===n.size&&{marginRight:-2},z(n)))),C=i.forwardRef((function(n,e){const t=i.useContext(y),s=l(t,n),c=(0,p.Z)({props:s,name:"MuiButton"}),{children:d,color:u="primary",component:g="button",className:m,disabled:f=!1,disableElevation:z=!1,disableFocusRipple:C=!1,endIcon:W,focusVisibleClassName:F,fullWidth:I=!1,size:B="medium",startIcon:M,type:T,variant:J="text"}=c,S=(0,r.Z)(c,x),D=(0,o.Z)({},c,{color:u,component:g,disabled:f,disableElevation:z,disableFocusRipple:C,fullWidth:I,size:B,type:T,variant:J}),Z=(n=>{const{color:e,disableElevation:t,fullWidth:r,size:i,variant:a,classes:s}=n,l={root:["root",a,`${a}${(0,h.Z)(e)}`,`size${(0,h.Z)(i)}`,`${a}Size${(0,h.Z)(i)}`,"inherit"===e&&"colorInherit",t&&"disableElevation",r&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,h.Z)(i)}`],endIcon:["endIcon",`iconSize${(0,h.Z)(i)}`]},c=(0,A.Z)(l,b,s);return(0,o.Z)({},s,c)})(D),_=M&&(0,k.jsx)(w,{className:Z.startIcon,ownerState:D,children:M}),L=W&&(0,k.jsx)(v,{className:Z.endIcon,ownerState:D,children:W});return(0,k.jsxs)(E,(0,o.Z)({ownerState:D,className:(0,a.Z)(t.className,Z.root,m),component:g,disabled:f,focusRipple:!C,focusVisibleClassName:(0,a.Z)(Z.focusVisible,F),ref:e,type:T},S,{classes:Z,children:[_,d,L]}))}))},3373:(n,e,t)=>{t.d(e,{Z:()=>W});var r=t(4529),o=t(7366),i=t(959),a=t(5924),s=t(6337),l=t(4428),A=t(6885),c=t(9301),d=t(5428),p=t(5083),u=t(7810);function h(n){return(0,u.Z)("MuiCircularProgress",n)}(0,p.Z)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]);var g=t(1527);const m=["className","color","disableShrink","size","style","thickness","value","variant"];let b,f,y,k,x=n=>n;const z=(0,l.F4)(b||(b=x`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),E=(0,l.F4)(f||(f=x`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),w=(0,d.ZP)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,e[t.variant],e[`color${(0,A.Z)(t.color)}`]]}})((({ownerState:n,theme:e})=>(0,o.Z)({display:"inline-block"},"determinate"===n.variant&&{transition:e.transitions.create("transform")},"inherit"!==n.color&&{color:(e.vars||e).palette[n.color].main})),(({ownerState:n})=>"indeterminate"===n.variant&&(0,l.iv)(y||(y=x`
      animation: ${0} 1.4s linear infinite;
    `),z))),v=(0,d.ZP)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(n,e)=>e.svg})({display:"block"}),C=(0,d.ZP)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.circle,e[`circle${(0,A.Z)(t.variant)}`],t.disableShrink&&e.circleDisableShrink]}})((({ownerState:n,theme:e})=>(0,o.Z)({stroke:"currentColor"},"determinate"===n.variant&&{transition:e.transitions.create("stroke-dashoffset")},"indeterminate"===n.variant&&{strokeDasharray:"80px, 200px",strokeDashoffset:0})),(({ownerState:n})=>"indeterminate"===n.variant&&!n.disableShrink&&(0,l.iv)(k||(k=x`
      animation: ${0} 1.4s ease-in-out infinite;
    `),E))),W=i.forwardRef((function(n,e){const t=(0,c.Z)({props:n,name:"MuiCircularProgress"}),{className:i,color:l="primary",disableShrink:d=!1,size:p=40,style:u,thickness:b=3.6,value:f=0,variant:y="indeterminate"}=t,k=(0,r.Z)(t,m),x=(0,o.Z)({},t,{color:l,disableShrink:d,size:p,thickness:b,value:f,variant:y}),z=(n=>{const{classes:e,variant:t,color:r,disableShrink:o}=n,i={root:["root",t,`color${(0,A.Z)(r)}`],svg:["svg"],circle:["circle",`circle${(0,A.Z)(t)}`,o&&"circleDisableShrink"]};return(0,s.Z)(i,h,e)})(x),E={},W={},F={};if("determinate"===y){const n=2*Math.PI*((44-b)/2);E.strokeDasharray=n.toFixed(3),F["aria-valuenow"]=Math.round(f),E.strokeDashoffset=`${((100-f)/100*n).toFixed(3)}px`,W.transform="rotate(-90deg)"}return(0,g.jsx)(w,(0,o.Z)({className:(0,a.Z)(z.root,i),style:(0,o.Z)({width:p,height:p},W,u),ownerState:x,ref:e,role:"progressbar"},F,k,{children:(0,g.jsx)(v,{className:z.svg,ownerState:x,viewBox:"22 22 44 44",children:(0,g.jsx)(C,{className:z.circle,style:E,ownerState:x,cx:44,cy:44,r:(44-b)/2,fill:"none",strokeWidth:b})})}))}))},5178:(n,e,t)=>{t.d(e,{Z:()=>k});var r=t(4529),o=t(7366),i=t(959),a=t(5924),s=t(6337),l=t(9305),A=t(5428),c=t(9301),d=t(3380),p=t(6885),u=t(5083),h=t(7810);function g(n){return(0,h.Z)("MuiIconButton",n)}const m=(0,u.Z)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var b=t(1527);const f=["edge","children","className","color","disabled","disableFocusRipple","size"],y=(0,A.ZP)(d.Z,{name:"MuiIconButton",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,"default"!==t.color&&e[`color${(0,p.Z)(t.color)}`],t.edge&&e[`edge${(0,p.Z)(t.edge)}`],e[`size${(0,p.Z)(t.size)}`]]}})((({theme:n,ownerState:e})=>(0,o.Z)({textAlign:"center",flex:"0 0 auto",fontSize:n.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(n.vars||n).palette.action.active,transition:n.transitions.create("background-color",{duration:n.transitions.duration.shortest})},!e.disableRipple&&{"&:hover":{backgroundColor:n.vars?`rgba(${n.vars.palette.action.activeChannel} / ${n.vars.palette.action.hoverOpacity})`:(0,l.Fq)(n.palette.action.active,n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"start"===e.edge&&{marginLeft:"small"===e.size?-3:-12},"end"===e.edge&&{marginRight:"small"===e.size?-3:-12})),(({theme:n,ownerState:e})=>{var t;const r=null==(t=(n.vars||n).palette)?void 0:t[e.color];return(0,o.Z)({},"inherit"===e.color&&{color:"inherit"},"inherit"!==e.color&&"default"!==e.color&&(0,o.Z)({color:null==r?void 0:r.main},!e.disableRipple&&{"&:hover":(0,o.Z)({},r&&{backgroundColor:n.vars?`rgba(${r.mainChannel} / ${n.vars.palette.action.hoverOpacity})`:(0,l.Fq)(r.main,n.palette.action.hoverOpacity)},{"@media (hover: none)":{backgroundColor:"transparent"}})}),"small"===e.size&&{padding:5,fontSize:n.typography.pxToRem(18)},"large"===e.size&&{padding:12,fontSize:n.typography.pxToRem(28)},{[`&.${m.disabled}`]:{backgroundColor:"transparent",color:(n.vars||n).palette.action.disabled}})})),k=i.forwardRef((function(n,e){const t=(0,c.Z)({props:n,name:"MuiIconButton"}),{edge:i=!1,children:l,className:A,color:d="default",disabled:u=!1,disableFocusRipple:h=!1,size:m="medium"}=t,k=(0,r.Z)(t,f),x=(0,o.Z)({},t,{edge:i,color:d,disabled:u,disableFocusRipple:h,size:m}),z=(n=>{const{classes:e,disabled:t,color:r,edge:o,size:i}=n,a={root:["root",t&&"disabled","default"!==r&&`color${(0,p.Z)(r)}`,o&&`edge${(0,p.Z)(o)}`,`size${(0,p.Z)(i)}`]};return(0,s.Z)(a,g,e)})(x);return(0,b.jsx)(y,(0,o.Z)({className:(0,a.Z)(z.root,A),centerRipple:!0,focusRipple:!h,disabled:u,ref:e,ownerState:x},k,{children:l}))}))},2323:(n,e,t)=>{t.d(e,{Z:()=>b});var r=t(4529),o=t(7366),i=t(959),a=t(5924),s=t(6337),l=t(5428),A=t(9301),c=t(5083),d=t(7810);function p(n){return(0,d.Z)("MuiListItemIcon",n)}(0,c.Z)("MuiListItemIcon",["root","alignItemsFlexStart"]);var u=t(4145),h=t(1527);const g=["className"],m=(0,l.ZP)("div",{name:"MuiListItemIcon",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,"flex-start"===t.alignItems&&e.alignItemsFlexStart]}})((({theme:n,ownerState:e})=>(0,o.Z)({minWidth:56,color:(n.vars||n).palette.action.active,flexShrink:0,display:"inline-flex"},"flex-start"===e.alignItems&&{marginTop:8}))),b=i.forwardRef((function(n,e){const t=(0,A.Z)({props:n,name:"MuiListItemIcon"}),{className:l}=t,c=(0,r.Z)(t,g),d=i.useContext(u.Z),b=(0,o.Z)({},t,{alignItems:d.alignItems}),f=(n=>{const{alignItems:e,classes:t}=n,r={root:["root","flex-start"===e&&"alignItemsFlexStart"]};return(0,s.Z)(r,p,t)})(b);return(0,h.jsx)(m,(0,o.Z)({className:(0,a.Z)(f.root,l),ownerState:b,ref:e},c))}))},5755:(n,e,t)=>{t.d(e,{ZP:()=>T});var r=t(4529),o=t(7366),i=t(959),a=t(5924),s=t(6337),l=t(6018),A=t(9305),c=t(5428),d=t(9301),p=t(3380),u=t(9162),h=t(9948),g=t(2351),m=t(4145),b=t(5083),f=t(7810);function y(n){return(0,f.Z)("MuiListItem",n)}const k=(0,b.Z)("MuiListItem",["root","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","padding","button","secondaryAction","selected"]);var x=t(2861);function z(n){return(0,f.Z)("MuiListItemSecondaryAction",n)}(0,b.Z)("MuiListItemSecondaryAction",["root","disableGutters"]);var E=t(1527);const w=["className"],v=(0,c.ZP)("div",{name:"MuiListItemSecondaryAction",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,t.disableGutters&&e.disableGutters]}})((({ownerState:n})=>(0,o.Z)({position:"absolute",right:16,top:"50%",transform:"translateY(-50%)"},n.disableGutters&&{right:0}))),C=i.forwardRef((function(n,e){const t=(0,d.Z)({props:n,name:"MuiListItemSecondaryAction"}),{className:l}=t,A=(0,r.Z)(t,w),c=i.useContext(m.Z),p=(0,o.Z)({},t,{disableGutters:c.disableGutters}),u=(n=>{const{disableGutters:e,classes:t}=n,r={root:["root",e&&"disableGutters"]};return(0,s.Z)(r,z,t)})(p);return(0,E.jsx)(v,(0,o.Z)({className:(0,a.Z)(u.root,l),ownerState:p,ref:e},A))}));C.muiName="ListItemSecondaryAction";const W=C,F=["className"],I=["alignItems","autoFocus","button","children","className","component","components","componentsProps","ContainerComponent","ContainerProps","dense","disabled","disableGutters","disablePadding","divider","focusVisibleClassName","secondaryAction","selected","slotProps","slots"],B=(0,c.ZP)("div",{name:"MuiListItem",slot:"Root",overridesResolver:(n,e)=>{const{ownerState:t}=n;return[e.root,t.dense&&e.dense,"flex-start"===t.alignItems&&e.alignItemsFlexStart,t.divider&&e.divider,!t.disableGutters&&e.gutters,!t.disablePadding&&e.padding,t.button&&e.button,t.hasSecondaryAction&&e.secondaryAction]}})((({theme:n,ownerState:e})=>(0,o.Z)({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left"},!e.disablePadding&&(0,o.Z)({paddingTop:8,paddingBottom:8},e.dense&&{paddingTop:4,paddingBottom:4},!e.disableGutters&&{paddingLeft:16,paddingRight:16},!!e.secondaryAction&&{paddingRight:48}),!!e.secondaryAction&&{[`& > .${x.Z.root}`]:{paddingRight:48}},{[`&.${k.focusVisible}`]:{backgroundColor:(n.vars||n).palette.action.focus},[`&.${k.selected}`]:{backgroundColor:n.vars?`rgba(${n.vars.palette.primary.mainChannel} / ${n.vars.palette.action.selectedOpacity})`:(0,A.Fq)(n.palette.primary.main,n.palette.action.selectedOpacity),[`&.${k.focusVisible}`]:{backgroundColor:n.vars?`rgba(${n.vars.palette.primary.mainChannel} / calc(${n.vars.palette.action.selectedOpacity} + ${n.vars.palette.action.focusOpacity}))`:(0,A.Fq)(n.palette.primary.main,n.palette.action.selectedOpacity+n.palette.action.focusOpacity)}},[`&.${k.disabled}`]:{opacity:(n.vars||n).palette.action.disabledOpacity}},"flex-start"===e.alignItems&&{alignItems:"flex-start"},e.divider&&{borderBottom:`1px solid ${(n.vars||n).palette.divider}`,backgroundClip:"padding-box"},e.button&&{transition:n.transitions.create("background-color",{duration:n.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(n.vars||n).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${k.selected}:hover`]:{backgroundColor:n.vars?`rgba(${n.vars.palette.primary.mainChannel} / calc(${n.vars.palette.action.selectedOpacity} + ${n.vars.palette.action.hoverOpacity}))`:(0,A.Fq)(n.palette.primary.main,n.palette.action.selectedOpacity+n.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:n.vars?`rgba(${n.vars.palette.primary.mainChannel} / ${n.vars.palette.action.selectedOpacity})`:(0,A.Fq)(n.palette.primary.main,n.palette.action.selectedOpacity)}}},e.hasSecondaryAction&&{paddingRight:48}))),M=(0,c.ZP)("li",{name:"MuiListItem",slot:"Container",overridesResolver:(n,e)=>e.container})({position:"relative"}),T=i.forwardRef((function(n,e){const t=(0,d.Z)({props:n,name:"MuiListItem"}),{alignItems:A="center",autoFocus:c=!1,button:b=!1,children:f,className:x,component:z,components:w={},componentsProps:v={},ContainerComponent:C="li",ContainerProps:{className:T}={},dense:J=!1,disabled:S=!1,disableGutters:D=!1,disablePadding:Z=!1,divider:_=!1,focusVisibleClassName:L,secondaryAction:$,selected:R=!1,slotProps:q={},slots:j={}}=t,G=(0,r.Z)(t.ContainerProps,F),O=(0,r.Z)(t,I),H=i.useContext(m.Z),P=i.useMemo((()=>({dense:J||H.dense||!1,alignItems:A,disableGutters:D})),[A,H.dense,J,D]),N=i.useRef(null);(0,h.Z)((()=>{c&&N.current&&N.current.focus()}),[c]);const Q=i.Children.toArray(f),X=Q.length&&(0,u.Z)(Q[Q.length-1],["ListItemSecondaryAction"]),K=(0,o.Z)({},t,{alignItems:A,autoFocus:c,button:b,dense:P.dense,disabled:S,disableGutters:D,disablePadding:Z,divider:_,hasSecondaryAction:X,selected:R}),U=(n=>{const{alignItems:e,button:t,classes:r,dense:o,disabled:i,disableGutters:a,disablePadding:l,divider:A,hasSecondaryAction:c,selected:d}=n,p={root:["root",o&&"dense",!a&&"gutters",!l&&"padding",A&&"divider",i&&"disabled",t&&"button","flex-start"===e&&"alignItemsFlexStart",c&&"secondaryAction",d&&"selected"],container:["container"]};return(0,s.Z)(p,y,r)})(K),V=(0,g.Z)(N,e),Y=j.root||w.Root||B,nn=q.root||v.root||{},en=(0,o.Z)({className:(0,a.Z)(U.root,nn.className,x),disabled:S},O);let tn=z||"li";return b&&(en.component=z||"div",en.focusVisibleClassName=(0,a.Z)(k.focusVisible,L),tn=p.Z),X?(tn=en.component||z?tn:"div","li"===C&&("li"===tn?tn="div":"li"===en.component&&(en.component="div")),(0,E.jsx)(m.Z.Provider,{value:P,children:(0,E.jsxs)(M,(0,o.Z)({as:C,className:(0,a.Z)(U.container,T),ref:V,ownerState:K},G,{children:[(0,E.jsx)(Y,(0,o.Z)({},nn,!(0,l.Z)(Y)&&{as:tn,ownerState:(0,o.Z)({},K,nn.ownerState)},en,{children:Q})),Q.pop()]}))})):(0,E.jsx)(m.Z.Provider,{value:P,children:(0,E.jsxs)(Y,(0,o.Z)({},nn,{as:tn,ref:V},!(0,l.Z)(Y)&&{ownerState:(0,o.Z)({},K,nn.ownerState)},en,{children:[Q,$&&(0,E.jsx)(W,{children:$})]}))})}))},4340:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(187),o=t.n(r),i=t(3282),a=t.n(i),s=t(6668),l=t.n(s),A=new URL(t(1251),t.b),c=a()(o()),d=l()(A);c.push([n.id,`@media (prefers-color-scheme: dark) {\n  .JTIzpWAWzFszir0t9BAM {\n    color-scheme: dark;\n    --color-prettylights-syntax-comment: #8b949e;\n    --color-prettylights-syntax-constant: #79c0ff;\n    --color-prettylights-syntax-entity: #d2a8ff;\n    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n    --color-prettylights-syntax-entity-tag: #7ee787;\n    --color-prettylights-syntax-keyword: #ff7b72;\n    --color-prettylights-syntax-string: #a5d6ff;\n    --color-prettylights-syntax-variable: #ffa657;\n    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n    --color-prettylights-syntax-carriage-return-text: #f0f6fc;\n    --color-prettylights-syntax-carriage-return-bg: #b62324;\n    --color-prettylights-syntax-string-regexp: #7ee787;\n    --color-prettylights-syntax-markup-list: #f2cc60;\n    --color-prettylights-syntax-markup-heading: #1f6feb;\n    --color-prettylights-syntax-markup-italic: #c9d1d9;\n    --color-prettylights-syntax-markup-bold: #c9d1d9;\n    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n    --color-prettylights-syntax-markup-deleted-bg: #67060c;\n    --color-prettylights-syntax-markup-inserted-text: #aff5b4;\n    --color-prettylights-syntax-markup-inserted-bg: #033a16;\n    --color-prettylights-syntax-markup-changed-text: #ffdfb6;\n    --color-prettylights-syntax-markup-changed-bg: #5a1e02;\n    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n    --color-prettylights-syntax-markup-ignored-bg: #1158c7;\n    --color-prettylights-syntax-meta-diff-range: #d2a8ff;\n    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n    --color-fg-default: #c9d1d9;\n    --color-fg-muted: #8b949e;\n    --color-fg-subtle: #6e7681;\n    --color-canvas-default: #0d1117;\n    --color-canvas-subtle: #161b22;\n    --color-border-default: #30363d;\n    --color-border-muted: #21262d;\n    --color-neutral-muted: rgba(110, 118, 129, 0.4);\n    --color-accent-fg: #58a6ff;\n    --color-accent-emphasis: #1f6feb;\n    --color-attention-subtle: rgba(187, 128, 9, 0.15);\n    --color-danger-fg: #f85149;\n  }\n}\n@media (prefers-color-scheme: light) {\n  .JTIzpWAWzFszir0t9BAM {\n    color-scheme: light;\n    --color-prettylights-syntax-comment: #6e7781;\n    --color-prettylights-syntax-constant: #0550ae;\n    --color-prettylights-syntax-entity: #8250df;\n    --color-prettylights-syntax-storage-modifier-import: #24292f;\n    --color-prettylights-syntax-entity-tag: #116329;\n    --color-prettylights-syntax-keyword: #cf222e;\n    --color-prettylights-syntax-string: #0a3069;\n    --color-prettylights-syntax-variable: #953800;\n    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n    --color-prettylights-syntax-invalid-illegal-bg: #82071e;\n    --color-prettylights-syntax-carriage-return-text: #f6f8fa;\n    --color-prettylights-syntax-carriage-return-bg: #cf222e;\n    --color-prettylights-syntax-string-regexp: #116329;\n    --color-prettylights-syntax-markup-list: #3b2300;\n    --color-prettylights-syntax-markup-heading: #0550ae;\n    --color-prettylights-syntax-markup-italic: #24292f;\n    --color-prettylights-syntax-markup-bold: #24292f;\n    --color-prettylights-syntax-markup-deleted-text: #82071e;\n    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n    --color-prettylights-syntax-markup-inserted-text: #116329;\n    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n    --color-prettylights-syntax-markup-changed-text: #953800;\n    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n    --color-prettylights-syntax-markup-ignored-text: #eaeef2;\n    --color-prettylights-syntax-markup-ignored-bg: #0550ae;\n    --color-prettylights-syntax-meta-diff-range: #8250df;\n    --color-prettylights-syntax-brackethighlighter-angle: #57606a;\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n    --color-prettylights-syntax-constant-other-reference-link: #0a3069;\n    --color-fg-default: #24292f;\n    --color-fg-muted: #57606a;\n    --color-fg-subtle: #6e7781;\n    --color-canvas-default: #ffffff;\n    --color-canvas-subtle: #f6f8fa;\n    --color-border-default: #d0d7de;\n    --color-border-muted: hsl(210, 18%, 87%);\n    --color-neutral-muted: rgba(175, 184, 193, 0.2);\n    --color-accent-fg: #0969da;\n    --color-accent-emphasis: #0969da;\n    --color-attention-subtle: #fff8c5;\n    --color-danger-fg: #cf222e;\n  }\n}\n.JTIzpWAWzFszir0t9BAM {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  margin: 0;\n  color: var(--color-fg-default);\n  background-color: var(--color-canvas-default);\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";\n  font-size: 16px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n.JTIzpWAWzFszir0t9BAM .ZtsvEhcDSF51AlNAw5bX {\n  display: inline-block;\n  fill: currentColor;\n  vertical-align: text-bottom;\n}\n.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,\n.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,\n.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,\n.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,\n.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,\n.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before {\n  width: 16px;\n  height: 16px;\n  content: ' ';\n  display: inline-block;\n  background-color: currentColor;\n  -webkit-mask-image: url(${d});\n  mask-image: url(${d});\n}\n.JTIzpWAWzFszir0t9BAM details,\n.JTIzpWAWzFszir0t9BAM figcaption,\n.JTIzpWAWzFszir0t9BAM figure {\n  display: block;\n}\n.JTIzpWAWzFszir0t9BAM summary {\n  display: list-item;\n}\n.JTIzpWAWzFszir0t9BAM [hidden] {\n  display: none !important;\n}\n.JTIzpWAWzFszir0t9BAM a {\n  background-color: transparent;\n  color: var(--color-accent-fg);\n  text-decoration: none;\n}\n.JTIzpWAWzFszir0t9BAM abbr[title] {\n  border-bottom: none;\n  text-decoration: underline dotted;\n}\n.JTIzpWAWzFszir0t9BAM b,\n.JTIzpWAWzFszir0t9BAM strong {\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n.JTIzpWAWzFszir0t9BAM dfn {\n  font-style: italic;\n}\n.JTIzpWAWzFszir0t9BAM h1 {\n  margin: 0.67em 0;\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: 0.3em;\n  font-size: 2em;\n  border-bottom: 1px solid var(--color-border-muted);\n}\n.JTIzpWAWzFszir0t9BAM mark {\n  background-color: var(--color-attention-subtle);\n  color: var(--color-fg-default);\n}\n.JTIzpWAWzFszir0t9BAM small {\n  font-size: 90%;\n}\n.JTIzpWAWzFszir0t9BAM sub,\n.JTIzpWAWzFszir0t9BAM sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n.JTIzpWAWzFszir0t9BAM sub {\n  bottom: -0.25em;\n}\n.JTIzpWAWzFszir0t9BAM sup {\n  top: -0.5em;\n}\n.JTIzpWAWzFszir0t9BAM img {\n  border-style: none;\n  max-width: 100%;\n  box-sizing: content-box;\n  background-color: var(--color-canvas-default);\n}\n.JTIzpWAWzFszir0t9BAM code,\n.JTIzpWAWzFszir0t9BAM kbd,\n.JTIzpWAWzFszir0t9BAM pre,\n.JTIzpWAWzFszir0t9BAM samp {\n  font-family: monospace;\n  font-size: 1em;\n}\n.JTIzpWAWzFszir0t9BAM figure {\n  margin: 1em 40px;\n}\n.JTIzpWAWzFszir0t9BAM hr {\n  box-sizing: content-box;\n  overflow: hidden;\n  background: transparent;\n  border-bottom: 1px solid var(--color-border-muted);\n  height: 0.25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: var(--color-border-default);\n  border: 0;\n}\n.JTIzpWAWzFszir0t9BAM input {\n  font: inherit;\n  margin: 0;\n  overflow: visible;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n.JTIzpWAWzFszir0t9BAM [type=button],\n.JTIzpWAWzFszir0t9BAM [type=reset],\n.JTIzpWAWzFszir0t9BAM [type=submit] {\n  -webkit-appearance: button;\n}\n.JTIzpWAWzFszir0t9BAM [type=checkbox],\n.JTIzpWAWzFszir0t9BAM [type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n.JTIzpWAWzFszir0t9BAM [type=number]::-webkit-inner-spin-button,\n.JTIzpWAWzFszir0t9BAM [type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n.JTIzpWAWzFszir0t9BAM [type=search]::-webkit-search-cancel-button,\n.JTIzpWAWzFszir0t9BAM [type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n.JTIzpWAWzFszir0t9BAM ::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n.JTIzpWAWzFszir0t9BAM ::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n.JTIzpWAWzFszir0t9BAM a:hover {\n  text-decoration: underline;\n}\n.JTIzpWAWzFszir0t9BAM ::placeholder {\n  color: var(--color-fg-subtle);\n  opacity: 1;\n}\n.JTIzpWAWzFszir0t9BAM hr::before {\n  display: table;\n  content: "";\n}\n.JTIzpWAWzFszir0t9BAM hr::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n.JTIzpWAWzFszir0t9BAM table {\n  border-spacing: 0;\n  border-collapse: collapse;\n  display: block;\n  width: max-content;\n  max-width: 100%;\n  overflow: auto;\n}\n.JTIzpWAWzFszir0t9BAM td,\n.JTIzpWAWzFszir0t9BAM th {\n  padding: 0;\n}\n.JTIzpWAWzFszir0t9BAM details summary {\n  cursor: pointer;\n}\n.JTIzpWAWzFszir0t9BAM details:not([open]) > *:not(summary) {\n  display: none !important;\n}\n.JTIzpWAWzFszir0t9BAM a:focus,\n.JTIzpWAWzFszir0t9BAM [role=button]:focus,\n.JTIzpWAWzFszir0t9BAM input[type=radio]:focus,\n.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus {\n  outline: 2px solid var(--color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n.JTIzpWAWzFszir0t9BAM a:focus:not(:focus-visible),\n.JTIzpWAWzFszir0t9BAM [role=button]:focus:not(:focus-visible),\n.JTIzpWAWzFszir0t9BAM input[type=radio]:focus:not(:focus-visible),\n.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus:not(:focus-visible) {\n  outline: solid 1px transparent;\n}\n.JTIzpWAWzFszir0t9BAM a:focus-visible,\n.JTIzpWAWzFszir0t9BAM [role=button]:focus-visible,\n.JTIzpWAWzFszir0t9BAM input[type=radio]:focus-visible,\n.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus-visible {\n  outline: 2px solid var(--color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n.JTIzpWAWzFszir0t9BAM a:not([class]):focus,\n.JTIzpWAWzFszir0t9BAM a:not([class]):focus-visible,\n.JTIzpWAWzFszir0t9BAM input[type=radio]:focus,\n.JTIzpWAWzFszir0t9BAM input[type=radio]:focus-visible,\n.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus,\n.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus-visible {\n  outline-offset: 0;\n}\n.JTIzpWAWzFszir0t9BAM kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font: 11px ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  line-height: 10px;\n  color: var(--color-fg-default);\n  vertical-align: middle;\n  background-color: var(--color-canvas-subtle);\n  border: solid 1px var(--color-neutral-muted);\n  border-bottom-color: var(--color-neutral-muted);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);\n}\n.JTIzpWAWzFszir0t9BAM h1,\n.JTIzpWAWzFszir0t9BAM h2,\n.JTIzpWAWzFszir0t9BAM h3,\n.JTIzpWAWzFszir0t9BAM h4,\n.JTIzpWAWzFszir0t9BAM h5,\n.JTIzpWAWzFszir0t9BAM h6 {\n  margin-top: 24px;\n  margin-bottom: 16px;\n  font-weight: var(--base-text-weight-semibold, 600);\n  line-height: 1.25;\n}\n.JTIzpWAWzFszir0t9BAM h2 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: 0.3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid var(--color-border-muted);\n}\n.JTIzpWAWzFszir0t9BAM h3 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1.25em;\n}\n.JTIzpWAWzFszir0t9BAM h4 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1em;\n}\n.JTIzpWAWzFszir0t9BAM h5 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 0.875em;\n}\n.JTIzpWAWzFszir0t9BAM h6 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 0.85em;\n  color: var(--color-fg-muted);\n}\n.JTIzpWAWzFszir0t9BAM p {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n.JTIzpWAWzFszir0t9BAM blockquote {\n  margin: 0;\n  padding: 0 1em;\n  color: var(--color-fg-muted);\n  border-left: 0.25em solid var(--color-border-default);\n}\n.JTIzpWAWzFszir0t9BAM ul,\n.JTIzpWAWzFszir0t9BAM ol {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 2em;\n}\n.JTIzpWAWzFszir0t9BAM ol ol,\n.JTIzpWAWzFszir0t9BAM ul ol {\n  list-style-type: lower-roman;\n}\n.JTIzpWAWzFszir0t9BAM ul ul ol,\n.JTIzpWAWzFszir0t9BAM ul ol ol,\n.JTIzpWAWzFszir0t9BAM ol ul ol,\n.JTIzpWAWzFszir0t9BAM ol ol ol {\n  list-style-type: lower-alpha;\n}\n.JTIzpWAWzFszir0t9BAM dd {\n  margin-left: 0;\n}\n.JTIzpWAWzFszir0t9BAM tt,\n.JTIzpWAWzFszir0t9BAM code,\n.JTIzpWAWzFszir0t9BAM samp {\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  font-size: 12px;\n}\n.JTIzpWAWzFszir0t9BAM pre {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  font-size: 12px;\n  word-wrap: normal;\n}\n.JTIzpWAWzFszir0t9BAM .ZtsvEhcDSF51AlNAw5bX {\n  display: inline-block;\n  overflow: visible !important;\n  vertical-align: text-bottom;\n  fill: currentColor;\n}\n.JTIzpWAWzFszir0t9BAM input::-webkit-outer-spin-button,\n.JTIzpWAWzFszir0t9BAM input::-webkit-inner-spin-button {\n  margin: 0;\n  -webkit-appearance: none;\n  appearance: none;\n}\n.JTIzpWAWzFszir0t9BAM::before {\n  display: table;\n  content: "";\n}\n.JTIzpWAWzFszir0t9BAM::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n.JTIzpWAWzFszir0t9BAM > *:first-child {\n  margin-top: 0 !important;\n}\n.JTIzpWAWzFszir0t9BAM > *:last-child {\n  margin-bottom: 0 !important;\n}\n.JTIzpWAWzFszir0t9BAM a:not([href]) {\n  color: inherit;\n  text-decoration: none;\n}\n.JTIzpWAWzFszir0t9BAM .IA6SgHbm0Y7OBhOVhkTA {\n  color: var(--color-danger-fg);\n}\n.JTIzpWAWzFszir0t9BAM .XGxKfA1eh75FuEQvL6pd {\n  float: left;\n  padding-right: 4px;\n  margin-left: -20px;\n  line-height: 1;\n}\n.JTIzpWAWzFszir0t9BAM .XGxKfA1eh75FuEQvL6pd:focus {\n  outline: none;\n}\n.JTIzpWAWzFszir0t9BAM p,\n.JTIzpWAWzFszir0t9BAM blockquote,\n.JTIzpWAWzFszir0t9BAM ul,\n.JTIzpWAWzFszir0t9BAM ol,\n.JTIzpWAWzFszir0t9BAM dl,\n.JTIzpWAWzFszir0t9BAM table,\n.JTIzpWAWzFszir0t9BAM pre,\n.JTIzpWAWzFszir0t9BAM details {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n.JTIzpWAWzFszir0t9BAM blockquote > :first-child {\n  margin-top: 0;\n}\n.JTIzpWAWzFszir0t9BAM blockquote > :last-child {\n  margin-bottom: 0;\n}\n.JTIzpWAWzFszir0t9BAM h1 .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h2 .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h3 .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h4 .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h5 .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h6 .dWtgNrd2FLAIgXW_saQM {\n  color: var(--color-fg-default);\n  vertical-align: middle;\n  visibility: hidden;\n}\n.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd {\n  text-decoration: none;\n}\n.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,\n.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM {\n  visibility: visible;\n}\n.JTIzpWAWzFszir0t9BAM h1 tt,\n.JTIzpWAWzFszir0t9BAM h1 code,\n.JTIzpWAWzFszir0t9BAM h2 tt,\n.JTIzpWAWzFszir0t9BAM h2 code,\n.JTIzpWAWzFszir0t9BAM h3 tt,\n.JTIzpWAWzFszir0t9BAM h3 code,\n.JTIzpWAWzFszir0t9BAM h4 tt,\n.JTIzpWAWzFszir0t9BAM h4 code,\n.JTIzpWAWzFszir0t9BAM h5 tt,\n.JTIzpWAWzFszir0t9BAM h5 code,\n.JTIzpWAWzFszir0t9BAM h6 tt,\n.JTIzpWAWzFszir0t9BAM h6 code {\n  padding: 0 0.2em;\n  font-size: inherit;\n}\n.JTIzpWAWzFszir0t9BAM summary h1,\n.JTIzpWAWzFszir0t9BAM summary h2,\n.JTIzpWAWzFszir0t9BAM summary h3,\n.JTIzpWAWzFszir0t9BAM summary h4,\n.JTIzpWAWzFszir0t9BAM summary h5,\n.JTIzpWAWzFszir0t9BAM summary h6 {\n  display: inline-block;\n}\n.JTIzpWAWzFszir0t9BAM summary h1 .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM summary h2 .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM summary h3 .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM summary h4 .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM summary h5 .XGxKfA1eh75FuEQvL6pd,\n.JTIzpWAWzFszir0t9BAM summary h6 .XGxKfA1eh75FuEQvL6pd {\n  margin-left: -40px;\n}\n.JTIzpWAWzFszir0t9BAM summary h1,\n.JTIzpWAWzFszir0t9BAM summary h2 {\n  padding-bottom: 0;\n  border-bottom: 0;\n}\n.JTIzpWAWzFszir0t9BAM ul.Ah464Xli3hvh5g0FxDU6,\n.JTIzpWAWzFszir0t9BAM ol.Ah464Xli3hvh5g0FxDU6 {\n  padding: 0;\n  list-style-type: none;\n}\n.JTIzpWAWzFszir0t9BAM ol[type=a] {\n  list-style-type: lower-alpha;\n}\n.JTIzpWAWzFszir0t9BAM ol[type=A] {\n  list-style-type: upper-alpha;\n}\n.JTIzpWAWzFszir0t9BAM ol[type=i] {\n  list-style-type: lower-roman;\n}\n.JTIzpWAWzFszir0t9BAM ol[type=I] {\n  list-style-type: upper-roman;\n}\n.JTIzpWAWzFszir0t9BAM ol[type="1"] {\n  list-style-type: decimal;\n}\n.JTIzpWAWzFszir0t9BAM div > ol:not([type]) {\n  list-style-type: decimal;\n}\n.JTIzpWAWzFszir0t9BAM ul ul,\n.JTIzpWAWzFszir0t9BAM ul ol,\n.JTIzpWAWzFszir0t9BAM ol ol,\n.JTIzpWAWzFszir0t9BAM ol ul {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.JTIzpWAWzFszir0t9BAM li > p {\n  margin-top: 16px;\n}\n.JTIzpWAWzFszir0t9BAM li + li {\n  margin-top: 0.25em;\n}\n.JTIzpWAWzFszir0t9BAM dl {\n  padding: 0;\n}\n.JTIzpWAWzFszir0t9BAM dl dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n.JTIzpWAWzFszir0t9BAM dl dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n.JTIzpWAWzFszir0t9BAM table th {\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n.JTIzpWAWzFszir0t9BAM table th,\n.JTIzpWAWzFszir0t9BAM table td {\n  padding: 6px 13px;\n  border: 1px solid var(--color-border-default);\n}\n.JTIzpWAWzFszir0t9BAM table tr {\n  background-color: var(--color-canvas-default);\n  border-top: 1px solid var(--color-border-muted);\n}\n.JTIzpWAWzFszir0t9BAM table tr:nth-child(2n) {\n  background-color: var(--color-canvas-subtle);\n}\n.JTIzpWAWzFszir0t9BAM table img {\n  background-color: transparent;\n}\n.JTIzpWAWzFszir0t9BAM img[align=right] {\n  padding-left: 20px;\n}\n.JTIzpWAWzFszir0t9BAM img[align=left] {\n  padding-right: 20px;\n}\n.JTIzpWAWzFszir0t9BAM .ZS4ACM_E97QtVXIrTh0v {\n  max-width: none;\n  vertical-align: text-top;\n  background-color: transparent;\n}\n.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML {\n  display: block;\n  overflow: hidden;\n}\n.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML > span {\n  display: block;\n  float: left;\n  width: auto;\n  padding: 7px;\n  margin: 13px 0 0;\n  overflow: hidden;\n  border: 1px solid var(--color-border-default);\n}\n.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML span img {\n  display: block;\n  float: left;\n}\n.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML span span {\n  display: block;\n  padding: 5px 0 0;\n  clear: both;\n  color: var(--color-fg-default);\n}\n.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw > span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: center;\n}\n.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw span img {\n  margin: 0 auto;\n  text-align: center;\n}\n.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ > span {\n  display: block;\n  margin: 13px 0 0;\n  overflow: hidden;\n  text-align: right;\n}\n.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ span img {\n  margin: 0;\n  text-align: right;\n}\n.JTIzpWAWzFszir0t9BAM span.ZfcdU4S5q9EFQYTDAokN {\n  display: block;\n  float: left;\n  margin-right: 13px;\n  overflow: hidden;\n}\n.JTIzpWAWzFszir0t9BAM span.ZfcdU4S5q9EFQYTDAokN span {\n  margin: 13px 0 0;\n}\n.JTIzpWAWzFszir0t9BAM span.RobxFGLXur1Y7UKmUbGc {\n  display: block;\n  float: right;\n  margin-left: 13px;\n  overflow: hidden;\n}\n.JTIzpWAWzFszir0t9BAM span.RobxFGLXur1Y7UKmUbGc > span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: right;\n}\n.JTIzpWAWzFszir0t9BAM code,\n.JTIzpWAWzFszir0t9BAM tt {\n  padding: 0.2em 0.4em;\n  margin: 0;\n  font-size: 85%;\n  white-space: break-spaces;\n  background-color: var(--color-neutral-muted);\n  border-radius: 6px;\n}\n.JTIzpWAWzFszir0t9BAM code br,\n.JTIzpWAWzFszir0t9BAM tt br {\n  display: none;\n}\n.JTIzpWAWzFszir0t9BAM del code {\n  text-decoration: inherit;\n}\n.JTIzpWAWzFszir0t9BAM samp {\n  font-size: 85%;\n}\n.JTIzpWAWzFszir0t9BAM pre code {\n  font-size: 100%;\n}\n.JTIzpWAWzFszir0t9BAM pre > code {\n  padding: 0;\n  margin: 0;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 {\n  margin-bottom: 16px;\n}\n.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 pre,\n.JTIzpWAWzFszir0t9BAM pre {\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: var(--color-canvas-subtle);\n  border-radius: 6px;\n}\n.JTIzpWAWzFszir0t9BAM pre code,\n.JTIzpWAWzFszir0t9BAM pre tt {\n  display: inline;\n  max-width: auto;\n  padding: 0;\n  margin: 0;\n  overflow: visible;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE td,\n.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE th {\n  padding: 5px;\n  overflow: hidden;\n  font-size: 12px;\n  line-height: 1;\n  text-align: left;\n  white-space: nowrap;\n}\n.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE .uoPcs60bZ4EnaQf87ive {\n  padding: 10px 8px 9px;\n  text-align: right;\n  background: var(--color-canvas-default);\n  border: 0;\n}\n.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE tr {\n  border-top: 0;\n}\n.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE th {\n  font-weight: var(--base-text-weight-semibold, 600);\n  background: var(--color-canvas-subtle);\n  border-top: 0;\n}\n.JTIzpWAWzFszir0t9BAM [data-footnote-ref]::before {\n  content: "[";\n}\n.JTIzpWAWzFszir0t9BAM [data-footnote-ref]::after {\n  content: "]";\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w {\n  font-size: 12px;\n  color: var(--color-fg-muted);\n  border-top: 1px solid var(--color-border-default);\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w ol {\n  padding-left: 16px;\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w ol ul {\n  display: inline-block;\n  padding-left: 16px;\n  margin-top: 16px;\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li {\n  position: relative;\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li:target::before {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  bottom: -8px;\n  left: -24px;\n  pointer-events: none;\n  content: "";\n  border: 2px solid var(--color-accent-emphasis);\n  border-radius: 6px;\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li:target {\n  color: var(--color-fg-default);\n}\n.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w .W1_qPHD_fO94HaufTQLQ g-emoji {\n  font-family: monospace;\n}\n.JTIzpWAWzFszir0t9BAM .P76fKaPowM9cpiHuRGin {\n  color: var(--color-prettylights-syntax-comment);\n}\n.JTIzpWAWzFszir0t9BAM .jCt3gvtc9gsxyL04trRl,\n.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .tPRYQQCLRp36BnHeYwTD {\n  color: var(--color-prettylights-syntax-constant);\n}\n.JTIzpWAWzFszir0t9BAM .mS7Czrsi8R4w6uIk9uyV,\n.JTIzpWAWzFszir0t9BAM .fEXlqGWpT9EQeh66CyUA {\n  color: var(--color-prettylights-syntax-entity);\n}\n.JTIzpWAWzFszir0t9BAM .KYRbXZ3_oqIQD_jYmmss,\n.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .Onf1xGhm1CyIKCUqv6Vt {\n  color: var(--color-prettylights-syntax-storage-modifier-import);\n}\n.JTIzpWAWzFszir0t9BAM .bML4Cf9GLbf5q17kpKv6 {\n  color: var(--color-prettylights-syntax-entity-tag);\n}\n.JTIzpWAWzFszir0t9BAM .D3WGOCVXjgPFkMdT5njO {\n  color: var(--color-prettylights-syntax-keyword);\n}\n.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ,\n.JTIzpWAWzFszir0t9BAM .qqPwBDvIt9NfS3oysOeg,\n.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .ngxODS0dsF3_9UYML_jK .Onf1xGhm1CyIKCUqv6Vt,\n.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq,\n.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .alqCJ_RmYevYOsGV2npQ,\n.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq ._JjkFZbcwE5FrjyToawY,\n.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .rpODeGZWpCHdQeJ9iNFh {\n  color: var(--color-prettylights-syntax-string);\n}\n.JTIzpWAWzFszir0t9BAM .tPRYQQCLRp36BnHeYwTD,\n.JTIzpWAWzFszir0t9BAM .UwBKloNe0dpM10LYc9gH {\n  color: var(--color-prettylights-syntax-variable);\n}\n.JTIzpWAWzFszir0t9BAM .YwnHPpSzGb2oO4ckgFiE {\n  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);\n}\n.JTIzpWAWzFszir0t9BAM .xG7JZyGUso7EejDEcqPj {\n  color: var(--color-prettylights-syntax-invalid-illegal-text);\n  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);\n}\n.JTIzpWAWzFszir0t9BAM .HsozdGaRrbnEFskf5GM5 {\n  color: var(--color-prettylights-syntax-carriage-return-text);\n  background-color: var(--color-prettylights-syntax-carriage-return-bg);\n}\n.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .alqCJ_RmYevYOsGV2npQ {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-string-regexp);\n}\n.JTIzpWAWzFszir0t9BAM .QCudWQ_NcGbMAjWek5zw {\n  color: var(--color-prettylights-syntax-markup-list);\n}\n.JTIzpWAWzFszir0t9BAM .vtRO86GQ58WMpNkZmEFb,\n.JTIzpWAWzFszir0t9BAM .vtRO86GQ58WMpNkZmEFb .fEXlqGWpT9EQeh66CyUA,\n.JTIzpWAWzFszir0t9BAM .MOLUJS3ucw2wi08L8owu {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-markup-heading);\n}\n.JTIzpWAWzFszir0t9BAM .aGEFAwvkd7f_tpL163Xx {\n  font-style: italic;\n  color: var(--color-prettylights-syntax-markup-italic);\n}\n.JTIzpWAWzFszir0t9BAM .jKazAlPq8JmjMct4bPxN {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-markup-bold);\n}\n.JTIzpWAWzFszir0t9BAM .BvEH7VV6fJeHNG6aIv7M {\n  color: var(--color-prettylights-syntax-markup-deleted-text);\n  background-color: var(--color-prettylights-syntax-markup-deleted-bg);\n}\n.JTIzpWAWzFszir0t9BAM .t1DHu4D7tHFAdaNdZexf {\n  color: var(--color-prettylights-syntax-markup-inserted-text);\n  background-color: var(--color-prettylights-syntax-markup-inserted-bg);\n}\n.JTIzpWAWzFszir0t9BAM .wgJicwrtajeTkYba3WJS {\n  color: var(--color-prettylights-syntax-markup-changed-text);\n  background-color: var(--color-prettylights-syntax-markup-changed-bg);\n}\n.JTIzpWAWzFszir0t9BAM .nsuM7TFfymO8yvr95F3_ {\n  color: var(--color-prettylights-syntax-markup-ignored-text);\n  background-color: var(--color-prettylights-syntax-markup-ignored-bg);\n}\n.JTIzpWAWzFszir0t9BAM .jPrZaddoZ0MPWaaLf9Hg {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-meta-diff-range);\n}\n.JTIzpWAWzFszir0t9BAM .jkygUO3hOR0HgWl8Vu3I {\n  color: var(--color-prettylights-syntax-brackethighlighter-angle);\n}\n.JTIzpWAWzFszir0t9BAM ._R72N5SC88lk68CWAN9g {\n  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);\n}\n.JTIzpWAWzFszir0t9BAM .HqCHQQDtoZGYCY_Aiuby {\n  text-decoration: underline;\n  color: var(--color-prettylights-syntax-constant-other-reference-link);\n}\n.JTIzpWAWzFszir0t9BAM g-emoji {\n  display: inline-block;\n  min-width: 1ch;\n  font-family: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1em;\n  font-style: normal !important;\n  font-weight: var(--base-text-weight-normal, 400);\n  line-height: 1;\n  vertical-align: -0.075em;\n}\n.JTIzpWAWzFszir0t9BAM g-emoji img {\n  width: 1em;\n  height: 1em;\n}\n.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku {\n  list-style-type: none;\n}\n.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku label {\n  font-weight: var(--base-text-weight-normal, 400);\n}\n.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku.juEHlr9g1BeZBlNEC_bS label {\n  cursor: pointer;\n}\n.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku + .z8yi6slqhr75T9wpK_ku {\n  margin-top: 4px;\n}\n.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku .JXsFqSdSlkBLe8YHtVHc {\n  display: none;\n}\n.JTIzpWAWzFszir0t9BAM .J6bqF00Yji6efKXcYLqA {\n  margin: 0 0.2em 0.25em -1.4em;\n  vertical-align: middle;\n}\n.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:dir(rtl) .J6bqF00Yji6efKXcYLqA {\n  margin: 0 -1.6em 0.25em 0.2em;\n}\n.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3 {\n  position: relative;\n}\n.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:hover .EcA5MpPXXIr0gpYjQhxV,\n.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:focus-within .EcA5MpPXXIr0gpYjQhxV {\n  display: block;\n  width: auto;\n  height: 24px;\n  overflow: visible;\n  clip: auto;\n}\n.JTIzpWAWzFszir0t9BAM ::-webkit-calendar-picker-indicator {\n  filter: invert(50%);\n}\n`,"",{version:3,sources:["webpack://./node_modules/.pnpm/github-markdown-css@5.2.0/node_modules/github-markdown-css/github-markdown.css"],names:[],mappings:"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",sourcesContent:['@media (prefers-color-scheme: dark) {\n  .markdown-body {\n    color-scheme: dark;\n    --color-prettylights-syntax-comment: #8b949e;\n    --color-prettylights-syntax-constant: #79c0ff;\n    --color-prettylights-syntax-entity: #d2a8ff;\n    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n    --color-prettylights-syntax-entity-tag: #7ee787;\n    --color-prettylights-syntax-keyword: #ff7b72;\n    --color-prettylights-syntax-string: #a5d6ff;\n    --color-prettylights-syntax-variable: #ffa657;\n    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n    --color-prettylights-syntax-carriage-return-text: #f0f6fc;\n    --color-prettylights-syntax-carriage-return-bg: #b62324;\n    --color-prettylights-syntax-string-regexp: #7ee787;\n    --color-prettylights-syntax-markup-list: #f2cc60;\n    --color-prettylights-syntax-markup-heading: #1f6feb;\n    --color-prettylights-syntax-markup-italic: #c9d1d9;\n    --color-prettylights-syntax-markup-bold: #c9d1d9;\n    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n    --color-prettylights-syntax-markup-deleted-bg: #67060c;\n    --color-prettylights-syntax-markup-inserted-text: #aff5b4;\n    --color-prettylights-syntax-markup-inserted-bg: #033a16;\n    --color-prettylights-syntax-markup-changed-text: #ffdfb6;\n    --color-prettylights-syntax-markup-changed-bg: #5a1e02;\n    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n    --color-prettylights-syntax-markup-ignored-bg: #1158c7;\n    --color-prettylights-syntax-meta-diff-range: #d2a8ff;\n    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n    --color-fg-default: #c9d1d9;\n    --color-fg-muted: #8b949e;\n    --color-fg-subtle: #6e7681;\n    --color-canvas-default: #0d1117;\n    --color-canvas-subtle: #161b22;\n    --color-border-default: #30363d;\n    --color-border-muted: #21262d;\n    --color-neutral-muted: rgba(110,118,129,0.4);\n    --color-accent-fg: #58a6ff;\n    --color-accent-emphasis: #1f6feb;\n    --color-attention-subtle: rgba(187,128,9,0.15);\n    --color-danger-fg: #f85149;\n  }\n}\n\n@media (prefers-color-scheme: light) {\n  .markdown-body {\n    color-scheme: light;\n    --color-prettylights-syntax-comment: #6e7781;\n    --color-prettylights-syntax-constant: #0550ae;\n    --color-prettylights-syntax-entity: #8250df;\n    --color-prettylights-syntax-storage-modifier-import: #24292f;\n    --color-prettylights-syntax-entity-tag: #116329;\n    --color-prettylights-syntax-keyword: #cf222e;\n    --color-prettylights-syntax-string: #0a3069;\n    --color-prettylights-syntax-variable: #953800;\n    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n    --color-prettylights-syntax-invalid-illegal-bg: #82071e;\n    --color-prettylights-syntax-carriage-return-text: #f6f8fa;\n    --color-prettylights-syntax-carriage-return-bg: #cf222e;\n    --color-prettylights-syntax-string-regexp: #116329;\n    --color-prettylights-syntax-markup-list: #3b2300;\n    --color-prettylights-syntax-markup-heading: #0550ae;\n    --color-prettylights-syntax-markup-italic: #24292f;\n    --color-prettylights-syntax-markup-bold: #24292f;\n    --color-prettylights-syntax-markup-deleted-text: #82071e;\n    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n    --color-prettylights-syntax-markup-inserted-text: #116329;\n    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n    --color-prettylights-syntax-markup-changed-text: #953800;\n    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n    --color-prettylights-syntax-markup-ignored-text: #eaeef2;\n    --color-prettylights-syntax-markup-ignored-bg: #0550ae;\n    --color-prettylights-syntax-meta-diff-range: #8250df;\n    --color-prettylights-syntax-brackethighlighter-angle: #57606a;\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n    --color-prettylights-syntax-constant-other-reference-link: #0a3069;\n    --color-fg-default: #24292f;\n    --color-fg-muted: #57606a;\n    --color-fg-subtle: #6e7781;\n    --color-canvas-default: #ffffff;\n    --color-canvas-subtle: #f6f8fa;\n    --color-border-default: #d0d7de;\n    --color-border-muted: hsla(210,18%,87%,1);\n    --color-neutral-muted: rgba(175,184,193,0.2);\n    --color-accent-fg: #0969da;\n    --color-accent-emphasis: #0969da;\n    --color-attention-subtle: #fff8c5;\n    --color-danger-fg: #cf222e;\n  }\n}\n\n.markdown-body {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  margin: 0;\n  color: var(--color-fg-default);\n  background-color: var(--color-canvas-default);\n  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";\n  font-size: 16px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n\n.markdown-body .octicon {\n  display: inline-block;\n  fill: currentColor;\n  vertical-align: text-bottom;\n}\n\n.markdown-body h1:hover .anchor .octicon-link:before,\n.markdown-body h2:hover .anchor .octicon-link:before,\n.markdown-body h3:hover .anchor .octicon-link:before,\n.markdown-body h4:hover .anchor .octicon-link:before,\n.markdown-body h5:hover .anchor .octicon-link:before,\n.markdown-body h6:hover .anchor .octicon-link:before {\n  width: 16px;\n  height: 16px;\n  content: \' \';\n  display: inline-block;\n  background-color: currentColor;\n  -webkit-mask-image: url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' version=\'1.1\' aria-hidden=\'true\'><path fill-rule=\'evenodd\' d=\'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\'></path></svg>");\n  mask-image: url("data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\' version=\'1.1\' aria-hidden=\'true\'><path fill-rule=\'evenodd\' d=\'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\'></path></svg>");\n}\n\n.markdown-body details,\n.markdown-body figcaption,\n.markdown-body figure {\n  display: block;\n}\n\n.markdown-body summary {\n  display: list-item;\n}\n\n.markdown-body [hidden] {\n  display: none !important;\n}\n\n.markdown-body a {\n  background-color: transparent;\n  color: var(--color-accent-fg);\n  text-decoration: none;\n}\n\n.markdown-body abbr[title] {\n  border-bottom: none;\n  text-decoration: underline dotted;\n}\n\n.markdown-body b,\n.markdown-body strong {\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body dfn {\n  font-style: italic;\n}\n\n.markdown-body h1 {\n  margin: .67em 0;\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: .3em;\n  font-size: 2em;\n  border-bottom: 1px solid var(--color-border-muted);\n}\n\n.markdown-body mark {\n  background-color: var(--color-attention-subtle);\n  color: var(--color-fg-default);\n}\n\n.markdown-body small {\n  font-size: 90%;\n}\n\n.markdown-body sub,\n.markdown-body sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n.markdown-body sub {\n  bottom: -0.25em;\n}\n\n.markdown-body sup {\n  top: -0.5em;\n}\n\n.markdown-body img {\n  border-style: none;\n  max-width: 100%;\n  box-sizing: content-box;\n  background-color: var(--color-canvas-default);\n}\n\n.markdown-body code,\n.markdown-body kbd,\n.markdown-body pre,\n.markdown-body samp {\n  font-family: monospace;\n  font-size: 1em;\n}\n\n.markdown-body figure {\n  margin: 1em 40px;\n}\n\n.markdown-body hr {\n  box-sizing: content-box;\n  overflow: hidden;\n  background: transparent;\n  border-bottom: 1px solid var(--color-border-muted);\n  height: .25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: var(--color-border-default);\n  border: 0;\n}\n\n.markdown-body input {\n  font: inherit;\n  margin: 0;\n  overflow: visible;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.markdown-body [type=button],\n.markdown-body [type=reset],\n.markdown-body [type=submit] {\n  -webkit-appearance: button;\n}\n\n.markdown-body [type=checkbox],\n.markdown-body [type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n.markdown-body [type=number]::-webkit-inner-spin-button,\n.markdown-body [type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n.markdown-body [type=search]::-webkit-search-cancel-button,\n.markdown-body [type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n.markdown-body ::-webkit-input-placeholder {\n  color: inherit;\n  opacity: .54;\n}\n\n.markdown-body ::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\n.markdown-body a:hover {\n  text-decoration: underline;\n}\n\n.markdown-body ::placeholder {\n  color: var(--color-fg-subtle);\n  opacity: 1;\n}\n\n.markdown-body hr::before {\n  display: table;\n  content: "";\n}\n\n.markdown-body hr::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n\n.markdown-body table {\n  border-spacing: 0;\n  border-collapse: collapse;\n  display: block;\n  width: max-content;\n  max-width: 100%;\n  overflow: auto;\n}\n\n.markdown-body td,\n.markdown-body th {\n  padding: 0;\n}\n\n.markdown-body details summary {\n  cursor: pointer;\n}\n\n.markdown-body details:not([open])>*:not(summary) {\n  display: none !important;\n}\n\n.markdown-body a:focus,\n.markdown-body [role=button]:focus,\n.markdown-body input[type=radio]:focus,\n.markdown-body input[type=checkbox]:focus {\n  outline: 2px solid var(--color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n\n.markdown-body a:focus:not(:focus-visible),\n.markdown-body [role=button]:focus:not(:focus-visible),\n.markdown-body input[type=radio]:focus:not(:focus-visible),\n.markdown-body input[type=checkbox]:focus:not(:focus-visible) {\n  outline: solid 1px transparent;\n}\n\n.markdown-body a:focus-visible,\n.markdown-body [role=button]:focus-visible,\n.markdown-body input[type=radio]:focus-visible,\n.markdown-body input[type=checkbox]:focus-visible {\n  outline: 2px solid var(--color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n\n.markdown-body a:not([class]):focus,\n.markdown-body a:not([class]):focus-visible,\n.markdown-body input[type=radio]:focus,\n.markdown-body input[type=radio]:focus-visible,\n.markdown-body input[type=checkbox]:focus,\n.markdown-body input[type=checkbox]:focus-visible {\n  outline-offset: 0;\n}\n\n.markdown-body kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;\n  line-height: 10px;\n  color: var(--color-fg-default);\n  vertical-align: middle;\n  background-color: var(--color-canvas-subtle);\n  border: solid 1px var(--color-neutral-muted);\n  border-bottom-color: var(--color-neutral-muted);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);\n}\n\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 24px;\n  margin-bottom: 16px;\n  font-weight: var(--base-text-weight-semibold, 600);\n  line-height: 1.25;\n}\n\n.markdown-body h2 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: .3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid var(--color-border-muted);\n}\n\n.markdown-body h3 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1.25em;\n}\n\n.markdown-body h4 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1em;\n}\n\n.markdown-body h5 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: .875em;\n}\n\n.markdown-body h6 {\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: .85em;\n  color: var(--color-fg-muted);\n}\n\n.markdown-body p {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.markdown-body blockquote {\n  margin: 0;\n  padding: 0 1em;\n  color: var(--color-fg-muted);\n  border-left: .25em solid var(--color-border-default);\n}\n\n.markdown-body ul,\n.markdown-body ol {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 2em;\n}\n\n.markdown-body ol ol,\n.markdown-body ul ol {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ul ul ol,\n.markdown-body ul ol ol,\n.markdown-body ol ul ol,\n.markdown-body ol ol ol {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body dd {\n  margin-left: 0;\n}\n\n.markdown-body tt,\n.markdown-body code,\n.markdown-body samp {\n  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;\n  font-size: 12px;\n}\n\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;\n  font-size: 12px;\n  word-wrap: normal;\n}\n\n.markdown-body .octicon {\n  display: inline-block;\n  overflow: visible !important;\n  vertical-align: text-bottom;\n  fill: currentColor;\n}\n\n.markdown-body input::-webkit-outer-spin-button,\n.markdown-body input::-webkit-inner-spin-button {\n  margin: 0;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n.markdown-body::before {\n  display: table;\n  content: "";\n}\n\n.markdown-body::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n\n.markdown-body>*:first-child {\n  margin-top: 0 !important;\n}\n\n.markdown-body>*:last-child {\n  margin-bottom: 0 !important;\n}\n\n.markdown-body a:not([href]) {\n  color: inherit;\n  text-decoration: none;\n}\n\n.markdown-body .absent {\n  color: var(--color-danger-fg);\n}\n\n.markdown-body .anchor {\n  float: left;\n  padding-right: 4px;\n  margin-left: -20px;\n  line-height: 1;\n}\n\n.markdown-body .anchor:focus {\n  outline: none;\n}\n\n.markdown-body p,\n.markdown-body blockquote,\n.markdown-body ul,\n.markdown-body ol,\n.markdown-body dl,\n.markdown-body table,\n.markdown-body pre,\n.markdown-body details {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n\n.markdown-body blockquote>:first-child {\n  margin-top: 0;\n}\n\n.markdown-body blockquote>:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-body h1 .octicon-link,\n.markdown-body h2 .octicon-link,\n.markdown-body h3 .octicon-link,\n.markdown-body h4 .octicon-link,\n.markdown-body h5 .octicon-link,\n.markdown-body h6 .octicon-link {\n  color: var(--color-fg-default);\n  vertical-align: middle;\n  visibility: hidden;\n}\n\n.markdown-body h1:hover .anchor,\n.markdown-body h2:hover .anchor,\n.markdown-body h3:hover .anchor,\n.markdown-body h4:hover .anchor,\n.markdown-body h5:hover .anchor,\n.markdown-body h6:hover .anchor {\n  text-decoration: none;\n}\n\n.markdown-body h1:hover .anchor .octicon-link,\n.markdown-body h2:hover .anchor .octicon-link,\n.markdown-body h3:hover .anchor .octicon-link,\n.markdown-body h4:hover .anchor .octicon-link,\n.markdown-body h5:hover .anchor .octicon-link,\n.markdown-body h6:hover .anchor .octicon-link {\n  visibility: visible;\n}\n\n.markdown-body h1 tt,\n.markdown-body h1 code,\n.markdown-body h2 tt,\n.markdown-body h2 code,\n.markdown-body h3 tt,\n.markdown-body h3 code,\n.markdown-body h4 tt,\n.markdown-body h4 code,\n.markdown-body h5 tt,\n.markdown-body h5 code,\n.markdown-body h6 tt,\n.markdown-body h6 code {\n  padding: 0 .2em;\n  font-size: inherit;\n}\n\n.markdown-body summary h1,\n.markdown-body summary h2,\n.markdown-body summary h3,\n.markdown-body summary h4,\n.markdown-body summary h5,\n.markdown-body summary h6 {\n  display: inline-block;\n}\n\n.markdown-body summary h1 .anchor,\n.markdown-body summary h2 .anchor,\n.markdown-body summary h3 .anchor,\n.markdown-body summary h4 .anchor,\n.markdown-body summary h5 .anchor,\n.markdown-body summary h6 .anchor {\n  margin-left: -40px;\n}\n\n.markdown-body summary h1,\n.markdown-body summary h2 {\n  padding-bottom: 0;\n  border-bottom: 0;\n}\n\n.markdown-body ul.no-list,\n.markdown-body ol.no-list {\n  padding: 0;\n  list-style-type: none;\n}\n\n.markdown-body ol[type=a] {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body ol[type=A] {\n  list-style-type: upper-alpha;\n}\n\n.markdown-body ol[type=i] {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ol[type=I] {\n  list-style-type: upper-roman;\n}\n\n.markdown-body ol[type="1"] {\n  list-style-type: decimal;\n}\n\n.markdown-body div>ol:not([type]) {\n  list-style-type: decimal;\n}\n\n.markdown-body ul ul,\n.markdown-body ul ol,\n.markdown-body ol ol,\n.markdown-body ol ul {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body li>p {\n  margin-top: 16px;\n}\n\n.markdown-body li+li {\n  margin-top: .25em;\n}\n\n.markdown-body dl {\n  padding: 0;\n}\n\n.markdown-body dl dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body dl dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n\n.markdown-body table th {\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body table th,\n.markdown-body table td {\n  padding: 6px 13px;\n  border: 1px solid var(--color-border-default);\n}\n\n.markdown-body table tr {\n  background-color: var(--color-canvas-default);\n  border-top: 1px solid var(--color-border-muted);\n}\n\n.markdown-body table tr:nth-child(2n) {\n  background-color: var(--color-canvas-subtle);\n}\n\n.markdown-body table img {\n  background-color: transparent;\n}\n\n.markdown-body img[align=right] {\n  padding-left: 20px;\n}\n\n.markdown-body img[align=left] {\n  padding-right: 20px;\n}\n\n.markdown-body .emoji {\n  max-width: none;\n  vertical-align: text-top;\n  background-color: transparent;\n}\n\n.markdown-body span.frame {\n  display: block;\n  overflow: hidden;\n}\n\n.markdown-body span.frame>span {\n  display: block;\n  float: left;\n  width: auto;\n  padding: 7px;\n  margin: 13px 0 0;\n  overflow: hidden;\n  border: 1px solid var(--color-border-default);\n}\n\n.markdown-body span.frame span img {\n  display: block;\n  float: left;\n}\n\n.markdown-body span.frame span span {\n  display: block;\n  padding: 5px 0 0;\n  clear: both;\n  color: var(--color-fg-default);\n}\n\n.markdown-body span.align-center {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n\n.markdown-body span.align-center>span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: center;\n}\n\n.markdown-body span.align-center span img {\n  margin: 0 auto;\n  text-align: center;\n}\n\n.markdown-body span.align-right {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n\n.markdown-body span.align-right>span {\n  display: block;\n  margin: 13px 0 0;\n  overflow: hidden;\n  text-align: right;\n}\n\n.markdown-body span.align-right span img {\n  margin: 0;\n  text-align: right;\n}\n\n.markdown-body span.float-left {\n  display: block;\n  float: left;\n  margin-right: 13px;\n  overflow: hidden;\n}\n\n.markdown-body span.float-left span {\n  margin: 13px 0 0;\n}\n\n.markdown-body span.float-right {\n  display: block;\n  float: right;\n  margin-left: 13px;\n  overflow: hidden;\n}\n\n.markdown-body span.float-right>span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: right;\n}\n\n.markdown-body code,\n.markdown-body tt {\n  padding: .2em .4em;\n  margin: 0;\n  font-size: 85%;\n  white-space: break-spaces;\n  background-color: var(--color-neutral-muted);\n  border-radius: 6px;\n}\n\n.markdown-body code br,\n.markdown-body tt br {\n  display: none;\n}\n\n.markdown-body del code {\n  text-decoration: inherit;\n}\n\n.markdown-body samp {\n  font-size: 85%;\n}\n\n.markdown-body pre code {\n  font-size: 100%;\n}\n\n.markdown-body pre>code {\n  padding: 0;\n  margin: 0;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n\n.markdown-body .highlight {\n  margin-bottom: 16px;\n}\n\n.markdown-body .highlight pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n\n.markdown-body .highlight pre,\n.markdown-body pre {\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: var(--color-canvas-subtle);\n  border-radius: 6px;\n}\n\n.markdown-body pre code,\n.markdown-body pre tt {\n  display: inline;\n  max-width: auto;\n  padding: 0;\n  margin: 0;\n  overflow: visible;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n\n.markdown-body .csv-data td,\n.markdown-body .csv-data th {\n  padding: 5px;\n  overflow: hidden;\n  font-size: 12px;\n  line-height: 1;\n  text-align: left;\n  white-space: nowrap;\n}\n\n.markdown-body .csv-data .blob-num {\n  padding: 10px 8px 9px;\n  text-align: right;\n  background: var(--color-canvas-default);\n  border: 0;\n}\n\n.markdown-body .csv-data tr {\n  border-top: 0;\n}\n\n.markdown-body .csv-data th {\n  font-weight: var(--base-text-weight-semibold, 600);\n  background: var(--color-canvas-subtle);\n  border-top: 0;\n}\n\n.markdown-body [data-footnote-ref]::before {\n  content: "[";\n}\n\n.markdown-body [data-footnote-ref]::after {\n  content: "]";\n}\n\n.markdown-body .footnotes {\n  font-size: 12px;\n  color: var(--color-fg-muted);\n  border-top: 1px solid var(--color-border-default);\n}\n\n.markdown-body .footnotes ol {\n  padding-left: 16px;\n}\n\n.markdown-body .footnotes ol ul {\n  display: inline-block;\n  padding-left: 16px;\n  margin-top: 16px;\n}\n\n.markdown-body .footnotes li {\n  position: relative;\n}\n\n.markdown-body .footnotes li:target::before {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  bottom: -8px;\n  left: -24px;\n  pointer-events: none;\n  content: "";\n  border: 2px solid var(--color-accent-emphasis);\n  border-radius: 6px;\n}\n\n.markdown-body .footnotes li:target {\n  color: var(--color-fg-default);\n}\n\n.markdown-body .footnotes .data-footnote-backref g-emoji {\n  font-family: monospace;\n}\n\n.markdown-body .pl-c {\n  color: var(--color-prettylights-syntax-comment);\n}\n\n.markdown-body .pl-c1,\n.markdown-body .pl-s .pl-v {\n  color: var(--color-prettylights-syntax-constant);\n}\n\n.markdown-body .pl-e,\n.markdown-body .pl-en {\n  color: var(--color-prettylights-syntax-entity);\n}\n\n.markdown-body .pl-smi,\n.markdown-body .pl-s .pl-s1 {\n  color: var(--color-prettylights-syntax-storage-modifier-import);\n}\n\n.markdown-body .pl-ent {\n  color: var(--color-prettylights-syntax-entity-tag);\n}\n\n.markdown-body .pl-k {\n  color: var(--color-prettylights-syntax-keyword);\n}\n\n.markdown-body .pl-s,\n.markdown-body .pl-pds,\n.markdown-body .pl-s .pl-pse .pl-s1,\n.markdown-body .pl-sr,\n.markdown-body .pl-sr .pl-cce,\n.markdown-body .pl-sr .pl-sre,\n.markdown-body .pl-sr .pl-sra {\n  color: var(--color-prettylights-syntax-string);\n}\n\n.markdown-body .pl-v,\n.markdown-body .pl-smw {\n  color: var(--color-prettylights-syntax-variable);\n}\n\n.markdown-body .pl-bu {\n  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);\n}\n\n.markdown-body .pl-ii {\n  color: var(--color-prettylights-syntax-invalid-illegal-text);\n  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);\n}\n\n.markdown-body .pl-c2 {\n  color: var(--color-prettylights-syntax-carriage-return-text);\n  background-color: var(--color-prettylights-syntax-carriage-return-bg);\n}\n\n.markdown-body .pl-sr .pl-cce {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-string-regexp);\n}\n\n.markdown-body .pl-ml {\n  color: var(--color-prettylights-syntax-markup-list);\n}\n\n.markdown-body .pl-mh,\n.markdown-body .pl-mh .pl-en,\n.markdown-body .pl-ms {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-markup-heading);\n}\n\n.markdown-body .pl-mi {\n  font-style: italic;\n  color: var(--color-prettylights-syntax-markup-italic);\n}\n\n.markdown-body .pl-mb {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-markup-bold);\n}\n\n.markdown-body .pl-md {\n  color: var(--color-prettylights-syntax-markup-deleted-text);\n  background-color: var(--color-prettylights-syntax-markup-deleted-bg);\n}\n\n.markdown-body .pl-mi1 {\n  color: var(--color-prettylights-syntax-markup-inserted-text);\n  background-color: var(--color-prettylights-syntax-markup-inserted-bg);\n}\n\n.markdown-body .pl-mc {\n  color: var(--color-prettylights-syntax-markup-changed-text);\n  background-color: var(--color-prettylights-syntax-markup-changed-bg);\n}\n\n.markdown-body .pl-mi2 {\n  color: var(--color-prettylights-syntax-markup-ignored-text);\n  background-color: var(--color-prettylights-syntax-markup-ignored-bg);\n}\n\n.markdown-body .pl-mdr {\n  font-weight: bold;\n  color: var(--color-prettylights-syntax-meta-diff-range);\n}\n\n.markdown-body .pl-ba {\n  color: var(--color-prettylights-syntax-brackethighlighter-angle);\n}\n\n.markdown-body .pl-sg {\n  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);\n}\n\n.markdown-body .pl-corl {\n  text-decoration: underline;\n  color: var(--color-prettylights-syntax-constant-other-reference-link);\n}\n\n.markdown-body g-emoji {\n  display: inline-block;\n  min-width: 1ch;\n  font-family: "Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";\n  font-size: 1em;\n  font-style: normal !important;\n  font-weight: var(--base-text-weight-normal, 400);\n  line-height: 1;\n  vertical-align: -0.075em;\n}\n\n.markdown-body g-emoji img {\n  width: 1em;\n  height: 1em;\n}\n\n.markdown-body .task-list-item {\n  list-style-type: none;\n}\n\n.markdown-body .task-list-item label {\n  font-weight: var(--base-text-weight-normal, 400);\n}\n\n.markdown-body .task-list-item.enabled label {\n  cursor: pointer;\n}\n\n.markdown-body .task-list-item+.task-list-item {\n  margin-top: 4px;\n}\n\n.markdown-body .task-list-item .handle {\n  display: none;\n}\n\n.markdown-body .task-list-item-checkbox {\n  margin: 0 .2em .25em -1.4em;\n  vertical-align: middle;\n}\n\n.markdown-body .contains-task-list:dir(rtl) .task-list-item-checkbox {\n  margin: 0 -1.6em .25em .2em;\n}\n\n.markdown-body .contains-task-list {\n  position: relative;\n}\n\n.markdown-body .contains-task-list:hover .task-list-item-convert-container,\n.markdown-body .contains-task-list:focus-within .task-list-item-convert-container {\n  display: block;\n  width: auto;\n  height: 24px;\n  overflow: visible;\n  clip: auto;\n}\n\n.markdown-body ::-webkit-calendar-picker-indicator {\n  filter: invert(50%);\n}\n'],sourceRoot:""}]),c.locals={"markdown-body":"JTIzpWAWzFszir0t9BAM",octicon:"ZtsvEhcDSF51AlNAw5bX",anchor:"XGxKfA1eh75FuEQvL6pd","octicon-link":"dWtgNrd2FLAIgXW_saQM",absent:"IA6SgHbm0Y7OBhOVhkTA","no-list":"Ah464Xli3hvh5g0FxDU6",emoji:"ZS4ACM_E97QtVXIrTh0v",frame:"lDnbOZAfGYELmWGezfML","align-center":"eu2h77uDdxK5MXdfeTZw","align-right":"JTSEVjrxW64bL21abrdJ","float-left":"ZfcdU4S5q9EFQYTDAokN","float-right":"RobxFGLXur1Y7UKmUbGc",highlight:"VdUq4nEhjxaTJ35ZWZj3","csv-data":"qJTkIFPsS1XetkWVe1wE","blob-num":"uoPcs60bZ4EnaQf87ive",footnotes:"_Pddb2RnH2cX9eUvgC3w","data-footnote-backref":"W1_qPHD_fO94HaufTQLQ","pl-c":"P76fKaPowM9cpiHuRGin","pl-c1":"jCt3gvtc9gsxyL04trRl","pl-s":"zuy7DTbEbDxX3x9iJjsQ","pl-v":"tPRYQQCLRp36BnHeYwTD","pl-e":"mS7Czrsi8R4w6uIk9uyV","pl-en":"fEXlqGWpT9EQeh66CyUA","pl-smi":"KYRbXZ3_oqIQD_jYmmss","pl-s1":"Onf1xGhm1CyIKCUqv6Vt","pl-ent":"bML4Cf9GLbf5q17kpKv6","pl-k":"D3WGOCVXjgPFkMdT5njO","pl-pds":"qqPwBDvIt9NfS3oysOeg","pl-pse":"ngxODS0dsF3_9UYML_jK","pl-sr":"zCzAZcbA0HMroij1e7Zq","pl-cce":"alqCJ_RmYevYOsGV2npQ","pl-sre":"_JjkFZbcwE5FrjyToawY","pl-sra":"rpODeGZWpCHdQeJ9iNFh","pl-smw":"UwBKloNe0dpM10LYc9gH","pl-bu":"YwnHPpSzGb2oO4ckgFiE","pl-ii":"xG7JZyGUso7EejDEcqPj","pl-c2":"HsozdGaRrbnEFskf5GM5","pl-ml":"QCudWQ_NcGbMAjWek5zw","pl-mh":"vtRO86GQ58WMpNkZmEFb","pl-ms":"MOLUJS3ucw2wi08L8owu","pl-mi":"aGEFAwvkd7f_tpL163Xx","pl-mb":"jKazAlPq8JmjMct4bPxN","pl-md":"BvEH7VV6fJeHNG6aIv7M","pl-mi1":"t1DHu4D7tHFAdaNdZexf","pl-mc":"wgJicwrtajeTkYba3WJS","pl-mi2":"nsuM7TFfymO8yvr95F3_","pl-mdr":"jPrZaddoZ0MPWaaLf9Hg","pl-ba":"jkygUO3hOR0HgWl8Vu3I","pl-sg":"_R72N5SC88lk68CWAN9g","pl-corl":"HqCHQQDtoZGYCY_Aiuby","task-list-item":"z8yi6slqhr75T9wpK_ku",enabled:"juEHlr9g1BeZBlNEC_bS",handle:"JXsFqSdSlkBLe8YHtVHc","task-list-item-checkbox":"J6bqF00Yji6efKXcYLqA","contains-task-list":"tpfsYJHavqwf9F0ociP3","task-list-item-convert-container":"EcA5MpPXXIr0gpYjQhxV"};const p=c},6668:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},4573:(n,e,t)=>{t.d(e,{wT:()=>Sn,Ds:()=>Dn});var r=t(959),o=t(422),i=t(5924);let a={data:""},s=n=>"object"==typeof window?((n?n.querySelector("#_goober"):window._goober)||Object.assign((n||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:n||a,l=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,A=/\/\*[^]*?\*\/|  +/g,c=/\n+/g,d=(n,e)=>{let t="",r="",o="";for(let i in n){let a=n[i];"@"==i[0]?"i"==i[1]?t=i+" "+a+";":r+="f"==i[1]?d(a,i):i+"{"+d(a,"k"==i[1]?"":e)+"}":"object"==typeof a?r+=d(a,e?e.replace(/([^,])+/g,(n=>i.replace(/(^:.*)|([^,])+/g,(e=>/&/.test(e)?e.replace(/&/g,n):n?n+" "+e:e)))):i):null!=a&&(i=/^--/.test(i)?i:i.replace(/[A-Z]/g,"-$&").toLowerCase(),o+=d.p?d.p(i,a):i+":"+a+";")}return t+(e&&o?e+"{"+o+"}":o)+r},p={},u=n=>{if("object"==typeof n){let e="";for(let t in n)e+=t+u(n[t]);return e}return n},h=(n,e,t,r,o)=>{let i=u(n),a=p[i]||(p[i]=(n=>{let e=0,t=11;for(;e<n.length;)t=101*t+n.charCodeAt(e++)>>>0;return"go"+t})(i));if(!p[a]){let e=i!==n?n:(n=>{let e,t,r=[{}];for(;e=l.exec(n.replace(A,""));)e[4]?r.shift():e[3]?(t=e[3].replace(c," ").trim(),r.unshift(r[0][t]=r[0][t]||{})):r[0][e[1]]=e[2].replace(c," ").trim();return r[0]})(n);p[a]=d(o?{["@keyframes "+a]:e}:e,t?"":"."+a)}let s=t&&p.g?p.g:null;return t&&(p.g=p[a]),((n,e,t,r)=>{r?e.data=e.data.replace(r,n):-1===e.data.indexOf(n)&&(e.data=t?n+e.data:e.data+n)})(p[a],e,r,s),a},g=(n,e,t)=>n.reduce(((n,r,o)=>{let i=e[o];if(i&&i.call){let n=i(t),e=n&&n.props&&n.props.className||/^go/.test(n)&&n;i=e?"."+e:n&&"object"==typeof n?n.props?"":d(n,""):!1===n?"":n}return n+r+(null==i?"":i)}),"");function m(n){let e=this||{},t=n.call?n(e.p):n;return h(t.unshift?t.raw?g(t,[].slice.call(arguments,1),e.p):t.reduce(((n,t)=>Object.assign(n,t&&t.call?t(e.p):t)),{}):t,s(e.target),e.g,e.o,e.k)}function b(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function f(n,e,t){return e&&b(n.prototype,e),t&&b(n,t),n}function y(){return y=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},y.apply(this,arguments)}function k(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}function x(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}function z(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}m.bind({g:1}),m.bind({k:1});var E=function(){return""},w=r.createContext({enqueueSnackbar:E,closeSnackbar:E}),v="@media (max-width:599.95px)",C="@media (min-width:600px)",W=function(n){return n.charAt(0).toUpperCase()+n.slice(1)},F=function(n){return""+W(n.vertical)+W(n.horizontal)},I=function(n){return!!n||0===n},B="unmounted",M="exited",T="entering",J="entered",S="exiting",D=function(n){function e(e){var t;t=n.call(this,e)||this;var r,o=e.appear;return t.appearStatus=null,e.in?o?(r=M,t.appearStatus=T):r=J:r=e.unmountOnExit||e.mountOnEnter?B:M,t.state={status:r},t.nextCallback=null,t}k(e,n),e.getDerivedStateFromProps=function(n,e){return n.in&&e.status===B?{status:M}:null};var t=e.prototype;return t.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},t.componentDidUpdate=function(n){var e=null;if(n!==this.props){var t=this.state.status;this.props.in?t!==T&&t!==J&&(e=T):t!==T&&t!==J||(e=S)}this.updateStatus(!1,e)},t.componentWillUnmount=function(){this.cancelNextCallback()},t.getTimeouts=function(){var n=this.props.timeout,e=n,t=n;return null!=n&&"number"!=typeof n&&"string"!=typeof n&&(t=n.exit,e=n.enter),{exit:t,enter:e}},t.updateStatus=function(n,e){void 0===n&&(n=!1),null!==e?(this.cancelNextCallback(),e===T?this.performEnter(n):this.performExit()):this.props.unmountOnExit&&this.state.status===M&&this.setState({status:B})},t.performEnter=function(n){var e=this,t=this.props.enter,r=n,o=this.getTimeouts();n||t?(this.props.onEnter&&this.props.onEnter(this.node,r),this.safeSetState({status:T},(function(){e.props.onEntering&&e.props.onEntering(e.node,r),e.onTransitionEnd(o.enter,(function(){e.safeSetState({status:J},(function(){e.props.onEntered&&e.props.onEntered(e.node,r)}))}))}))):this.safeSetState({status:J},(function(){e.props.onEntered&&e.props.onEntered(e.node,r)}))},t.performExit=function(){var n=this,e=this.props.exit,t=this.getTimeouts();e?(this.props.onExit&&this.props.onExit(this.node),this.safeSetState({status:S},(function(){n.props.onExiting&&n.props.onExiting(n.node),n.onTransitionEnd(t.exit,(function(){n.safeSetState({status:M},(function(){n.props.onExited&&n.props.onExited(n.node)}))}))}))):this.safeSetState({status:M},(function(){n.props.onExited&&n.props.onExited(n.node)}))},t.cancelNextCallback=function(){null!==this.nextCallback&&this.nextCallback.cancel&&(this.nextCallback.cancel(),this.nextCallback=null)},t.safeSetState=function(n,e){e=this.setNextCallback(e),this.setState(n,e)},t.setNextCallback=function(n){var e=this,t=!0;return this.nextCallback=function(){t&&(t=!1,e.nextCallback=null,n())},this.nextCallback.cancel=function(){t=!1},this.nextCallback},t.onTransitionEnd=function(n,e){this.setNextCallback(e);var t=null==n&&!this.props.addEndListener;this.node&&!t?(this.props.addEndListener&&this.props.addEndListener(this.node,this.nextCallback),null!=n&&setTimeout(this.nextCallback,n)):setTimeout(this.nextCallback,0)},t.render=function(){var n=this.state.status;if(n===B)return null;var e=this.props;return(0,e.children)(n,x(e,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]))},f(e,[{key:"node",get:function(){var n,e=null===(n=this.props.nodeRef)||void 0===n?void 0:n.current;if(!e)throw new Error("notistack - Custom snackbar is not refForwarding");return e}}]),e}(r.Component);function Z(){}function _(n,e){"function"==typeof n?n(e):n&&(n.current=e)}function L(n,e){return(0,r.useMemo)((function(){return null==n&&null==e?null:function(t){_(n,t),_(e,t)}}),[n,e])}function $(n){var e=n.timeout,t=n.style,r=void 0===t?{}:t,o=n.mode;return{duration:"object"==typeof e?e[o]||0:e,easing:r.transitionTimingFunction,delay:r.transitionDelay}}D.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:Z,onEntering:Z,onEntered:Z,onExit:Z,onExiting:Z,onExited:Z};var R=function(n){n.scrollTop=n.scrollTop},q=function(n){return Math.round(n)+"ms"};function j(n,e){void 0===n&&(n=["all"]);var t=e||{},r=t.duration,o=void 0===r?300:r,i=t.easing,a=void 0===i?"cubic-bezier(0.4, 0, 0.2, 1)":i,s=t.delay,l=void 0===s?0:s;return(Array.isArray(n)?n:[n]).map((function(n){var e="string"==typeof o?o:q(o),t="string"==typeof l?l:q(l);return n+" "+e+" "+a+" "+t})).join(",")}function G(n){var e=function(n){return n&&n.ownerDocument||document}(n);return e.defaultView||window}function O(n,e){if(e){var t=function(n,e){var t,r=e.getBoundingClientRect(),o=G(e);if(e.fakeTransform)t=e.fakeTransform;else{var i=o.getComputedStyle(e);t=i.getPropertyValue("-webkit-transform")||i.getPropertyValue("transform")}var a=0,s=0;if(t&&"none"!==t&&"string"==typeof t){var l=t.split("(")[1].split(")")[0].split(",");a=parseInt(l[4],10),s=parseInt(l[5],10)}switch(n){case"left":return"translateX("+(o.innerWidth+a-r.left)+"px)";case"right":return"translateX(-"+(r.left+r.width-a)+"px)";case"up":return"translateY("+(o.innerHeight+s-r.top)+"px)";default:return"translateY(-"+(r.top+r.height-s)+"px)"}}(n,e);t&&(e.style.webkitTransform=t,e.style.transform=t)}}var H=(0,r.forwardRef)((function(n,e){var t=n.children,o=n.direction,i=void 0===o?"down":o,a=n.in,s=n.style,l=n.timeout,A=void 0===l?0:l,c=n.onEnter,d=n.onEntered,p=n.onExit,u=n.onExited,h=x(n,["children","direction","in","style","timeout","onEnter","onEntered","onExit","onExited"]),g=(0,r.useRef)(null),m=L(t.ref,g),b=L(m,e),f=(0,r.useCallback)((function(){g.current&&O(i,g.current)}),[i]);return(0,r.useEffect)((function(){if(!a&&"down"!==i&&"right"!==i){var n=function(n,e){var t;function r(){for(var r=this,o=arguments.length,i=new Array(o),a=0;a<o;a++)i[a]=arguments[a];clearTimeout(t),t=setTimeout((function(){n.apply(r,i)}),e)}return void 0===e&&(e=166),r.clear=function(){clearTimeout(t)},r}((function(){g.current&&O(i,g.current)})),e=G(g.current);return e.addEventListener("resize",n),function(){n.clear(),e.removeEventListener("resize",n)}}}),[i,a]),(0,r.useEffect)((function(){a||f()}),[a,f]),(0,r.createElement)(D,Object.assign({appear:!0,nodeRef:g,onEnter:function(n,e){O(i,n),R(n),c&&c(n,e)},onEntered:d,onEntering:function(n){var e=(null==s?void 0:s.transitionTimingFunction)||"cubic-bezier(0.0, 0, 0.2, 1)",t=$({timeout:A,mode:"enter",style:y({},s,{transitionTimingFunction:e})});n.style.webkitTransition=j("-webkit-transform",t),n.style.transition=j("transform",t),n.style.webkitTransform="none",n.style.transform="none"},onExit:function(n){var e=(null==s?void 0:s.transitionTimingFunction)||"cubic-bezier(0.4, 0, 0.6, 1)",t=$({timeout:A,mode:"exit",style:y({},s,{transitionTimingFunction:e})});n.style.webkitTransition=j("-webkit-transform",t),n.style.transition=j("transform",t),O(i,n),p&&p(n)},onExited:function(n){n.style.webkitTransition="",n.style.transition="",u&&u(n)},in:a,timeout:A},h),(function(n,e){return(0,r.cloneElement)(t,y({ref:b,style:y({visibility:"exited"!==n||a?void 0:"hidden"},s,{},t.props.style)},e))}))}));H.displayName="Slide";var P=function(n){return r.createElement("svg",Object.assign({viewBox:"0 0 24 24",focusable:"false",style:{fontSize:20,marginInlineEnd:8,userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0}},n))},N=function(){return r.createElement(P,null,r.createElement("path",{d:"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z"}))},Q=function(){return r.createElement(P,null,r.createElement("path",{d:"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"}))},X=function(){return r.createElement(P,null,r.createElement("path",{d:"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z"}))},K=function(){return r.createElement(P,null,r.createElement("path",{d:"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z"}))},U={maxSnack:3,persist:!1,hideIconVariant:!1,disableWindowBlurListener:!1,variant:"default",autoHideDuration:5e3,iconVariant:{default:void 0,success:r.createElement(N,null),warning:r.createElement(Q,null),error:r.createElement(X,null),info:r.createElement(K,null)},anchorOrigin:{vertical:"bottom",horizontal:"left"},TransitionComponent:H,transitionDuration:{enter:225,exit:195}};function V(n){return Object.entries(n).reduce((function(n,e){var t,r=e[0],o=e[1];return y({},n,((t={})[r]=m(o),t))}),{})}var Y="notistack-CollapseWrapper",nn=function(n){return"notistack-MuiContent-"+n},en=V({root:{height:0},entered:{height:"auto"}}),tn="0px",rn=(0,r.forwardRef)((function(n,e){var t=n.children,o=n.in,a=n.onExited,s=(0,r.useRef)(null),l=(0,r.useRef)(null),A=L(e,l),c=function(){return s.current?s.current.clientHeight:0};return(0,r.createElement)(D,{in:o,unmountOnExit:!0,onEnter:function(n){n.style.height=tn},onEntered:function(n){n.style.height="auto"},onEntering:function(n){var e=c(),t=$({timeout:175,mode:"enter"}),r=t.duration,o=t.easing;n.style.transitionDuration="string"==typeof r?r:r+"ms",n.style.height=e+"px",n.style.transitionTimingFunction=o||""},onExit:function(n){n.style.height=c()+"px"},onExited:a,onExiting:function(n){R(n);var e=$({timeout:175,mode:"exit"}),t=e.duration,r=e.easing;n.style.transitionDuration="string"==typeof t?t:t+"ms",n.style.height=tn,n.style.transitionTimingFunction=r||""},nodeRef:l,timeout:175},(function(n,e){return(0,r.createElement)("div",Object.assign({ref:A,className:(0,i.Z)(en.root,"entered"===n&&en.entered),style:y({pointerEvents:"all",overflow:"hidden",minHeight:tn,transition:j("height")},"entered"===n&&{overflow:"visible"},{},"exited"===n&&!o&&{visibility:"hidden"})},e),(0,r.createElement)("div",{ref:s,className:Y,style:{display:"flex",width:"100%"}},t))}))}));rn.displayName="Collapse";var on={right:"left",left:"right",bottom:"up",top:"down"},an=function(n){return"anchorOrigin"+F(n)},sn=function(){};function ln(n,e){return n.reduce((function(n,t){return null==t?n:function(){for(var r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];var a=[].concat(o);e&&-1===a.indexOf(e)&&a.push(e),n.apply(this,a),t.apply(this,a)}}),sn)}var An="undefined"!=typeof window?r.useLayoutEffect:r.useEffect;function cn(n){var e=(0,r.useRef)(n);return An((function(){e.current=n})),(0,r.useCallback)((function(){return e.current.apply(void 0,arguments)}),[])}var dn,pn=(0,r.forwardRef)((function(n,e){var t=n.children,o=n.className,a=n.autoHideDuration,s=n.disableWindowBlurListener,l=void 0!==s&&s,A=n.onClose,c=n.id,d=n.open,p=n.SnackbarProps,u=void 0===p?{}:p,h=(0,r.useRef)(),g=cn((function(){A&&A.apply(void 0,arguments)})),m=cn((function(n){A&&null!=n&&(h.current&&clearTimeout(h.current),h.current=setTimeout((function(){g(null,"timeout",c)}),n))}));(0,r.useEffect)((function(){return d&&m(a),function(){h.current&&clearTimeout(h.current)}}),[d,a,m]);var b=function(){h.current&&clearTimeout(h.current)},f=(0,r.useCallback)((function(){null!=a&&m(.5*a)}),[a,m]);return(0,r.useEffect)((function(){if(!l&&d)return window.addEventListener("focus",f),window.addEventListener("blur",b),function(){window.removeEventListener("focus",f),window.removeEventListener("blur",b)}}),[l,f,d]),(0,r.createElement)("div",Object.assign({ref:e},u,{className:(0,i.Z)("notistack-Snackbar",o),onMouseEnter:function(n){u.onMouseEnter&&u.onMouseEnter(n),b()},onMouseLeave:function(n){u.onMouseLeave&&u.onMouseLeave(n),f()}}),t)}));pn.displayName="Snackbar";var un=V({root:(dn={display:"flex",flexWrap:"wrap",flexGrow:1},dn[C]={flexGrow:"initial",minWidth:"288px"},dn)}),hn=(0,r.forwardRef)((function(n,e){var t=n.className,o=x(n,["className"]);return r.createElement("div",Object.assign({ref:e,className:(0,i.Z)(un.root,t)},o))}));hn.displayName="SnackbarContent";var gn=V({root:{backgroundColor:"#313131",fontSize:"0.875rem",lineHeight:1.43,letterSpacing:"0.01071em",color:"#fff",alignItems:"center",padding:"6px 16px",borderRadius:"4px",boxShadow:"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)"},lessPadding:{paddingLeft:"20px"},default:{backgroundColor:"#313131"},success:{backgroundColor:"#43a047"},error:{backgroundColor:"#d32f2f"},warning:{backgroundColor:"#ff9800"},info:{backgroundColor:"#2196f3"},message:{display:"flex",alignItems:"center",padding:"8px 0"},action:{display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:"16px",marginRight:"-8px"}}),mn="notistack-snackbar",bn=(0,r.forwardRef)((function(n,e){var t=n.id,o=n.message,a=n.action,s=n.iconVariant,l=n.variant,A=n.hideIconVariant,c=n.style,d=n.className,p=s[l],u=a;return"function"==typeof u&&(u=u(t)),r.createElement(hn,{ref:e,role:"alert","aria-describedby":mn,style:c,className:(0,i.Z)("notistack-MuiContent",nn(l),gn.root,gn[l],d,!A&&p&&gn.lessPadding)},r.createElement("div",{id:mn,className:gn.message},A?null:p,o),u&&r.createElement("div",{className:gn.action},u))}));bn.displayName="MaterialDesignContent";var fn,yn,kn,xn,zn,En=(0,r.memo)(bn),wn=V({wrappedRoot:{width:"100%",position:"relative",transform:"translateX(0)",top:0,right:0,bottom:0,left:0,minWidth:"288px"}}),vn=function(n){var e=(0,r.useRef)(),t=(0,r.useState)(!0),o=t[0],a=t[1],s=ln([n.snack.onClose,n.onClose]),l=(0,r.useCallback)((function(){e.current=setTimeout((function(){a((function(n){return!n}))}),125)}),[]);(0,r.useEffect)((function(){return function(){e.current&&clearTimeout(e.current)}}),[]);var A,c=n.snack,d=n.classes,p=n.Component,u=void 0===p?En:p,h=(0,r.useMemo)((function(){return function(n){void 0===n&&(n={});var e={containerRoot:!0,containerAnchorOriginTopCenter:!0,containerAnchorOriginBottomCenter:!0,containerAnchorOriginTopRight:!0,containerAnchorOriginBottomRight:!0,containerAnchorOriginTopLeft:!0,containerAnchorOriginBottomLeft:!0};return Object.keys(n).filter((function(n){return!e[n]})).reduce((function(e,t){var r;return y({},e,((r={})[t]=n[t],r))}),{})}(d)}),[d]),g=c.open,m=c.SnackbarProps,b=c.TransitionComponent,f=c.TransitionProps,k=c.transitionDuration,z=c.disableWindowBlurListener,E=c.content,w=x(c,["open","SnackbarProps","TransitionComponent","TransitionProps","transitionDuration","disableWindowBlurListener","content","entered","requestClose","onEnter","onEntered","onExit","onExited"]),v=y({direction:(A=w.anchorOrigin,"center"!==A.horizontal?on[A.horizontal]:on[A.vertical]),timeout:k},f),C=E;"function"==typeof C&&(C=C(w.id,w.message));var W=["onEnter","onEntered","onExit","onExited"].reduce((function(e,t){var r;return y({},e,((r={})[t]=ln([n.snack[t],n[t]],w.id),r))}),{});return r.createElement(rn,{in:o,onExited:W.onExited},r.createElement(pn,{open:g,id:w.id,disableWindowBlurListener:z,autoHideDuration:w.autoHideDuration,className:(0,i.Z)(wn.wrappedRoot,h.root,h[an(w.anchorOrigin)]),SnackbarProps:m,onClose:s},r.createElement(b,Object.assign({},v,{appear:!0,in:g,onExit:W.onExit,onExited:l,onEnter:W.onEnter,onEntered:ln([W.onEntered,function(){n.snack.requestClose&&s(null,"instructed",n.snack.id)}],w.id)}),C||r.createElement(u,Object.assign({},w)))))},Cn=20,Wn=6,Fn=2,In="."+Y,Bn=V({root:(fn={boxSizing:"border-box",display:"flex",maxHeight:"100%",position:"fixed",zIndex:1400,height:"auto",width:"auto",transition:j(["top","right","bottom","left","max-width"],{duration:300,easing:"ease"}),pointerEvents:"none"},fn[In]={padding:Wn+"px 0px",transition:"padding 300ms ease 0ms"},fn.maxWidth="calc(100% - "+2*Cn+"px)",fn[v]={width:"100%",maxWidth:"calc(100% - 32px)"},fn),rootDense:(yn={},yn[In]={padding:Fn+"px 0px"},yn),top:{top:Cn-Wn+"px",flexDirection:"column"},bottom:{bottom:Cn-Wn+"px",flexDirection:"column-reverse"},left:(kn={left:Cn+"px"},kn[C]={alignItems:"flex-start"},kn[v]={left:"16px"},kn),right:(xn={right:Cn+"px"},xn[C]={alignItems:"flex-end"},xn[v]={right:"16px"},xn),center:(zn={left:"50%",transform:"translateX(-50%)"},zn[C]={alignItems:"center"},zn)}),Mn=function(n){var e=n.classes,t=void 0===e?{}:e,o=n.anchorOrigin,a=n.dense,s=n.children,l=(0,i.Z)("notistack-SnackbarContainer",Bn[o.vertical],Bn[o.horizontal],Bn.root,t.containerRoot,t["containerAnchorOrigin"+F(o)],a&&Bn.rootDense);return r.createElement("div",{className:l},s)},Tn=(0,r.memo)(Mn),Jn=function(n){return!("string"==typeof n||(0,r.isValidElement)(n))},Sn=function(n){function e(e){var t;return(t=n.call(this,e)||this).enqueueSnackbar=function(n,e){if(void 0===e&&(e={}),null==n)throw new Error("enqueueSnackbar called with invalid argument");var r=Jn(n)?n:e,o=Jn(n)?n.message:n,a=r.key,s=r.preventDuplicate,l=x(r,["key","preventDuplicate"]),A=I(a),c=A?a:(new Date).getTime()+Math.random(),d=function(n,e){return function(t,r){return void 0===r&&(r=!1),r?y({},U[t],{},e[t],{},n[t]):"autoHideDuration"===t?(o=n.autoHideDuration,i=e.autoHideDuration,(a=function(n){return"number"==typeof n||null===n})(o)?o:a(i)?i:U.autoHideDuration):"transitionDuration"===t?function(n,e){var t=function(n,e){return e.some((function(e){return typeof n===e}))};return t(n,["string","number"])?n:t(n,["object"])?y({},U.transitionDuration,{},t(e,["object"])&&e,{},n):t(e,["string","number"])?e:t(e,["object"])?y({},U.transitionDuration,{},e):U.transitionDuration}(n.transitionDuration,e.transitionDuration):n[t]||e[t]||U[t];var o,i,a}}(l,t.props),p=y({id:c},l,{message:o,open:!0,entered:!1,requestClose:!1,persist:d("persist"),action:d("action"),content:d("content"),variant:d("variant"),anchorOrigin:d("anchorOrigin"),disableWindowBlurListener:d("disableWindowBlurListener"),autoHideDuration:d("autoHideDuration"),hideIconVariant:d("hideIconVariant"),TransitionComponent:d("TransitionComponent"),transitionDuration:d("transitionDuration"),TransitionProps:d("TransitionProps",!0),iconVariant:d("iconVariant",!0),style:d("style",!0),SnackbarProps:d("SnackbarProps",!0),className:(0,i.Z)(t.props.className,l.className)});return p.persist&&(p.autoHideDuration=void 0),t.setState((function(n){if(void 0===s&&t.props.preventDuplicate||s){var e=function(n){return A?n.id===c:n.message===o},r=n.queue.findIndex(e)>-1,i=n.snacks.findIndex(e)>-1;if(r||i)return n}return t.handleDisplaySnack(y({},n,{queue:[].concat(n.queue,[p])}))})),c},t.handleDisplaySnack=function(n){return n.snacks.length>=t.maxSnack?t.handleDismissOldest(n):t.processQueue(n)},t.processQueue=function(n){var e=n.queue,t=n.snacks;return e.length>0?y({},n,{snacks:[].concat(t,[e[0]]),queue:e.slice(1,e.length)}):n},t.handleDismissOldest=function(n){if(n.snacks.some((function(n){return!n.open||n.requestClose})))return n;var e=!1,r=!1;n.snacks.reduce((function(n,e){return n+(e.open&&e.persist?1:0)}),0)===t.maxSnack&&(r=!0);var o=n.snacks.map((function(n){return e||n.persist&&!r?y({},n):(e=!0,n.entered?(n.onClose&&n.onClose(null,"maxsnack",n.id),t.props.onClose&&t.props.onClose(null,"maxsnack",n.id),y({},n,{open:!1})):y({},n,{requestClose:!0}))}));return y({},n,{snacks:o})},t.handleEnteredSnack=function(n,e,r){if(!I(r))throw new Error("handleEnteredSnack Cannot be called with undefined key");t.setState((function(n){return{snacks:n.snacks.map((function(n){return n.id===r?y({},n,{entered:!0}):y({},n)}))}}))},t.handleCloseSnack=function(n,e,r){t.props.onClose&&t.props.onClose(n,e,r);var o=void 0===r;t.setState((function(n){var e=n.snacks,t=n.queue;return{snacks:e.map((function(n){return o||n.id===r?n.entered?y({},n,{open:!1}):y({},n,{requestClose:!0}):y({},n)})),queue:t.filter((function(n){return n.id!==r}))}}))},t.closeSnackbar=function(n){var e=t.state.snacks.find((function(e){return e.id===n}));I(n)&&e&&e.onClose&&e.onClose(null,"instructed",n),t.handleCloseSnack(null,"instructed",n)},t.handleExitedSnack=function(n,e){if(!I(e))throw new Error("handleExitedSnack Cannot be called with undefined key");t.setState((function(n){var r=t.processQueue(y({},n,{snacks:n.snacks.filter((function(n){return n.id!==e}))}));return 0===r.queue.length?r:t.handleDismissOldest(r)}))},t.enqueueSnackbar,t.closeSnackbar,t.state={snacks:[],queue:[],contextValue:{enqueueSnackbar:t.enqueueSnackbar.bind(z(t)),closeSnackbar:t.closeSnackbar.bind(z(t))}},t}return k(e,n),e.prototype.render=function(){var n=this,e=this.state.contextValue,t=this.props,i=t.domRoot,a=t.children,s=t.dense,l=void 0!==s&&s,A=t.Components,c=void 0===A?{}:A,d=t.classes,p=this.state.snacks.reduce((function(n,e){var t,r=F(e.anchorOrigin),o=n[r]||[];return y({},n,((t={})[r]=[].concat(o,[e]),t))}),{}),u=Object.keys(p).map((function(e){var t=p[e],o=t[0];return r.createElement(Tn,{key:e,dense:l,anchorOrigin:o.anchorOrigin,classes:d},t.map((function(e){return r.createElement(vn,{key:e.id,snack:e,classes:d,Component:c[e.variant],onClose:n.handleCloseSnack,onEnter:n.props.onEnter,onExit:n.props.onExit,onExited:ln([n.handleExitedSnack,n.props.onExited],e.id),onEntered:ln([n.handleEnteredSnack,n.props.onEntered],e.id)})})))}));return r.createElement(w.Provider,{value:e},a,i?(0,o.createPortal)(u,i):u)},f(e,[{key:"maxSnack",get:function(){return this.props.maxSnack||U.maxSnack}}]),e}(r.Component),Dn=function(){return(0,r.useContext)(w)}},698:(n,e,t)=>{var r=t(3072),o=t.n(r),i=t(2298),a=t.n(i),s=t(7976),l=t.n(s),A=t(5147),c=t.n(A),d=t(566),p=t.n(d),u=t(9396),h=t.n(u),g=t(4340),m={};m.styleTagTransform=h(),m.setAttributes=c(),m.insert=l().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),o()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals},7075:(n,e,t)=>{t.d(e,{TU:()=>$});let r={async:!1,baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,hooks:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1};const o=/[&<>"']/,i=new RegExp(o.source,"g"),a=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,s=new RegExp(a.source,"g"),l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},A=n=>l[n];function c(n,e){if(e){if(o.test(n))return n.replace(i,A)}else if(a.test(n))return n.replace(s,A);return n}const d=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;function p(n){return n.replace(d,((n,e)=>"colon"===(e=e.toLowerCase())?":":"#"===e.charAt(0)?"x"===e.charAt(1)?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""))}const u=/(^|[^\[])\^/g;function h(n,e){n="string"==typeof n?n:n.source,e=e||"";const t={replace:(e,r)=>(r=(r=r.source||r).replace(u,"$1"),n=n.replace(e,r),t),getRegex:()=>new RegExp(n,e)};return t}const g=/[^\w:]/g,m=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function b(n,e,t){if(n){let n;try{n=decodeURIComponent(p(t)).replace(g,"").toLowerCase()}catch(n){return null}if(0===n.indexOf("javascript:")||0===n.indexOf("vbscript:")||0===n.indexOf("data:"))return null}e&&!m.test(t)&&(t=function(n,e){f[" "+n]||(y.test(n)?f[" "+n]=n+"/":f[" "+n]=w(n,"/",!0));const t=-1===(n=f[" "+n]).indexOf(":");return"//"===e.substring(0,2)?t?e:n.replace(k,"$1")+e:"/"===e.charAt(0)?t?e:n.replace(x,"$1")+e:n+e}(e,t));try{t=encodeURI(t).replace(/%25/g,"%")}catch(n){return null}return t}const f={},y=/^[^:]+:\/*[^/]*$/,k=/^([^:]+:)[\s\S]*$/,x=/^([^:]+:\/*[^/]*)[\s\S]*$/,z={exec:function(){}};function E(n,e){const t=n.replace(/\|/g,((n,e,t)=>{let r=!1,o=e;for(;--o>=0&&"\\"===t[o];)r=!r;return r?"|":" |"})).split(/ \|/);let r=0;if(t[0].trim()||t.shift(),t.length>0&&!t[t.length-1].trim()&&t.pop(),t.length>e)t.splice(e);else for(;t.length<e;)t.push("");for(;r<t.length;r++)t[r]=t[r].trim().replace(/\\\|/g,"|");return t}function w(n,e,t){const r=n.length;if(0===r)return"";let o=0;for(;o<r;){const i=n.charAt(r-o-1);if(i!==e||t){if(i===e||!t)break;o++}else o++}return n.slice(0,r-o)}function v(n,e){if(e<1)return"";let t="";for(;e>1;)1&e&&(t+=n),e>>=1,n+=n;return t+n}function C(n,e,t,r){const o=e.href,i=e.title?c(e.title):null,a=n[1].replace(/\\([\[\]])/g,"$1");if("!"!==n[0].charAt(0)){r.state.inLink=!0;const n={type:"link",raw:t,href:o,title:i,text:a,tokens:r.inlineTokens(a)};return r.state.inLink=!1,n}return{type:"image",raw:t,href:o,title:i,text:c(a)}}class W{constructor(n){this.options=n||r}space(n){const e=this.rules.block.newline.exec(n);if(e&&e[0].length>0)return{type:"space",raw:e[0]}}code(n){const e=this.rules.block.code.exec(n);if(e){const n=e[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:e[0],codeBlockStyle:"indented",text:this.options.pedantic?n:w(n,"\n")}}}fences(n){const e=this.rules.block.fences.exec(n);if(e){const n=e[0],t=function(n,e){const t=n.match(/^(\s+)(?:```)/);if(null===t)return e;const r=t[1];return e.split("\n").map((n=>{const e=n.match(/^\s+/);if(null===e)return n;const[t]=e;return t.length>=r.length?n.slice(r.length):n})).join("\n")}(n,e[3]||"");return{type:"code",raw:n,lang:e[2]?e[2].trim().replace(this.rules.inline._escapes,"$1"):e[2],text:t}}}heading(n){const e=this.rules.block.heading.exec(n);if(e){let n=e[2].trim();if(/#$/.test(n)){const e=w(n,"#");this.options.pedantic?n=e.trim():e&&!/ $/.test(e)||(n=e.trim())}return{type:"heading",raw:e[0],depth:e[1].length,text:n,tokens:this.lexer.inline(n)}}}hr(n){const e=this.rules.block.hr.exec(n);if(e)return{type:"hr",raw:e[0]}}blockquote(n){const e=this.rules.block.blockquote.exec(n);if(e){const n=e[0].replace(/^ *>[ \t]?/gm,""),t=this.lexer.state.top;this.lexer.state.top=!0;const r=this.lexer.blockTokens(n);return this.lexer.state.top=t,{type:"blockquote",raw:e[0],tokens:r,text:n}}}list(n){let e=this.rules.block.list.exec(n);if(e){let t,r,o,i,a,s,l,A,c,d,p,u,h=e[1].trim();const g=h.length>1,m={type:"list",raw:"",ordered:g,start:g?+h.slice(0,-1):"",loose:!1,items:[]};h=g?`\\d{1,9}\\${h.slice(-1)}`:`\\${h}`,this.options.pedantic&&(h=g?h:"[*+-]");const b=new RegExp(`^( {0,3}${h})((?:[\t ][^\\n]*)?(?:\\n|$))`);for(;n&&(u=!1,e=b.exec(n))&&!this.rules.block.hr.test(n);){if(t=e[0],n=n.substring(t.length),A=e[2].split("\n",1)[0].replace(/^\t+/,(n=>" ".repeat(3*n.length))),c=n.split("\n",1)[0],this.options.pedantic?(i=2,p=A.trimLeft()):(i=e[2].search(/[^ ]/),i=i>4?1:i,p=A.slice(i),i+=e[1].length),s=!1,!A&&/^ *$/.test(c)&&(t+=c+"\n",n=n.substring(c.length+1),u=!0),!u){const e=new RegExp(`^ {0,${Math.min(3,i-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))`),r=new RegExp(`^ {0,${Math.min(3,i-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),o=new RegExp(`^ {0,${Math.min(3,i-1)}}(?:\`\`\`|~~~)`),a=new RegExp(`^ {0,${Math.min(3,i-1)}}#`);for(;n&&(d=n.split("\n",1)[0],c=d,this.options.pedantic&&(c=c.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!o.test(c))&&!a.test(c)&&!e.test(c)&&!r.test(n);){if(c.search(/[^ ]/)>=i||!c.trim())p+="\n"+c.slice(i);else{if(s)break;if(A.search(/[^ ]/)>=4)break;if(o.test(A))break;if(a.test(A))break;if(r.test(A))break;p+="\n"+c}s||c.trim()||(s=!0),t+=d+"\n",n=n.substring(d.length+1),A=c.slice(i)}}m.loose||(l?m.loose=!0:/\n *\n *$/.test(t)&&(l=!0)),this.options.gfm&&(r=/^\[[ xX]\] /.exec(p),r&&(o="[ ] "!==r[0],p=p.replace(/^\[[ xX]\] +/,""))),m.items.push({type:"list_item",raw:t,task:!!r,checked:o,loose:!1,text:p}),m.raw+=t}m.items[m.items.length-1].raw=t.trimRight(),m.items[m.items.length-1].text=p.trimRight(),m.raw=m.raw.trimRight();const f=m.items.length;for(a=0;a<f;a++)if(this.lexer.state.top=!1,m.items[a].tokens=this.lexer.blockTokens(m.items[a].text,[]),!m.loose){const n=m.items[a].tokens.filter((n=>"space"===n.type)),e=n.length>0&&n.some((n=>/\n.*\n/.test(n.raw)));m.loose=e}if(m.loose)for(a=0;a<f;a++)m.items[a].loose=!0;return m}}html(n){const e=this.rules.block.html.exec(n);if(e){const n={type:"html",raw:e[0],pre:!this.options.sanitizer&&("pre"===e[1]||"script"===e[1]||"style"===e[1]),text:e[0]};if(this.options.sanitize){const t=this.options.sanitizer?this.options.sanitizer(e[0]):c(e[0]);n.type="paragraph",n.text=t,n.tokens=this.lexer.inline(t)}return n}}def(n){const e=this.rules.block.def.exec(n);if(e){const n=e[1].toLowerCase().replace(/\s+/g," "),t=e[2]?e[2].replace(/^<(.*)>$/,"$1").replace(this.rules.inline._escapes,"$1"):"",r=e[3]?e[3].substring(1,e[3].length-1).replace(this.rules.inline._escapes,"$1"):e[3];return{type:"def",tag:n,raw:e[0],href:t,title:r}}}table(n){const e=this.rules.block.table.exec(n);if(e){const n={type:"table",header:E(e[1]).map((n=>({text:n}))),align:e[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:e[3]&&e[3].trim()?e[3].replace(/\n[ \t]*$/,"").split("\n"):[]};if(n.header.length===n.align.length){n.raw=e[0];let t,r,o,i,a=n.align.length;for(t=0;t<a;t++)/^ *-+: *$/.test(n.align[t])?n.align[t]="right":/^ *:-+: *$/.test(n.align[t])?n.align[t]="center":/^ *:-+ *$/.test(n.align[t])?n.align[t]="left":n.align[t]=null;for(a=n.rows.length,t=0;t<a;t++)n.rows[t]=E(n.rows[t],n.header.length).map((n=>({text:n})));for(a=n.header.length,r=0;r<a;r++)n.header[r].tokens=this.lexer.inline(n.header[r].text);for(a=n.rows.length,r=0;r<a;r++)for(i=n.rows[r],o=0;o<i.length;o++)i[o].tokens=this.lexer.inline(i[o].text);return n}}}lheading(n){const e=this.rules.block.lheading.exec(n);if(e)return{type:"heading",raw:e[0],depth:"="===e[2].charAt(0)?1:2,text:e[1],tokens:this.lexer.inline(e[1])}}paragraph(n){const e=this.rules.block.paragraph.exec(n);if(e){const n="\n"===e[1].charAt(e[1].length-1)?e[1].slice(0,-1):e[1];return{type:"paragraph",raw:e[0],text:n,tokens:this.lexer.inline(n)}}}text(n){const e=this.rules.block.text.exec(n);if(e)return{type:"text",raw:e[0],text:e[0],tokens:this.lexer.inline(e[0])}}escape(n){const e=this.rules.inline.escape.exec(n);if(e)return{type:"escape",raw:e[0],text:c(e[1])}}tag(n){const e=this.rules.inline.tag.exec(n);if(e)return!this.lexer.state.inLink&&/^<a /i.test(e[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(e[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(e[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(e[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:e[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(e[0]):c(e[0]):e[0]}}link(n){const e=this.rules.inline.link.exec(n);if(e){const n=e[2].trim();if(!this.options.pedantic&&/^</.test(n)){if(!/>$/.test(n))return;const e=w(n.slice(0,-1),"\\");if((n.length-e.length)%2==0)return}else{const n=function(n,e){if(-1===n.indexOf(e[1]))return-1;const t=n.length;let r=0,o=0;for(;o<t;o++)if("\\"===n[o])o++;else if(n[o]===e[0])r++;else if(n[o]===e[1]&&(r--,r<0))return o;return-1}(e[2],"()");if(n>-1){const t=(0===e[0].indexOf("!")?5:4)+e[1].length+n;e[2]=e[2].substring(0,n),e[0]=e[0].substring(0,t).trim(),e[3]=""}}let t=e[2],r="";if(this.options.pedantic){const n=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(t);n&&(t=n[1],r=n[3])}else r=e[3]?e[3].slice(1,-1):"";return t=t.trim(),/^</.test(t)&&(t=this.options.pedantic&&!/>$/.test(n)?t.slice(1):t.slice(1,-1)),C(e,{href:t?t.replace(this.rules.inline._escapes,"$1"):t,title:r?r.replace(this.rules.inline._escapes,"$1"):r},e[0],this.lexer)}}reflink(n,e){let t;if((t=this.rules.inline.reflink.exec(n))||(t=this.rules.inline.nolink.exec(n))){let n=(t[2]||t[1]).replace(/\s+/g," ");if(n=e[n.toLowerCase()],!n){const n=t[0].charAt(0);return{type:"text",raw:n,text:n}}return C(t,n,t[0],this.lexer)}}emStrong(n,e,t=""){let r=this.rules.inline.emStrong.lDelim.exec(n);if(!r)return;if(r[3]&&t.match(/[\p{L}\p{N}]/u))return;const o=r[1]||r[2]||"";if(!o||o&&(""===t||this.rules.inline.punctuation.exec(t))){const t=r[0].length-1;let o,i,a=t,s=0;const l="*"===r[0][0]?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(l.lastIndex=0,e=e.slice(-1*n.length+t);null!=(r=l.exec(e));){if(o=r[1]||r[2]||r[3]||r[4]||r[5]||r[6],!o)continue;if(i=o.length,r[3]||r[4]){a+=i;continue}if((r[5]||r[6])&&t%3&&!((t+i)%3)){s+=i;continue}if(a-=i,a>0)continue;i=Math.min(i,i+a+s);const e=n.slice(0,t+r.index+(r[0].length-o.length)+i);if(Math.min(t,i)%2){const n=e.slice(1,-1);return{type:"em",raw:e,text:n,tokens:this.lexer.inlineTokens(n)}}const l=e.slice(2,-2);return{type:"strong",raw:e,text:l,tokens:this.lexer.inlineTokens(l)}}}}codespan(n){const e=this.rules.inline.code.exec(n);if(e){let n=e[2].replace(/\n/g," ");const t=/[^ ]/.test(n),r=/^ /.test(n)&&/ $/.test(n);return t&&r&&(n=n.substring(1,n.length-1)),n=c(n,!0),{type:"codespan",raw:e[0],text:n}}}br(n){const e=this.rules.inline.br.exec(n);if(e)return{type:"br",raw:e[0]}}del(n){const e=this.rules.inline.del.exec(n);if(e)return{type:"del",raw:e[0],text:e[2],tokens:this.lexer.inlineTokens(e[2])}}autolink(n,e){const t=this.rules.inline.autolink.exec(n);if(t){let n,r;return"@"===t[2]?(n=c(this.options.mangle?e(t[1]):t[1]),r="mailto:"+n):(n=c(t[1]),r=n),{type:"link",raw:t[0],text:n,href:r,tokens:[{type:"text",raw:n,text:n}]}}}url(n,e){let t;if(t=this.rules.inline.url.exec(n)){let n,r;if("@"===t[2])n=c(this.options.mangle?e(t[0]):t[0]),r="mailto:"+n;else{let e;do{e=t[0],t[0]=this.rules.inline._backpedal.exec(t[0])[0]}while(e!==t[0]);n=c(t[0]),r="www."===t[1]?"http://"+t[0]:t[0]}return{type:"link",raw:t[0],text:n,href:r,tokens:[{type:"text",raw:n,text:n}]}}}inlineText(n,e){const t=this.rules.inline.text.exec(n);if(t){let n;return n=this.lexer.state.inRawBlock?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):c(t[0]):t[0]:c(this.options.smartypants?e(t[0]):t[0]),{type:"text",raw:t[0],text:n}}}}const F={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:z,lheading:/^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\.|[^\[\]\\])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};F.def=h(F.def).replace("label",F._label).replace("title",F._title).getRegex(),F.bullet=/(?:[*+-]|\d{1,9}[.)])/,F.listItemStart=h(/^( *)(bull) */).replace("bull",F.bullet).getRegex(),F.list=h(F.list).replace(/bull/g,F.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+F.def.source+")").getRegex(),F._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",F._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,F.html=h(F.html,"i").replace("comment",F._comment).replace("tag",F._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),F.paragraph=h(F._paragraph).replace("hr",F.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",F._tag).getRegex(),F.blockquote=h(F.blockquote).replace("paragraph",F.paragraph).getRegex(),F.normal={...F},F.gfm={...F.normal,table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"},F.gfm.table=h(F.gfm.table).replace("hr",F.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",F._tag).getRegex(),F.gfm.paragraph=h(F._paragraph).replace("hr",F.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",F.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",F._tag).getRegex(),F.pedantic={...F.normal,html:h("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",F._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:z,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:h(F.normal._paragraph).replace("hr",F.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",F.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()};const I={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:z,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,rDelimUnd:/^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:z,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};function B(n){return n.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function M(n){let e,t,r="";const o=n.length;for(e=0;e<o;e++)t=n.charCodeAt(e),Math.random()>.5&&(t="x"+t.toString(16)),r+="&#"+t+";";return r}I._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",I.punctuation=h(I.punctuation).replace(/punctuation/g,I._punctuation).getRegex(),I.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,I.escapedEmSt=/(?:^|[^\\])(?:\\\\)*\\[*_]/g,I._comment=h(F._comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),I.emStrong.lDelim=h(I.emStrong.lDelim).replace(/punct/g,I._punctuation).getRegex(),I.emStrong.rDelimAst=h(I.emStrong.rDelimAst,"g").replace(/punct/g,I._punctuation).getRegex(),I.emStrong.rDelimUnd=h(I.emStrong.rDelimUnd,"g").replace(/punct/g,I._punctuation).getRegex(),I._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,I._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,I._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,I.autolink=h(I.autolink).replace("scheme",I._scheme).replace("email",I._email).getRegex(),I._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,I.tag=h(I.tag).replace("comment",I._comment).replace("attribute",I._attribute).getRegex(),I._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,I._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,I._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,I.link=h(I.link).replace("label",I._label).replace("href",I._href).replace("title",I._title).getRegex(),I.reflink=h(I.reflink).replace("label",I._label).replace("ref",F._label).getRegex(),I.nolink=h(I.nolink).replace("ref",F._label).getRegex(),I.reflinkSearch=h(I.reflinkSearch,"g").replace("reflink",I.reflink).replace("nolink",I.nolink).getRegex(),I.normal={...I},I.pedantic={...I.normal,strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:h(/^!?\[(label)\]\((.*?)\)/).replace("label",I._label).getRegex(),reflink:h(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",I._label).getRegex()},I.gfm={...I.normal,escape:h(I.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/},I.gfm.url=h(I.gfm.url,"i").replace("email",I.gfm._extended_email).getRegex(),I.breaks={...I.gfm,br:h(I.br).replace("{2,}","*").getRegex(),text:h(I.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()};class T{constructor(n){this.tokens=[],this.tokens.links=Object.create(null),this.options=n||r,this.options.tokenizer=this.options.tokenizer||new W,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const e={block:F.normal,inline:I.normal};this.options.pedantic?(e.block=F.pedantic,e.inline=I.pedantic):this.options.gfm&&(e.block=F.gfm,this.options.breaks?e.inline=I.breaks:e.inline=I.gfm),this.tokenizer.rules=e}static get rules(){return{block:F,inline:I}}static lex(n,e){return new T(e).lex(n)}static lexInline(n,e){return new T(e).inlineTokens(n)}lex(n){let e;for(n=n.replace(/\r\n|\r/g,"\n"),this.blockTokens(n,this.tokens);e=this.inlineQueue.shift();)this.inlineTokens(e.src,e.tokens);return this.tokens}blockTokens(n,e=[]){let t,r,o,i;for(n=this.options.pedantic?n.replace(/\t/g,"    ").replace(/^ +$/gm,""):n.replace(/^( *)(\t+)/gm,((n,e,t)=>e+"    ".repeat(t.length)));n;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some((r=>!!(t=r.call({lexer:this},n,e))&&(n=n.substring(t.raw.length),e.push(t),!0)))))if(t=this.tokenizer.space(n))n=n.substring(t.raw.length),1===t.raw.length&&e.length>0?e[e.length-1].raw+="\n":e.push(t);else if(t=this.tokenizer.code(n))n=n.substring(t.raw.length),r=e[e.length-1],!r||"paragraph"!==r.type&&"text"!==r.type?e.push(t):(r.raw+="\n"+t.raw,r.text+="\n"+t.text,this.inlineQueue[this.inlineQueue.length-1].src=r.text);else if(t=this.tokenizer.fences(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.heading(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.hr(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.blockquote(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.list(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.html(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.def(n))n=n.substring(t.raw.length),r=e[e.length-1],!r||"paragraph"!==r.type&&"text"!==r.type?this.tokens.links[t.tag]||(this.tokens.links[t.tag]={href:t.href,title:t.title}):(r.raw+="\n"+t.raw,r.text+="\n"+t.raw,this.inlineQueue[this.inlineQueue.length-1].src=r.text);else if(t=this.tokenizer.table(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.lheading(n))n=n.substring(t.raw.length),e.push(t);else{if(o=n,this.options.extensions&&this.options.extensions.startBlock){let e=1/0;const t=n.slice(1);let r;this.options.extensions.startBlock.forEach((function(n){r=n.call({lexer:this},t),"number"==typeof r&&r>=0&&(e=Math.min(e,r))})),e<1/0&&e>=0&&(o=n.substring(0,e+1))}if(this.state.top&&(t=this.tokenizer.paragraph(o)))r=e[e.length-1],i&&"paragraph"===r.type?(r.raw+="\n"+t.raw,r.text+="\n"+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=r.text):e.push(t),i=o.length!==n.length,n=n.substring(t.raw.length);else if(t=this.tokenizer.text(n))n=n.substring(t.raw.length),r=e[e.length-1],r&&"text"===r.type?(r.raw+="\n"+t.raw,r.text+="\n"+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=r.text):e.push(t);else if(n){const e="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent){console.error(e);break}throw new Error(e)}}return this.state.top=!0,e}inline(n,e=[]){return this.inlineQueue.push({src:n,tokens:e}),e}inlineTokens(n,e=[]){let t,r,o,i,a,s,l=n;if(this.tokens.links){const n=Object.keys(this.tokens.links);if(n.length>0)for(;null!=(i=this.tokenizer.rules.inline.reflinkSearch.exec(l));)n.includes(i[0].slice(i[0].lastIndexOf("[")+1,-1))&&(l=l.slice(0,i.index)+"["+v("a",i[0].length-2)+"]"+l.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(i=this.tokenizer.rules.inline.blockSkip.exec(l));)l=l.slice(0,i.index)+"["+v("a",i[0].length-2)+"]"+l.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;null!=(i=this.tokenizer.rules.inline.escapedEmSt.exec(l));)l=l.slice(0,i.index+i[0].length-2)+"++"+l.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex),this.tokenizer.rules.inline.escapedEmSt.lastIndex--;for(;n;)if(a||(s=""),a=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some((r=>!!(t=r.call({lexer:this},n,e))&&(n=n.substring(t.raw.length),e.push(t),!0)))))if(t=this.tokenizer.escape(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.tag(n))n=n.substring(t.raw.length),r=e[e.length-1],r&&"text"===t.type&&"text"===r.type?(r.raw+=t.raw,r.text+=t.text):e.push(t);else if(t=this.tokenizer.link(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.reflink(n,this.tokens.links))n=n.substring(t.raw.length),r=e[e.length-1],r&&"text"===t.type&&"text"===r.type?(r.raw+=t.raw,r.text+=t.text):e.push(t);else if(t=this.tokenizer.emStrong(n,l,s))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.codespan(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.br(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.del(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.autolink(n,M))n=n.substring(t.raw.length),e.push(t);else if(this.state.inLink||!(t=this.tokenizer.url(n,M))){if(o=n,this.options.extensions&&this.options.extensions.startInline){let e=1/0;const t=n.slice(1);let r;this.options.extensions.startInline.forEach((function(n){r=n.call({lexer:this},t),"number"==typeof r&&r>=0&&(e=Math.min(e,r))})),e<1/0&&e>=0&&(o=n.substring(0,e+1))}if(t=this.tokenizer.inlineText(o,B))n=n.substring(t.raw.length),"_"!==t.raw.slice(-1)&&(s=t.raw.slice(-1)),a=!0,r=e[e.length-1],r&&"text"===r.type?(r.raw+=t.raw,r.text+=t.text):e.push(t);else if(n){const e="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent){console.error(e);break}throw new Error(e)}}else n=n.substring(t.raw.length),e.push(t);return e}}class J{constructor(n){this.options=n||r}code(n,e,t){const r=(e||"").match(/\S*/)[0];if(this.options.highlight){const e=this.options.highlight(n,r);null!=e&&e!==n&&(t=!0,n=e)}return n=n.replace(/\n$/,"")+"\n",r?'<pre><code class="'+this.options.langPrefix+c(r)+'">'+(t?n:c(n,!0))+"</code></pre>\n":"<pre><code>"+(t?n:c(n,!0))+"</code></pre>\n"}blockquote(n){return`<blockquote>\n${n}</blockquote>\n`}html(n){return n}heading(n,e,t,r){return this.options.headerIds?`<h${e} id="${this.options.headerPrefix+r.slug(t)}">${n}</h${e}>\n`:`<h${e}>${n}</h${e}>\n`}hr(){return this.options.xhtml?"<hr/>\n":"<hr>\n"}list(n,e,t){const r=e?"ol":"ul";return"<"+r+(e&&1!==t?' start="'+t+'"':"")+">\n"+n+"</"+r+">\n"}listitem(n){return`<li>${n}</li>\n`}checkbox(n){return"<input "+(n?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(n){return`<p>${n}</p>\n`}table(n,e){return e&&(e=`<tbody>${e}</tbody>`),"<table>\n<thead>\n"+n+"</thead>\n"+e+"</table>\n"}tablerow(n){return`<tr>\n${n}</tr>\n`}tablecell(n,e){const t=e.header?"th":"td";return(e.align?`<${t} align="${e.align}">`:`<${t}>`)+n+`</${t}>\n`}strong(n){return`<strong>${n}</strong>`}em(n){return`<em>${n}</em>`}codespan(n){return`<code>${n}</code>`}br(){return this.options.xhtml?"<br/>":"<br>"}del(n){return`<del>${n}</del>`}link(n,e,t){if(null===(n=b(this.options.sanitize,this.options.baseUrl,n)))return t;let r='<a href="'+n+'"';return e&&(r+=' title="'+e+'"'),r+=">"+t+"</a>",r}image(n,e,t){if(null===(n=b(this.options.sanitize,this.options.baseUrl,n)))return t;let r=`<img src="${n}" alt="${t}"`;return e&&(r+=` title="${e}"`),r+=this.options.xhtml?"/>":">",r}text(n){return n}}class S{strong(n){return n}em(n){return n}codespan(n){return n}del(n){return n}html(n){return n}text(n){return n}link(n,e,t){return""+t}image(n,e,t){return""+t}br(){return""}}class D{constructor(){this.seen={}}serialize(n){return n.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")}getNextSafeSlug(n,e){let t=n,r=0;if(this.seen.hasOwnProperty(t)){r=this.seen[n];do{r++,t=n+"-"+r}while(this.seen.hasOwnProperty(t))}return e||(this.seen[n]=r,this.seen[t]=0),t}slug(n,e={}){const t=this.serialize(n);return this.getNextSafeSlug(t,e.dryrun)}}class Z{constructor(n){this.options=n||r,this.options.renderer=this.options.renderer||new J,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new S,this.slugger=new D}static parse(n,e){return new Z(e).parse(n)}static parseInline(n,e){return new Z(e).parseInline(n)}parse(n,e=!0){let t,r,o,i,a,s,l,A,c,d,u,h,g,m,b,f,y,k,x,z="";const E=n.length;for(t=0;t<E;t++)if(d=n[t],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[d.type]&&(x=this.options.extensions.renderers[d.type].call({parser:this},d),!1!==x||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(d.type)))z+=x||"";else switch(d.type){case"space":continue;case"hr":z+=this.renderer.hr();continue;case"heading":z+=this.renderer.heading(this.parseInline(d.tokens),d.depth,p(this.parseInline(d.tokens,this.textRenderer)),this.slugger);continue;case"code":z+=this.renderer.code(d.text,d.lang,d.escaped);continue;case"table":for(A="",l="",i=d.header.length,r=0;r<i;r++)l+=this.renderer.tablecell(this.parseInline(d.header[r].tokens),{header:!0,align:d.align[r]});for(A+=this.renderer.tablerow(l),c="",i=d.rows.length,r=0;r<i;r++){for(s=d.rows[r],l="",a=s.length,o=0;o<a;o++)l+=this.renderer.tablecell(this.parseInline(s[o].tokens),{header:!1,align:d.align[o]});c+=this.renderer.tablerow(l)}z+=this.renderer.table(A,c);continue;case"blockquote":c=this.parse(d.tokens),z+=this.renderer.blockquote(c);continue;case"list":for(u=d.ordered,h=d.start,g=d.loose,i=d.items.length,c="",r=0;r<i;r++)b=d.items[r],f=b.checked,y=b.task,m="",b.task&&(k=this.renderer.checkbox(f),g?b.tokens.length>0&&"paragraph"===b.tokens[0].type?(b.tokens[0].text=k+" "+b.tokens[0].text,b.tokens[0].tokens&&b.tokens[0].tokens.length>0&&"text"===b.tokens[0].tokens[0].type&&(b.tokens[0].tokens[0].text=k+" "+b.tokens[0].tokens[0].text)):b.tokens.unshift({type:"text",text:k}):m+=k),m+=this.parse(b.tokens,g),c+=this.renderer.listitem(m,y,f);z+=this.renderer.list(c,u,h);continue;case"html":z+=this.renderer.html(d.text);continue;case"paragraph":z+=this.renderer.paragraph(this.parseInline(d.tokens));continue;case"text":for(c=d.tokens?this.parseInline(d.tokens):d.text;t+1<E&&"text"===n[t+1].type;)d=n[++t],c+="\n"+(d.tokens?this.parseInline(d.tokens):d.text);z+=e?this.renderer.paragraph(c):c;continue;default:{const n='Token with "'+d.type+'" type was not found.';if(this.options.silent)return void console.error(n);throw new Error(n)}}return z}parseInline(n,e){e=e||this.renderer;let t,r,o,i="";const a=n.length;for(t=0;t<a;t++)if(r=n[t],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[r.type]&&(o=this.options.extensions.renderers[r.type].call({parser:this},r),!1!==o||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(r.type)))i+=o||"";else switch(r.type){case"escape":case"text":i+=e.text(r.text);break;case"html":i+=e.html(r.text);break;case"link":i+=e.link(r.href,r.title,this.parseInline(r.tokens,e));break;case"image":i+=e.image(r.href,r.title,r.text);break;case"strong":i+=e.strong(this.parseInline(r.tokens,e));break;case"em":i+=e.em(this.parseInline(r.tokens,e));break;case"codespan":i+=e.codespan(r.text);break;case"br":i+=e.br();break;case"del":i+=e.del(this.parseInline(r.tokens,e));break;default:{const n='Token with "'+r.type+'" type was not found.';if(this.options.silent)return void console.error(n);throw new Error(n)}}return i}}class _{constructor(n){this.options=n||r}static passThroughHooks=new Set(["preprocess","postprocess"]);preprocess(n){return n}postprocess(n){return n}}function L(n,e){return(t,r,o)=>{"function"==typeof r&&(o=r,r=null);const i={...r},a=function(n,e,t){return r=>{if(r.message+="\nPlease report this to https://github.com/markedjs/marked.",n){const n="<p>An error occurred:</p><pre>"+c(r.message+"",!0)+"</pre>";return e?Promise.resolve(n):t?void t(null,n):n}if(e)return Promise.reject(r);if(!t)throw r;t(r)}}((r={...$.defaults,...i}).silent,r.async,o);if(null==t)return a(new Error("marked(): input parameter is undefined or null"));if("string"!=typeof t)return a(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(t)+", string expected"));if(function(n){n&&n.sanitize&&!n.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}(r),r.hooks&&(r.hooks.options=r),o){const i=r.highlight;let s;try{r.hooks&&(t=r.hooks.preprocess(t)),s=n(t,r)}catch(n){return a(n)}const l=function(n){let t;if(!n)try{r.walkTokens&&$.walkTokens(s,r.walkTokens),t=e(s,r),r.hooks&&(t=r.hooks.postprocess(t))}catch(e){n=e}return r.highlight=i,n?a(n):o(null,t)};if(!i||i.length<3)return l();if(delete r.highlight,!s.length)return l();let A=0;return $.walkTokens(s,(function(n){"code"===n.type&&(A++,setTimeout((()=>{i(n.text,n.lang,(function(e,t){if(e)return l(e);null!=t&&t!==n.text&&(n.text=t,n.escaped=!0),A--,0===A&&l()}))}),0))})),void(0===A&&l())}if(r.async)return Promise.resolve(r.hooks?r.hooks.preprocess(t):t).then((e=>n(e,r))).then((n=>r.walkTokens?Promise.all($.walkTokens(n,r.walkTokens)).then((()=>n)):n)).then((n=>e(n,r))).then((n=>r.hooks?r.hooks.postprocess(n):n)).catch(a);try{r.hooks&&(t=r.hooks.preprocess(t));const o=n(t,r);r.walkTokens&&$.walkTokens(o,r.walkTokens);let i=e(o,r);return r.hooks&&(i=r.hooks.postprocess(i)),i}catch(n){return a(n)}}}function $(n,e,t){return L(T.lex,Z.parse)(n,e,t)}$.options=$.setOptions=function(n){var e;return $.defaults={...$.defaults,...n},e=$.defaults,r=e,$},$.getDefaults=function(){return{async:!1,baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,hooks:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}},$.defaults=r,$.use=function(...n){const e=$.defaults.extensions||{renderers:{},childTokens:{}};n.forEach((n=>{const t={...n};if(t.async=$.defaults.async||t.async||!1,n.extensions&&(n.extensions.forEach((n=>{if(!n.name)throw new Error("extension name required");if(n.renderer){const t=e.renderers[n.name];e.renderers[n.name]=t?function(...e){let r=n.renderer.apply(this,e);return!1===r&&(r=t.apply(this,e)),r}:n.renderer}if(n.tokenizer){if(!n.level||"block"!==n.level&&"inline"!==n.level)throw new Error("extension level must be 'block' or 'inline'");e[n.level]?e[n.level].unshift(n.tokenizer):e[n.level]=[n.tokenizer],n.start&&("block"===n.level?e.startBlock?e.startBlock.push(n.start):e.startBlock=[n.start]:"inline"===n.level&&(e.startInline?e.startInline.push(n.start):e.startInline=[n.start]))}n.childTokens&&(e.childTokens[n.name]=n.childTokens)})),t.extensions=e),n.renderer){const e=$.defaults.renderer||new J;for(const t in n.renderer){const r=e[t];e[t]=(...o)=>{let i=n.renderer[t].apply(e,o);return!1===i&&(i=r.apply(e,o)),i}}t.renderer=e}if(n.tokenizer){const e=$.defaults.tokenizer||new W;for(const t in n.tokenizer){const r=e[t];e[t]=(...o)=>{let i=n.tokenizer[t].apply(e,o);return!1===i&&(i=r.apply(e,o)),i}}t.tokenizer=e}if(n.hooks){const e=$.defaults.hooks||new _;for(const t in n.hooks){const r=e[t];_.passThroughHooks.has(t)?e[t]=o=>{if($.defaults.async)return Promise.resolve(n.hooks[t].call(e,o)).then((n=>r.call(e,n)));const i=n.hooks[t].call(e,o);return r.call(e,i)}:e[t]=(...o)=>{let i=n.hooks[t].apply(e,o);return!1===i&&(i=r.apply(e,o)),i}}t.hooks=e}if(n.walkTokens){const e=$.defaults.walkTokens;t.walkTokens=function(t){let r=[];return r.push(n.walkTokens.call(this,t)),e&&(r=r.concat(e.call(this,t))),r}}$.setOptions(t)}))},$.walkTokens=function(n,e){let t=[];for(const r of n)switch(t=t.concat(e.call($,r)),r.type){case"table":for(const n of r.header)t=t.concat($.walkTokens(n.tokens,e));for(const n of r.rows)for(const r of n)t=t.concat($.walkTokens(r.tokens,e));break;case"list":t=t.concat($.walkTokens(r.items,e));break;default:$.defaults.extensions&&$.defaults.extensions.childTokens&&$.defaults.extensions.childTokens[r.type]?$.defaults.extensions.childTokens[r.type].forEach((function(n){t=t.concat($.walkTokens(r[n],e))})):r.tokens&&(t=t.concat($.walkTokens(r.tokens,e)))}return t},$.parseInline=L(T.lexInline,Z.parseInline),$.Parser=Z,$.parser=Z.parse,$.Renderer=J,$.TextRenderer=S,$.Lexer=T,$.lexer=T.lex,$.Tokenizer=W,$.Slugger=D,$.Hooks=_,$.parse=$,$.options,$.setOptions,$.use,$.walkTokens,$.parseInline,Z.parse,T.lex}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,