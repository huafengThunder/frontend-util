"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[964],{1468:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.tWgKE_UudcDgKDwzNbJt {
  margin-bottom: 20px;
  font-size: 20px;
  letter-spacing: 1.2px;
  font-weight: 400;
}
.XZRfTXRvzmPIracnb5cX {
  display: flex;
  flex-flow: wrap row;
}
.kJSFZpQZUt2lke6HRnyV {
  flex: 1;
  margin-bottom: 10px;
  background-color: #fff;
}
.kJSFZpQZUt2lke6HRnyV:hover {
  box-shadow: 0 6px 16px 0 #d6e0e8;
}
.UStbqJ6qLorlUwyfjSDn {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  min-width: 200px;
  height: 88px;
  vertical-align: top;
}
.UStbqJ6qLorlUwyfjSDn img {
  margin-left: 10px;
  margin-right: 10px;
}
.UStbqJ6qLorlUwyfjSDn > p {
  margin-left: 10px;
  margin-right: 10px;
}
.GS7XieMHeA01JB89nZ7F {
  font-size: 14px;
  color: #3d3d3d;
}
.HaO5zpaa6zldlJzLdiCs {
  font-size: 12px;
  color: #909090;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/components/card/index.module.less"],names:[],mappings:"AAAA;EACE,mBAAA;EACA,eAAA;EACA,qBAAA;EACA,gBAAA;AACF;AACA;EACE,aAAA;EACA,mBAAA;AACF;AACA;EACE,OAAA;EACA,mBAAA;EACA,sBAAA;AACF;AACA;EACE,gCAAA;AACF;AACA;EACE,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,gBAAA;EACA,YAAA;EACA,mBAAA;AACF;AAPA;EAQI,iBAAA;EACA,kBAAA;AAEJ;AAXA;EAYI,iBAAA;EACA,kBAAA;AAEJ;AACA;EACE,eAAA;EACA,cAAA;AACF;AACA;EACE,eAAA;EACA,cAAA;AACF",sourcesContent:[`.menu {
  margin-bottom: 20px;
  font-size: 20px;
  letter-spacing: 1.2px;
  font-weight: 400;
}
.content {
  display: flex;
  flex-flow: wrap row;
}
.link {
  flex: 1;
  margin-bottom: 10px;
  background-color: #fff;
}
.link:hover {
  box-shadow: 0 6px 16px 0 #d6e0e8;
}
.card {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  min-width: 200px;
  height: 88px;
  vertical-align: top;
  img {
    margin-left: 10px;
    margin-right: 10px;
  }
  >p {
    margin-left: 10px;
    margin-right: 10px;
  }
}
.title {
  font-size: 14px;
  color: #3d3d3d;
}
.describe {
  font-size: 12px;
  color: #909090;
}
`],sourceRoot:""}]),i.locals={menu:"tWgKE_UudcDgKDwzNbJt",content:"XZRfTXRvzmPIracnb5cX",link:"kJSFZpQZUt2lke6HRnyV",card:"UStbqJ6qLorlUwyfjSDn",title:"GS7XieMHeA01JB89nZ7F",describe:"HaO5zpaa6zldlJzLdiCs"};const p=i},6537:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.E_T9zZc1fleI3b68mzzv {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}
.qQInqJZ8NaBVeQVTF5Jx {
  position: fixed;
  top: 0;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  height: 60px;
  border-bottom: 1px solid #d4dee6;
  background-color: #fff;
  z-index: 2;
}
.qQInqJZ8NaBVeQVTF5Jx + section {
  margin-top: 60px;
}
.jDGmdUr8AZX6W_2Z_sMF {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  margin-left: 10px;
  line-height: 60px;
}
.jDGmdUr8AZX6W_2Z_sMF h1 {
  padding: 0 10px;
  color: #909090;
  cursor: pointer;
  font-weight: 500;
  font-size: 18px;
}
.jDGmdUr8AZX6W_2Z_sMF .H_4RB44_GX7wPDt6p10S {
  font-weight: 700;
  color: #000;
}
.n4H71Qj4TFWLpjSxfJCg {
  flex: 1;
  display: flex;
  justify-content: flex-end;
}
.n4H71Qj4TFWLpjSxfJCg .UZH75qu8TIq7uacJLyIa {
  justify-content: center;
  width: 32px;
  height: 32px;
  margin-right: 20px;
  border: 1px #a39595 solid;
  border-radius: 50%;
}
`,"",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/layout/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EACE,eAAA;EACA,MAAA;EDFA,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECCA,WAAA;EACA,YAAA;EACA,gCAAA;EACA,sBAAA;EACA,UAAA;AASF;AAjBA;EAUI,gBAAA;AAUJ;AAPA;EDbE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECYA,iBAAA;EACA,iBAAA;AAYF;AAfA;EAKI,eAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;AAaJ;AAtBA;EAYI,gBAAA;EACA,WAAA;AAaJ;AAVA;EACE,OAAA;EACA,aAAA;EACA,yBAAA;AAYF;AAfA;EAKI,uBAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAaJ",sourcesContent:[`.flex-start {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}`,`@import '../../pc/styles/mixins';
.header {
  position: fixed;
  top: 0;
  .flex-start();
  width: 100%;
  height: 60px;
  border-bottom: 1px solid #d4dee6;
  background-color: #fff;
  z-index: 2;
  + section {
    margin-top: 60px;
  }
}
.left {
  .flex-start();
  margin-left: 10px;
  line-height: 60px;
  h1 {
    padding: 0 10px;
    color: #909090;
    cursor: pointer;
    font-weight: 500;
    font-size: 18px;
  }
  .active {
    font-weight: 700;
    color: #000;
  }
}
.right {
  flex: 1;
  display: flex;
  justify-content: flex-end;
  .via {
    justify-content: center;
    width: 32px;
    height: 32px;
    margin-right: 20px;
    border: 1px rgb(163, 149, 149) solid;
    border-radius: 50%;
  }
}

`],sourceRoot:""}]),i.locals={"flex-start":"E_T9zZc1fleI3b68mzzv",header:"qQInqJZ8NaBVeQVTF5Jx",left:"jDGmdUr8AZX6W_2Z_sMF",active:"H_4RB44_GX7wPDt6p10S",right:"n4H71Qj4TFWLpjSxfJCg",via:"UZH75qu8TIq7uacJLyIa"};const p=i},2722:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.dPOKicdWl10kJJrZR3SE {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}
.VRQrf82kK3SW4HyNduCq {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  padding: 6px 8px;
}
.Czq8gLyGaCePULPeu_oA {
  flex: 1;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}
.Czq8gLyGaCePULPeu_oA ul {
  font-size: 14px;
  padding-bottom: 3px;
}
.Czq8gLyGaCePULPeu_oA ul li {
  cursor: pointer;
  color: #909090;
}
.Czq8gLyGaCePULPeu_oA ul li :hover {
  color: #00a4ec;
}
.Czq8gLyGaCePULPeu_oA ul .dKbNGZhRykEEItXIv3Wb {
  font-weight: 700;
  color: #3d3d3d;
}
.Czq8gLyGaCePULPeu_oA ul h1 {
  font-size: 14px;
  padding: 5px 20px;
}
.Czq8gLyGaCePULPeu_oA ul h1.dKbNGZhRykEEItXIv3Wb {
  font-weight: 700;
  background-color: #e4e4e4;
}
.Czq8gLyGaCePULPeu_oA ul p {
  padding: 5px 0;
}
.hbR7A9CbioyLLm2gPWmc {
  flex: 9;
}
`,"",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/views/blog/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EDAE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECDA,WAAA;EACA,gBAAA;AASF;AAPA;EACE,OAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AASF;AAbA;EAMI,eAAA;EACA,mBAAA;AAUJ;AAjBA;EASM,eAAA;EACA,cAAA;AAWN;AArBA;EAaM,cAAA;AAWN;AAxBA;EAgBM,gBAAA;EACA,cAAA;AAWN;AA5BA;EAoBM,eAAA;EACA,iBAAA;AAWN;AAhCA;EAwBM,gBAAA;EACA,yBAAA;AAWN;AApCA;EA4BM,cAAA;AAWN;AAPA;EACE,OAAA;AASF",sourcesContent:[`.flex-start {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}`,`@import '@/platform/pc/styles/mixins.less';
.blog {
  .flex-start();
  width: 100%;
  padding: 6px 8px;
}
.blogMenu {
  flex: 1;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
  ul {
    font-size: 14px;
    padding-bottom: 3px;
    li {
      cursor: pointer;
      color: #909090;
    }
    li :hover {
      color: #00a4ec;
    }
    .active {
      font-weight: 700;
      color: #3d3d3d;
    }
    h1 {
      font-size: 14px;
      padding: 5px 20px;
    }
    h1.active {
      font-weight: 700;
      background-color: #e4e4e4;
    }
    p {
      padding: 5px 0;
    }
  }
}
.blogContent {
  flex:9;
}
`],sourceRoot:""}]),i.locals={"flex-start":"dPOKicdWl10kJJrZR3SE",blog:"VRQrf82kK3SW4HyNduCq",blogMenu:"Czq8gLyGaCePULPeu_oA",active:"dKbNGZhRykEEItXIv3Wb",blogContent:"hbR7A9CbioyLLm2gPWmc"};const p=i},811:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.ooHbWpcWiQRpnZTvtbyg {
  height: 100vh;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}
ul {
  font-size: 14px;
  padding-bottom: 3px;
}
ul li {
  cursor: pointer;
  color: #909090;
}
ul li :hover {
  color: #00a4ec;
}
ul .TUMYIo6FCyHV8BH2pONy {
  font-weight: 700;
  color: #3d3d3d;
}
ul h1 {
  font-size: 14px;
  padding: 5px 20px;
}
ul li.TUMYIo6FCyHV8BH2pONy,
ul h1.TUMYIo6FCyHV8BH2pONy {
  font-weight: 700;
  background-color: #e4e4e4;
}
ul h1 ~ ul li {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 30px;
  padding-right: 5px;
}
ul ul > li {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 20px;
  padding-right: 5px;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/aside/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AACF;AAEA;EACE,eAAA;EACA,mBAAA;AAAF;AAFA;EAKI,eAAA;EACA,cAAA;AAAJ;AANA;EAUI,cAAA;AADJ;AATA;EAcI,gBAAA;EACA,cAAA;AAFJ;AAbA;EAmBI,eAAA;EACA,iBAAA;AAHJ;AAjBA;;EAyBI,gBAAA;EACA,yBAAA;AAJJ;AAtBA;EA8BI,gBAAA;EACA,mBAAA;EACA,kBAAA;EACA,kBAAA;AALJ;AA5BA;EAqCI,gBAAA;EACA,mBAAA;EACA,kBAAA;EACA,kBAAA;AANJ",sourcesContent:[`.aside {
  height: 100vh;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}

ul {
  font-size: 14px;
  padding-bottom: 3px;

  li {
    cursor: pointer;
    color: #909090;
  }

  li :hover {
    color: #00a4ec;
  }

  .active {
    font-weight: 700;
    color: #3d3d3d;
  }

  h1 {
    font-size: 14px;
    padding: 5px 20px;
  }

  li.active,
  h1.active {
    font-weight: 700;
    background-color: #e4e4e4;
  }

  h1~ul li {
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 30px;
    padding-right: 5px;
  }

  ul > li{
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 20px;
    padding-right: 5px;
  }
}`],sourceRoot:""}]),i.locals={aside:"ooHbWpcWiQRpnZTvtbyg",active:"TUMYIo6FCyHV8BH2pONy"};const p=i},7722:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.mCLUMJbXUyMsQxmzskVn {
  display: flex;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;AACF",sourcesContent:[`.layout {
  display: flex;
  // height: calc(100vh - 60px);
}`],sourceRoot:""}]),i.locals={layout:"mCLUMJbXUyMsQxmzskVn"};const p=i},5066:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.fvnjaAGF4afUmF0jyJZ9 {
  flex: 9;
  padding: 10px 20px;
  color: #777;
  background-color: #e4e4e4;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/main/index.module.less"],names:[],mappings:"AAAA;EACE,OAAA;EACA,kBAAA;EACA,WAAA;EACA,yBAAA;AACF",sourcesContent:[`.main {
  flex: 9;
  padding: 10px 20px;
  color: #777;
  background-color: #e4e4e4;
}
`],sourceRoot:""}]),i.locals={main:"fvnjaAGF4afUmF0jyJZ9"};const p=i},7987:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),i.locals={};const p=i},1964:(g,m,n)=>{n.r(m),n.d(m,{default:()=>Xe});var e=n(4999),E=n(2215),_=n(6773),u=n(8484),i=n(628),p=n(1362);function ee(A){const a=(0,u.Zp)(),[o,t]=e.useState(null),d=r=>{t(r.currentTarget)},c=()=>{t(null)},l=!!o,s=l?"simple-popover":void 0;return e.createElement("div",null,e.createElement("div",{"aria-describedby":s,variant:"contained",onClick:d},A.children),e.createElement(i.Ay,{id:s,open:l,anchorEl:o,onClose:c,anchorOrigin:{vertical:"bottom",horizontal:"left"}},e.createElement(p.A,{sx:{p:1},onClick:()=>a("/blog")},"\u968F\u7B14"),e.createElement(p.A,{sx:{p:1}},e.createElement("a",{href:"https://juejin.cn/creator/content/column?status=all",target:"_blank",style:{color:"#3d3d3d"}},"\u535A\u5BA2"))))}var ne=n(5072),C=n.n(ne),te=n(7825),v=n.n(te),Ae=n(7659),x=n.n(Ae),oe=n(5056),h=n.n(oe),le=n(540),y=n.n(le),ae=n(1113),B=n.n(ae),S=n(6537),P={};P.styleTagTransform=B(),P.setAttributes=h(),P.insert=x().bind(null,"head"),P.domAPI=v(),P.insertStyleElement=y();var Ze=C()(S.A,P);const R=S.A&&S.A.locals?S.A.locals:void 0;function se(){const A=(0,u.Zp)(),a=q.routes[0].children.filter(l=>l.activeMenu!==!1),[o,t]=(0,e.useState)(a[0]);function d(l){t(l),A(l.path)}function c(){t(null)}return e.createElement(e.Fragment,null,e.createElement("div",{className:R.header},e.createElement("section",{className:R.left},a.map(l=>e.createElement("h1",{className:l.path===o.path?R.active:"",key:l.path,onClick:()=>d(l)},l.cname))),e.createElement("section",{className:R.right},e.createElement(ee,null,e.createElement("div",{className:R.via,onClick:()=>c()})))),e.createElement(u.sv,null))}const re=se;var W=n(811),D={};D.styleTagTransform=B(),D.setAttributes=h(),D.insert=x().bind(null,"head"),D.domAPI=v(),D.insertStyleElement=y();var we=C()(W.A,D);const N=W.A&&W.A.locals?W.A.locals:void 0;function de(A){return[...new Set(A.map(t=>t.pid))].reverse().map(t=>({pid:t,children:A.reduce((d,c)=>(t===c.pid&&!d.includes(c.type)&&d.push(c.type),d),[])}))}function ie(A){const{originData:a,curMenu:o,setCurMenu:t}=A;function d(c){t(c)}return e.createElement("aside",{className:N.aside},e.createElement("ul",{className:N.navUl},de(a).map((c,l)=>e.createElement("li",{key:l},c.pid?e.createElement("h1",{onClick:()=>d(c.children[0])},c.pid):null,e.createElement("ul",null,c.children.map((s,r)=>e.createElement("li",{key:r,className:o===s?N.active:"",onClick:()=>d(s)},s)))))))}const ce=ie;var F=n(5066),M={};M.styleTagTransform=B(),M.setAttributes=h(),M.insert=x().bind(null,"head"),M.domAPI=v(),M.insertStyleElement=y();var He=C()(F.A,M);const ue=F.A&&F.A.locals?F.A.locals:void 0;var j=n(1468),O={};O.styleTagTransform=B(),O.setAttributes=h(),O.insert=x().bind(null,"head"),O.domAPI=v(),O.insertStyleElement=y();var Ge=C()(j.A,O);const T=j.A&&j.A.locals?j.A.locals:void 0;var X=n(5426);function me(A){var a,o;return e.createElement(e.Fragment,null,e.createElement("div",{className:T.menu},(a=A.list[0])==null?void 0:a.type),e.createElement("div",{className:T.content},(o=A.list)==null?void 0:o.map((t,d)=>{let c=t.logo.startsWith("imgs")||t.logo.startsWith("public")||(0,X.g)(t.logo),l=null;return t.logo.startsWith("imgs")&&(l=n(2186)("./"+t.logo)),t.logo.startsWith("public")&&(l=n(9773)),(0,X.g)(t.logo)&&(l=t.logo),e.createElement("a",{href:t.href,target:"_blank",className:T.link,key:d},e.createElement("div",{className:T.card},c?e.createElement("img",{width:"32px",height:"32px",src:l}):e.createElement("p",null,t.logo),e.createElement("div",null,e.createElement("b",{className:T.title},t.title),e.createElement("p",{className:T.describe},t.describe))))})))}function Ee(A){return e.createElement("section",{className:ue.main},e.createElement(me,{list:A.originData}))}const pe=Ee;var J=n(7722),L={};L.styleTagTransform=B(),L.setAttributes=h(),L.insert=x().bind(null,"head"),L.domAPI=v(),L.insertStyleElement=y();var Ve=C()(J.A,L);const _e=J.A&&J.A.locals?J.A.locals:void 0;var fe=n(2131),ge=(A,a,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},l=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,l);s((o=o.apply(A,a)).next())});function Ce(){const[A,a]=(0,e.useState)("AI\u5DE5\u5177"),[o,t]=(0,e.useState)([]);return(0,e.useEffect)(()=>{function d(){return ge(this,null,function*(){const c=yield(0,fe.Z)();t(c)})}d()},[]),e.createElement(e.Fragment,null,e.createElement("section",{className:_e.layout},e.createElement(ce,{originData:o,curMenu:A,setCurMenu:a}),e.createElement(pe,{originData:o.filter(d=>d.type===A)})))}const ve=Ce;var xe=n(4367),he=n.n(xe),K=n(2722),b={};b.styleTagTransform=B(),b.setAttributes=h(),b.insert=x().bind(null,"head"),b.domAPI=v(),b.insertStyleElement=y();var Qe=C()(K.A,b);const Z=K.A&&K.A.locals?K.A.locals:void 0,ye=[],w=n(4548).keys().map(A=>(ye.push(A.replace(/\.\//,"").replace(/.md$/,"")),n(3823)("./blog"+A.replace(/\.\//,"/"))));function Be(){const A=(0,e.useRef)(null),a=w[w.length-1].default;return(0,e.useEffect)(()=>{A.current&&(A.current.innerHTML=a)},[]),e.createElement("section",{className:Z.blog},e.createElement("div",{className:he()("markdown-body",Z.blogContent),ref:A,style:{backgroundColor:"white"}}))}const Pe=Be;var De=n(7157),Me=n(9275),Oe=n(916),Te=n(9791),H=n(900),Le=n(8020),be=n(7925),z=n(7987),I={};I.styleTagTransform=B(),I.setAttributes=h(),I.insert=x().bind(null,"head"),I.domAPI=v(),I.insertStyleElement=y();var Ye=C()(z.A,I);const Ie=z.A&&z.A.locals?z.A.locals:void 0;var U=n(4291),G=(A,a,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},l=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,l);s((o=o.apply(A,a)).next())});function Re(){const A=(0,u.Zp)(),[a,o]=(0,e.useState)([]);(0,e.useEffect)(()=>{function l(s){return G(this,null,function*(){const r=yield(0,U.vS)(s);o(r)})}l("")},[]);const t=(0,e.useRef)(null),d=l=>{t.current=l.touches[0].clientX},c=(l,s)=>G(this,null,function*(){l.changedTouches[0].clientX-t.current<-80&&(yield(0,U.V_)(s.id),o((yield(0,U.vS)(""))||[]))});return e.createElement("section",{className:Ie.memorandum},e.createElement(De.A,{sx:{width:"100%",bgcolor:"background.paper"}},e.createElement(Me.A,{sx:{padding:0}},a.map(l=>e.createElement(Oe.A,{key:l.id,onTouchStart:d,onTouchEnd:s=>c(s,l),onClick:()=>A("/memorandum-detail",{state:l})},e.createElement(Te.A,{primary:l.title}))))),e.createElement(H.A,{ariaLabel:"\u65B0\u589E",sx:{position:"absolute",bottom:16,right:16},icon:e.createElement(Le.A,{openIcon:e.createElement(be.A,null)}),onClick:()=>A("/memorandum-detail")}))}var V=n(3815),Ue=n(2141),Se=Object.defineProperty,We=Object.defineProperties,Fe=Object.getOwnPropertyDescriptors,Q=Object.getOwnPropertySymbols,je=Object.prototype.hasOwnProperty,Je=Object.prototype.propertyIsEnumerable,Y=(A,a,o)=>a in A?Se(A,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):A[a]=o,k=(A,a)=>{for(var o in a||(a={}))je.call(a,o)&&Y(A,o,a[o]);if(Q)for(var o of Q(a))Je.call(a,o)&&Y(A,o,a[o]);return A},$=(A,a)=>We(A,Fe(a)),Ke=(A,a,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},l=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,l);s((o=o.apply(A,a)).next())});function ze(){const A=(0,u.zy)(),a=(0,u.Zp)(),o=A.state,[t,d]=(0,e.useState)(o||{}),c=s=>Ke(this,null,function*(){const{title:r,content:f}=s;s!=null&&s.id?(yield(0,U.fk)(s.id,{title:r,content:f}),a("/memorandum")):(yield(0,U.B5)({title:r,content:f}),a("/memorandum"))}),l=(0,e.useRef)(null);return(0,e.useLayoutEffect)(()=>{if(l.current){const s=l.current;s.style.height="calc(100vh - 148px)",s.style.boxSizing="border-box"}},[]),e.createElement("section",null,e.createElement("form",{onSubmit:()=>c(t)},e.createElement(V.A,{label:"\u6807\u9898\uFF1A",variant:"filled",value:t==null?void 0:t.title,onChange:s=>d($(k({},t),{title:s.target.value})),fullWidth:!0}),e.createElement(V.A,{ref:l,label:"\u5185\u5BB9\uFF1A",variant:"filled",value:t==null?void 0:t.content,onChange:s=>d($(k({},t),{content:s.target.value})),fullWidth:!0,multiline:!0})),e.createElement(H.A,{ariaLabel:"\u4FDD\u5B58",sx:{position:"absolute",bottom:16,right:16},icon:e.createElement(Ue.A,null),onClick:()=>c(t)}))}function Ne(){return e.createElement("div",null,"\u6682\u65E0\u5B8C\u5584\uFF0C\u540E\u7EED\u4E0A\u7EBF")}const q=(0,E.Ys)([{path:"/",element:e.createElement(re,null),errorElement:e.createElement(_.A,null),children:[{path:"/",cname:"\u524D\u7AEF\u5BFC\u822A",element:e.createElement(ve,null)},{path:"blog",cname:"\u535A\u5BA2",activeMenu:!1,element:e.createElement(Pe,null)},{path:"memorandum",cname:"\u5907\u5FD8\u5F55",element:e.createElement(Re,null)},{path:"memorandum-detail",cname:"\u5907\u5FD8\u5F55-\u8BE6\u60C5",activeMenu:!1,element:e.createElement(ze,null)},{path:"ebook",cname:"\u7535\u5B50\u4E66",element:e.createElement(Ne,null)}]}]);function Xe(){return e.createElement(e.StrictMode,null,e.createElement(E.pg,{router:q}))}}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,