"use strict";(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[108],{6967:(n,e,A)=>{A.r(e),A.d(e,{default:()=>dn});var t=A(959),l=A(9069),a=A(7714),r=A(5034),o=A(9872),i=A(4336),c=A(7671);function s(n){var e=(0,r.s0)(),A=t.useState(null),l=(0,o.Z)(A,2),a=l[0],s=l[1],d=Boolean(a),p=d?"simple-popover":void 0;return t.createElement("div",null,t.createElement("div",{"aria-describedby":p,variant:"contained",onClick:function(n){s(n.currentTarget)}},n.children),t.createElement(i.ZP,{id:p,open:d,anchorEl:a,onClose:function(){s(null)},anchorOrigin:{vertical:"bottom",horizontal:"left"}},t.createElement(c.Z,{sx:{p:1},onClick:function(){return e("/blog")}},"随笔"),t.createElement(c.Z,{sx:{p:1}},t.createElement("a",{href:"https://juejin.cn/creator/content/column?status=all",target:"_blank",style:{color:"#3d3d3d"}},"博客"))))}var d=A(3072),p=A.n(d),u=A(2298),m=A.n(u),f=A(7976),E=A.n(f),g=A(5147),x=A.n(g),h=A(566),v=A.n(h),C=A(9396),b=A.n(C),B=A(7239),w={};w.styleTagTransform=b(),w.setAttributes=x(),w.insert=E().bind(null,"head"),w.domAPI=m(),w.insertStyleElement=v(),p()(B.Z,w);const y=B.Z&&B.Z.locals?B.Z.locals:void 0;function N(){var n=(0,r.s0)(),e=["前端导航","电子书"],A=(0,t.useState)(e[0]),l=(0,o.Z)(A,2),a=l[0],i=l[1];return t.createElement("div",{className:y.header},t.createElement("section",{className:y.left},e.map((function(e){return t.createElement("h1",{className:e===a?y.active:"",key:e,onClick:function(){return function(e){i(e),"前端导航"===e&&n("/"),"chatGPT"===e&&n("/chatGPT"),"电子书"===e&&n("/ebook")}(e)}},e)}))),t.createElement("section",{className:y.right},t.createElement(s,null,t.createElement("div",{className:y.via,onClick:function(){i("")}})),t.createElement("button",{onClick:function(){alert("等待完善")}},"登录")))}const k=function(){return t.createElement(t.Fragment,null,t.createElement(N,null),t.createElement(r.j3,null))};var Z=A(9398),I={};I.styleTagTransform=b(),I.setAttributes=x(),I.insert=E().bind(null,"head"),I.domAPI=m(),I.insertStyleElement=v(),p()(Z.Z,I);const G=Z.Z&&Z.Z.locals?Z.Z.locals:void 0;var T=A(3605),F=A(6435);const M=function(){var n,e,A,l=(0,t.useState)("CommonTools"),a=(0,o.Z)(l,2),r=a[0],i=a[1],c=(n=T.Z,e=new Map,A=[],n.forEach((function(n,t){n.menu?(A.push({title:n.title,card:n.card,eventName:t}),e.set(n.menu,A)):e.set(n.title,{title:n.title,card:n.card,eventName:t})})),e),s=[];function d(n,e){F.Z.emit("nemuClick",e),i(e)}return c.forEach((function(n,e){s.push(t.createElement("li",{key:e},t.createElement("h1",{className:(null==n?void 0:n.eventName)===r||Array.isArray(n)&&n.some((function(n){return n.eventName===r}))?G.active:"",onClick:function(e){return d(0,n.eventName||n[0].eventName)}},e),Array.isArray(n)?t.createElement("ul",null,n.map((function(n){return t.createElement("li",{key:n.title,className:n.eventName===r?G.active:"",onClick:function(e){return d(0,n.eventName)}},t.createElement("p",null,n.title))}))):t.createElement(t.Fragment,null)))})),t.createElement("aside",{className:G.aside},t.createElement("ul",null,s))};var z=A(6097),H=A(9993),J=A.n(H),O=A(8743),S={};S.styleTagTransform=b(),S.setAttributes=x(),S.insert=E().bind(null,"head"),S.domAPI=m(),S.insertStyleElement=v(),p()(O.Z,S);const L=O.Z&&O.Z.locals?O.Z.locals:void 0;var P=A(4032),U={};U.styleTagTransform=b(),U.setAttributes=x(),U.insert=E().bind(null,"head"),U.domAPI=m(),U.insertStyleElement=v(),p()(P.Z,U);const q=P.Z&&P.Z.locals?P.Z.locals:void 0;var Q=A(902);function R(n){var e,A;return t.createElement(t.Fragment,null,t.createElement("div",{className:q.menu},null===(e=n.data)||void 0===e?void 0:e.title),t.createElement("div",{className:q.content},null===(A=n.data)||void 0===A?void 0:A.card.map((function(n,e){var A=(0,Q.Q)(n.logo);return t.createElement("a",{href:n.href,target:"_blank",className:q.link,key:e},t.createElement("div",{className:q.card},A?t.createElement("img",{width:"32px",height:"32px",src:n.logo}):t.createElement("p",null,n.logo),t.createElement("div",null,t.createElement("b",{className:q.title},n.title),t.createElement("p",{className:q.describe},n.describe))))}))))}const W=function(){var n=(0,t.useState)("CommonTools"),e=(0,o.Z)(n,2),A=e[0],l=e[1],a=T.Z;return(0,t.useEffect)((function(){F.Z.addListener("nemuClick",function(){var n=(0,z.Z)(J().mark((function n(e){return J().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:l(e);case 1:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}())}),[]),t.createElement("section",{className:L.main},t.createElement(R,{data:a.get(A)}))};var D=A(5445),j={};j.styleTagTransform=b(),j.setAttributes=x(),j.insert=E().bind(null,"head"),j.domAPI=m(),j.insertStyleElement=v(),p()(D.Z,j);const K=D.Z&&D.Z.locals?D.Z.locals:void 0,_=function(){return t.createElement(t.Fragment,null,t.createElement("div",{className:K.layout},t.createElement(M,null),t.createElement(W,null)))};var V=A(7075),Y=(A(698),new V.TU.Renderer);V.TU.setOptions({renderer:Y,gfm:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1});const X=V.TU;var $=A(4875),nn=A.n($),en=A(4484),An={};An.styleTagTransform=b(),An.setAttributes=x(),An.insert=E().bind(null,"head"),An.domAPI=m(),An.insertStyleElement=v(),p()(en.Z,An);const tn=en.Z&&en.Z.locals?en.Z.locals:void 0;var ln=[],an=A(4952).keys().map((function(n){return ln.push(n.replace(/\.\//,"").replace(/.md$/,"")),A(1397)("./blog"+n.replace(/\.\//,"/"))}));const rn=function(){var n=(0,t.useRef)(null);return(0,t.useEffect)((function(){n.current.innerHTML=X(an[an.length-1].default)}),[]),t.createElement("div",{className:tn.blog},t.createElement("aside",{className:tn.blogMenu},t.createElement("ul",null,ln.map((function(n){return t.createElement("li",{key:n},t.createElement("h1",null,ln[ln.length-1]))})))),t.createElement("div",{className:nn()("markdown-body",tn.blogContent),ref:n,style:{backgroundColor:"white"}}))};var on=A(1917);function cn(){function n(){return(n=(0,z.Z)(J().mark((function n(){var e;return J().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,(0,on.z)();case 2:e=n.sent,a(e);case 4:case"end":return n.stop()}}),n)})))).apply(this,arguments)}var e=(0,t.useState)([]),A=(0,o.Z)(e,2),l=A[0],a=A[1];return(0,t.useEffect)((function(){!function(){n.apply(this,arguments)}()}),[]),t.createElement("div",{className:"pdf-view"},l.map((function(n){return t.createElement("p",{key:n.path}," ",t.createElement("a",{href:n.path,target:"_blank"},n.name)," ")})))}const sn=(0,l.aj)([{path:"/",element:t.createElement(k,null),errorElement:t.createElement(a.Z,null),children:[{path:"/",element:t.createElement(_,null)},{path:"blog",element:t.createElement(rn,null)},{path:"ebook",element:t.createElement(cn,null)}]}]);function dn(){return t.createElement(t.StrictMode,null,t.createElement(r.pG,{router:sn}))}},4032:(n,e,A)=>{A.d(e,{Z:()=>o});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a)()(l());r.push([n.id,".YUJapW4ZxiHe6Z9WsAAQ {\n  margin-bottom: 20px;\n  font-size: 20px;\n  letter-spacing: 1.2px;\n  font-weight: 400;\n}\n.jPNtlxd26HUnkLEUupN_ {\n  display: flex;\n  flex-flow: wrap row;\n}\n.WTL9ea9UYb0fL_tcUwB8 {\n  width: 20%;\n  padding-right: 10px;\n  padding-bottom: 10px;\n}\n.WTL9ea9UYb0fL_tcUwB8:nth-child(5n) {\n  padding-right: 0;\n}\n.JcpGAyFTIvlNJ15aMgft {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 88px;\n  vertical-align: top;\n  background-color: #fff;\n}\n.JcpGAyFTIvlNJ15aMgft:hover {\n  box-shadow: 0 6px 16px 0 #d6e0e8;\n}\n.JcpGAyFTIvlNJ15aMgft > div {\n  flex: 1;\n}\n.JcpGAyFTIvlNJ15aMgft > img,\n.JcpGAyFTIvlNJ15aMgft > p {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n.LzDpTOboxHyGffQPFguS {\n  font-size: 14px;\n  color: #3d3d3d;\n}\n.U0gWB0Hr6NXteuqwls7E {\n  font-size: 12px;\n  color: #909090;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/components/card/index.module.less"],names:[],mappings:"AAAA;EACE,mBAAA;EACA,eAAA;EACA,qBAAA;EACA,gBAAA;AACF;AAEA;EACE,aAAA;EACA,mBAAA;AAAF;AAGA;EACE,UAAA;EACA,mBAAA;EACA,oBAAA;AADF;AAIA;EACE,gBAAA;AAFF;AAKA;EACE,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,YAAA;EACA,mBAAA;EACA,sBAAA;AAHF;AAKE;EACE,gCAAA;AAHJ;AANA;EAaI,OAAA;AAJJ;AATA;;EAkBI,iBAAA;EACA,kBAAA;AALJ;AASA;EACE,eAAA;EACA,cAAA;AAPF;AAUA;EACE,eAAA;EACA,cAAA;AARF",sourcesContent:[".menu {\n  margin-bottom: 20px;\n  font-size: 20px;\n  letter-spacing: 1.2px;\n  font-weight: 400;\n}\n\n.content {\n  display: flex;\n  flex-flow: wrap row;\n}\n\n.link {\n  width: 20%;\n  padding-right: 10px;\n  padding-bottom: 10px;\n}\n\n.link:nth-child(5n) {\n  padding-right: 0;\n}\n\n.card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 88px;\n  vertical-align: top;\n  background-color: #fff;\n\n  &:hover {\n    box-shadow: 0 6px 16px 0 #d6e0e8;\n  }\n\n  >div {\n    flex: 1;\n  }\n\n  >img,\n  >p {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n}\n\n.title {\n  font-size: 14px;\n  color: #3d3d3d;\n}\n\n.describe {\n  font-size: 12px;\n  color: #909090;\n}"],sourceRoot:""}]),r.locals={menu:"YUJapW4ZxiHe6Z9WsAAQ",content:"jPNtlxd26HUnkLEUupN_",link:"WTL9ea9UYb0fL_tcUwB8",card:"JcpGAyFTIvlNJ15aMgft",title:"LzDpTOboxHyGffQPFguS",describe:"U0gWB0Hr6NXteuqwls7E"};const o=r},7239:(n,e,A)=>{A.d(e,{Z:()=>p});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a),o=A(6668),i=A.n(o),c=new URL(A(8226),A.b),s=r()(l()),d=i()(c);s.push([n.id,`.Hmlb4xeEEog0X8nI250q {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.IKVDj1_5kGxHX2DVMlNq {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  height: 60px;\n  border-bottom: 1px solid #d4dee6;\n}\n.PGaNiUzxkKEFS8bvOtGn {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  margin-left: 10px;\n  line-height: 60px;\n}\n.PGaNiUzxkKEFS8bvOtGn h1 {\n  padding: 0 10px;\n  color: #909090;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 22px;\n}\n.PGaNiUzxkKEFS8bvOtGn .IeOhqHyqbBG_z2Kise7V {\n  font-weight: 700;\n  color: #000;\n}\n.KBccsZ5fRyWCebdcNboH {\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  margin-right: 20px;\n}\n.KBccsZ5fRyWCebdcNboH .pahSZd5dAnCSfo7AhhMM {\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  margin-right: 20px;\n  border-radius: 50%;\n  background-image: url(${d});\n  background-size: 100% 100%;\n}\n`,"",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/pc/layout/header/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAHA;EDDE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECAE,YAAA;EACA,gCAAA;AAQJ;AALA;EDPE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECME,iBAAA;EACA,iBAAA;AAUJ;AAbA;EAMQ,eAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;AAUR;AApBA;EAcQ,gBAAA;EACA,WAAA;AASR;AALA;EACI,OAAA;EACA,aAAA;EACA,yBAAA;EACA,kBAAA;AAOJ;AAXA;EAOQ,uBAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;EAEA,kBAAA;EACA,yDAAA;EACA,0BAAA;AAMR",sourcesContent:[".flex-start {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}","@import '../../../pc/styles/mixins';\n\n.header {\n    .flex-start();\n    height: 60px;\n    border-bottom: 1px solid #d4dee6;\n}\n\n.left {\n    .flex-start();\n    margin-left: 10px;\n    line-height: 60px;\n\n    h1 {\n        padding: 0 10px;\n        color: #909090;\n        cursor: pointer;\n        font-weight: 500;\n        font-size: 22px;\n    }\n\n    .active {\n        font-weight: 700;\n        color: #000;\n    }\n}\n\n.right {\n    flex: 1;\n    display: flex;\n    justify-content: flex-end;\n    margin-right: 20px;\n    \n    .via {\n        justify-content: center;\n        width: 32px;\n        height: 32px;\n        margin-right: 20px;\n        // border: 1px rgb(163, 149, 149) solid;\n        border-radius: 50%;\n        background-image: url('/public/imgs/logo.webp');\n        background-size: 100% 100%;\n    }\n}"],sourceRoot:""}]),s.locals={"flex-start":"Hmlb4xeEEog0X8nI250q",header:"IKVDj1_5kGxHX2DVMlNq",left:"PGaNiUzxkKEFS8bvOtGn",active:"IeOhqHyqbBG_z2Kise7V",right:"KBccsZ5fRyWCebdcNboH",via:"pahSZd5dAnCSfo7AhhMM"};const p=s},4484:(n,e,A)=>{A.d(e,{Z:()=>o});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a)()(l());r.push([n.id,".u2ZEvliPb7ONFNLu4Dt6 {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.MV_gVOWI9vKcA8cgQ5lJ {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.DH4edRv7bGNmroBIg28t {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\n.DH4edRv7bGNmroBIg28t ul {\n  font-size: 14px;\n  padding-bottom: 3px;\n}\n.DH4edRv7bGNmroBIg28t ul li {\n  cursor: pointer;\n  color: #909090;\n}\n.DH4edRv7bGNmroBIg28t ul li :hover {\n  color: #00a4ec;\n}\n.DH4edRv7bGNmroBIg28t ul .nQ9EL7qsOq3nPGdpwveZ {\n  font-weight: 700;\n  color: #3d3d3d;\n}\n.DH4edRv7bGNmroBIg28t ul h1 {\n  font-size: 14px;\n  padding: 5px 20px;\n}\n.DH4edRv7bGNmroBIg28t ul h1.nQ9EL7qsOq3nPGdpwveZ {\n  font-weight: 700;\n  background-color: #e4e4e4;\n}\n.DH4edRv7bGNmroBIg28t ul p {\n  padding: 5px 0;\n  padding-left: 40px;\n}\n.glrw8CE1cfnmGEoqLTgQ {\n  flex: 9;\n  padding: 10px 200px;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/pc/views/blog/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EDAE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACOF;AAPA;EACE,OAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AASF;AAbA;EAMI,eAAA;EACA,mBAAA;AAUJ;AAjBA;EASM,eAAA;EACA,cAAA;AAWN;AArBA;EAaM,cAAA;AAWN;AAxBA;EAgBM,gBAAA;EACA,cAAA;AAWN;AA5BA;EAoBM,eAAA;EACA,iBAAA;AAWN;AAhCA;EAwBM,gBAAA;EACA,yBAAA;AAWN;AApCA;EA4BM,cAAA;EACA,kBAAA;AAWN;AAPA;EACE,OAAA;EACA,mBAAA;AASF",sourcesContent:[".flex-start {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}","@import '@/platform/pc/styles/mixins.less';\n.blog {\n  .flex-start();\n}\n.blogMenu {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n  ul {\n    font-size: 14px;\n    padding-bottom: 3px;\n    li {\n      cursor: pointer;\n      color: #909090;\n    }\n    li :hover {\n      color: #00a4ec;\n    }\n    .active {\n      font-weight: 700;\n      color: #3d3d3d;\n    }\n    h1 {\n      font-size: 14px;\n      padding: 5px 20px;\n    }\n    h1.active {\n      font-weight: 700;\n      background-color: #e4e4e4;\n    }\n    p {\n      padding: 5px 0;\n      padding-left: 40px;\n    }\n  }\n}\n.blogContent {\n  flex:9;\n  padding: 10px 200px;\n}\n"],sourceRoot:""}]),r.locals={"flex-start":"u2ZEvliPb7ONFNLu4Dt6",blog:"MV_gVOWI9vKcA8cgQ5lJ",blogMenu:"DH4edRv7bGNmroBIg28t",active:"nQ9EL7qsOq3nPGdpwveZ",blogContent:"glrw8CE1cfnmGEoqLTgQ"};const o=r},9398:(n,e,A)=>{A.d(e,{Z:()=>o});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a)()(l());r.push([n.id,"._8lwQlsvvwiO192TglO2Q {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\nul {\n  font-size: 14px;\n  padding-bottom: 3px;\n}\nul li {\n  cursor: pointer;\n  color: #909090;\n}\nul li :hover {\n  color: #00a4ec;\n}\nul .YS8BBIcyBNAZbg2sBLMK {\n  font-weight: 700;\n  color: #3d3d3d;\n}\nul h1 {\n  font-size: 14px;\n  padding: 5px 20px;\n}\nul h1.YS8BBIcyBNAZbg2sBLMK {\n  font-weight: 700;\n  background-color: #e4e4e4;\n}\nul p {\n  padding: 5px 0;\n  padding-left: 40px;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/views/frontend-nav/aside/index.module.less"],names:[],mappings:"AAAA;EACE,OAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AACF;AACA;EACE,eAAA;EACA,mBAAA;AACF;AAHA;EAII,eAAA;EACA,cAAA;AAEJ;AAPA;EAQI,cAAA;AAEJ;AAVA;EAWI,gBAAA;EACA,cAAA;AAEJ;AAdA;EAeI,eAAA;EACA,iBAAA;AAEJ;AAlBA;EAmBI,gBAAA;EACA,yBAAA;AAEJ;AAtBA;EAuBI,cAAA;EACA,kBAAA;AAEJ",sourcesContent:[".aside {\n  flex: 1;\n  background: #fff;\n  box-shadow: 18px 0 0 0 #d4dee6;\n  overflow: hidden;\n}\nul {\n  font-size: 14px;\n  padding-bottom: 3px;\n  li {\n    cursor: pointer;\n    color: #909090;\n  }\n  li :hover {\n    color: #00a4ec;\n  }\n  .active {\n    font-weight: 700;\n    color: #3d3d3d;\n  }\n  h1 {\n    font-size: 14px;\n    padding: 5px 20px;\n  }\n  h1.active {\n    font-weight: 700;\n    background-color: #e4e4e4;\n  }\n  p {\n    padding: 5px 0;\n    padding-left: 40px;\n  }\n}\n\n\n"],sourceRoot:""}]),r.locals={aside:"_8lwQlsvvwiO192TglO2Q",active:"YS8BBIcyBNAZbg2sBLMK"};const o=r},5445:(n,e,A)=>{A.d(e,{Z:()=>o});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a)()(l());r.push([n.id,".o2NKsg1EdBQ7FUtazXZ7 {\n  display: flex;\n  height: calc(100vh - 60px);\n}\n","",{version:3,sources:["webpack://./src/platform/pc/views/frontend-nav/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,0BAAA;AACF",sourcesContent:[".layout {\n  display: flex;\n  height: calc(100vh - 60px);\n}"],sourceRoot:""}]),r.locals={layout:"o2NKsg1EdBQ7FUtazXZ7"};const o=r},8743:(n,e,A)=>{A.d(e,{Z:()=>o});var t=A(187),l=A.n(t),a=A(3282),r=A.n(a)()(l());r.push([n.id,".TZGQvVEELN3rPniqA1id {\n  flex: 9;\n  padding: 10px 20px;\n  color: #777;\n  background-color: #e4e4e4;\n}\n","",{version:3,sources:["webpack://./src/platform/pc/views/frontend-nav/main/index.module.less"],names:[],mappings:"AAAA;EACE,OAAA;EACA,kBAAA;EACA,WAAA;EACA,yBAAA;AACF",sourcesContent:[".main {\n  flex: 9;\n  padding: 10px 20px;\n  color: #777;\n  background-color: #e4e4e4;\n}\n"],sourceRoot:""}]),r.locals={main:"TZGQvVEELN3rPniqA1id"};const o=r},1251:n=>{n.exports="data:image/svg+xml,<svg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 version=%271.1%27 aria-hidden=%27true%27><path fill-rule=%27evenodd%27 d=%27M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z%27></path></svg>"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,