"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[428],{2274:(Dt,K,u)=>{u.d(K,{A:()=>dt});var E=u(1003),P=u.n(E),W=u(2905),q=u.n(W),tt=u(436),ct=u.n(tt),Y=new URL(u(840),u.b),N=q()(P()),nt=ct()(Y);N.push([Dt.id,`@media (prefers-color-scheme: dark) {
  .jhuERrGy2Ez_juioftPJ,
  [data-theme="dark"] {
    /*dark*/
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #e6edf3;
    --color-fg-muted: #848d97;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110, 118, 129, 0.4);
    --color-accent-fg: #2f81f7;
    --color-accent-emphasis: #1f6feb;
    --color-success-fg: #3fb950;
    --color-success-emphasis: #238636;
    --color-attention-fg: #d29922;
    --color-attention-emphasis: #9e6a03;
    --color-attention-subtle: rgba(187, 128, 9, 0.15);
    --color-danger-fg: #f85149;
    --color-danger-emphasis: #da3633;
    --color-done-fg: #a371f7;
    --color-done-emphasis: #8957e5;
  }
}
@media (prefers-color-scheme: light) {
  .jhuERrGy2Ez_juioftPJ,
  [data-theme="light"] {
    /*light*/
    color-scheme: light;
    --color-prettylights-syntax-comment: #57606a;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #6639ba;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #1F2328;
    --color-fg-muted: #656d76;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsl(210, 18%, 87%);
    --color-neutral-muted: rgba(175, 184, 193, 0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-success-fg: #1a7f37;
    --color-success-emphasis: #1f883d;
    --color-attention-fg: #9a6700;
    --color-attention-emphasis: #9a6700;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #d1242f;
    --color-danger-emphasis: #cf222e;
    --color-done-fg: #8250df;
    --color-done-emphasis: #8250df;
  }
}
.jhuERrGy2Ez_juioftPJ {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}
.jhuERrGy2Ez_juioftPJ .aqLz6oeiJK9QIlGLbUub {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url(${nt});
  mask-image: url(${nt});
}
.jhuERrGy2Ez_juioftPJ details,
.jhuERrGy2Ez_juioftPJ figcaption,
.jhuERrGy2Ez_juioftPJ figure {
  display: block;
}
.jhuERrGy2Ez_juioftPJ summary {
  display: list-item;
}
.jhuERrGy2Ez_juioftPJ [hidden] {
  display: none !important;
}
.jhuERrGy2Ez_juioftPJ a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ abbr[title] {
  border-bottom: none;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
.jhuERrGy2Ez_juioftPJ b,
.jhuERrGy2Ez_juioftPJ strong {
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ dfn {
  font-style: italic;
}
.jhuERrGy2Ez_juioftPJ h1 {
  margin: 0.67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ small {
  font-size: 90%;
}
.jhuERrGy2Ez_juioftPJ sub,
.jhuERrGy2Ez_juioftPJ sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.jhuERrGy2Ez_juioftPJ sub {
  bottom: -0.25em;
}
.jhuERrGy2Ez_juioftPJ sup {
  top: -0.5em;
}
.jhuERrGy2Ez_juioftPJ img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ kbd,
.jhuERrGy2Ez_juioftPJ pre,
.jhuERrGy2Ez_juioftPJ samp {
  font-family: monospace;
  font-size: 1em;
}
.jhuERrGy2Ez_juioftPJ figure {
  margin: 1em 40px;
}
.jhuERrGy2Ez_juioftPJ hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: 0.25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}
.jhuERrGy2Ez_juioftPJ input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
.jhuERrGy2Ez_juioftPJ [type=button],
.jhuERrGy2Ez_juioftPJ [type=reset],
.jhuERrGy2Ez_juioftPJ [type=submit] {
  -webkit-appearance: button;
  appearance: button;
}
.jhuERrGy2Ez_juioftPJ [type=checkbox],
.jhuERrGy2Ez_juioftPJ [type=radio] {
  box-sizing: border-box;
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ [type=number]::-webkit-inner-spin-button,
.jhuERrGy2Ez_juioftPJ [type=number]::-webkit-outer-spin-button {
  height: auto;
}
.jhuERrGy2Ez_juioftPJ [type=search]::-webkit-search-cancel-button,
.jhuERrGy2Ez_juioftPJ [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-file-upload-button {
  -webkit-appearance: button;
  appearance: button;
  font: inherit;
}
.jhuERrGy2Ez_juioftPJ a:hover {
  text-decoration: underline;
}
.jhuERrGy2Ez_juioftPJ ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}
.jhuERrGy2Ez_juioftPJ hr::before {
  display: table;
  content: "";
}
.jhuERrGy2Ez_juioftPJ hr::after {
  display: table;
  clear: both;
  content: "";
}
.jhuERrGy2Ez_juioftPJ table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}
.jhuERrGy2Ez_juioftPJ td,
.jhuERrGy2Ez_juioftPJ th {
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ details summary {
  cursor: pointer;
}
.jhuERrGy2Ez_juioftPJ details:not([open]) > *:not(summary) {
  display: none !important;
}
.jhuERrGy2Ez_juioftPJ a:focus,
.jhuERrGy2Ez_juioftPJ [role=button]:focus,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.jhuERrGy2Ez_juioftPJ a:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ [role=button]:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}
.jhuERrGy2Ez_juioftPJ a:focus-visible,
.jhuERrGy2Ez_juioftPJ [role=button]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.jhuERrGy2Ez_juioftPJ a:not([class]):focus,
.jhuERrGy2Ez_juioftPJ a:not([class]):focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus-visible {
  outline-offset: 0;
}
.jhuERrGy2Ez_juioftPJ kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}
.jhuERrGy2Ez_juioftPJ h1,
.jhuERrGy2Ez_juioftPJ h2,
.jhuERrGy2Ez_juioftPJ h3,
.jhuERrGy2Ez_juioftPJ h4,
.jhuERrGy2Ez_juioftPJ h5,
.jhuERrGy2Ez_juioftPJ h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}
.jhuERrGy2Ez_juioftPJ h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}
.jhuERrGy2Ez_juioftPJ h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}
.jhuERrGy2Ez_juioftPJ h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.875em;
}
.jhuERrGy2Ez_juioftPJ h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.85em;
  color: var(--color-fg-muted);
}
.jhuERrGy2Ez_juioftPJ p {
  margin-top: 0;
  margin-bottom: 10px;
}
.jhuERrGy2Ez_juioftPJ blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: 0.25em solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ ul,
.jhuERrGy2Ez_juioftPJ ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}
.jhuERrGy2Ez_juioftPJ ol ol,
.jhuERrGy2Ez_juioftPJ ul ol {
  list-style-type: lower-roman;
}
.jhuERrGy2Ez_juioftPJ ul ul ol,
.jhuERrGy2Ez_juioftPJ ul ol ol,
.jhuERrGy2Ez_juioftPJ ol ul ol,
.jhuERrGy2Ez_juioftPJ ol ol ol {
  list-style-type: lower-alpha;
}
.jhuERrGy2Ez_juioftPJ dd {
  margin-left: 0;
}
.jhuERrGy2Ez_juioftPJ tt,
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ samp {
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
}
.jhuERrGy2Ez_juioftPJ pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
  word-wrap: normal;
}
.jhuERrGy2Ez_juioftPJ .aqLz6oeiJK9QIlGLbUub {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}
.jhuERrGy2Ez_juioftPJ input::-webkit-outer-spin-button,
.jhuERrGy2Ez_juioftPJ input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}
.jhuERrGy2Ez_juioftPJ .xx2xJAGzaNS8rhIWQR_D {
  margin-right: var(--base-size-8, 8px) !important;
}
.jhuERrGy2Ez_juioftPJ::before {
  display: table;
  content: "";
}
.jhuERrGy2Ez_juioftPJ::after {
  display: table;
  clear: both;
  content: "";
}
.jhuERrGy2Ez_juioftPJ > *:first-child {
  margin-top: 0 !important;
}
.jhuERrGy2Ez_juioftPJ > *:last-child {
  margin-bottom: 0 !important;
}
.jhuERrGy2Ez_juioftPJ a:not([href]) {
  color: inherit;
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ .y1a3snSdabAY7BJykM_a {
  color: var(--color-danger-fg);
}
.jhuERrGy2Ez_juioftPJ .Kr09SQ9Ha168wbwr2smk {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}
.jhuERrGy2Ez_juioftPJ .Kr09SQ9Ha168wbwr2smk:focus {
  outline: none;
}
.jhuERrGy2Ez_juioftPJ p,
.jhuERrGy2Ez_juioftPJ blockquote,
.jhuERrGy2Ez_juioftPJ ul,
.jhuERrGy2Ez_juioftPJ ol,
.jhuERrGy2Ez_juioftPJ dl,
.jhuERrGy2Ez_juioftPJ table,
.jhuERrGy2Ez_juioftPJ pre,
.jhuERrGy2Ez_juioftPJ details {
  margin-top: 0;
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ blockquote > :first-child {
  margin-top: 0;
}
.jhuERrGy2Ez_juioftPJ blockquote > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ h1 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h2 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h3 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h4 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h5 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h6 .HHtUXtK67S7PUOICWKh8 {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk {
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8 {
  visibility: visible;
}
.jhuERrGy2Ez_juioftPJ h1 tt,
.jhuERrGy2Ez_juioftPJ h1 code,
.jhuERrGy2Ez_juioftPJ h2 tt,
.jhuERrGy2Ez_juioftPJ h2 code,
.jhuERrGy2Ez_juioftPJ h3 tt,
.jhuERrGy2Ez_juioftPJ h3 code,
.jhuERrGy2Ez_juioftPJ h4 tt,
.jhuERrGy2Ez_juioftPJ h4 code,
.jhuERrGy2Ez_juioftPJ h5 tt,
.jhuERrGy2Ez_juioftPJ h5 code,
.jhuERrGy2Ez_juioftPJ h6 tt,
.jhuERrGy2Ez_juioftPJ h6 code {
  padding: 0 0.2em;
  font-size: inherit;
}
.jhuERrGy2Ez_juioftPJ summary h1,
.jhuERrGy2Ez_juioftPJ summary h2,
.jhuERrGy2Ez_juioftPJ summary h3,
.jhuERrGy2Ez_juioftPJ summary h4,
.jhuERrGy2Ez_juioftPJ summary h5,
.jhuERrGy2Ez_juioftPJ summary h6 {
  display: inline-block;
}
.jhuERrGy2Ez_juioftPJ summary h1 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h2 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h3 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h4 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h5 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h6 .Kr09SQ9Ha168wbwr2smk {
  margin-left: -40px;
}
.jhuERrGy2Ez_juioftPJ summary h1,
.jhuERrGy2Ez_juioftPJ summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ ul.l4BDvRDEZbMeFS3kKioU,
.jhuERrGy2Ez_juioftPJ ol.l4BDvRDEZbMeFS3kKioU {
  padding: 0;
  list-style-type: none;
}
.jhuERrGy2Ez_juioftPJ ol[type="a s"] {
  list-style-type: lower-alpha;
}
.jhuERrGy2Ez_juioftPJ ol[type="A s"] {
  list-style-type: upper-alpha;
}
.jhuERrGy2Ez_juioftPJ ol[type="i s"] {
  list-style-type: lower-roman;
}
.jhuERrGy2Ez_juioftPJ ol[type="I s"] {
  list-style-type: upper-roman;
}
.jhuERrGy2Ez_juioftPJ ol[type="1"] {
  list-style-type: decimal;
}
.jhuERrGy2Ez_juioftPJ div > ol:not([type]) {
  list-style-type: decimal;
}
.jhuERrGy2Ez_juioftPJ ul ul,
.jhuERrGy2Ez_juioftPJ ul ol,
.jhuERrGy2Ez_juioftPJ ol ol,
.jhuERrGy2Ez_juioftPJ ol ul {
  margin-top: 0;
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ li > p {
  margin-top: 16px;
}
.jhuERrGy2Ez_juioftPJ li + li {
  margin-top: 0.25em;
}
.jhuERrGy2Ez_juioftPJ dl {
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ table th {
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ table th,
.jhuERrGy2Ez_juioftPJ table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ table td > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}
.jhuERrGy2Ez_juioftPJ table img {
  background-color: transparent;
}
.jhuERrGy2Ez_juioftPJ img[align=right] {
  padding-left: 20px;
}
.jhuERrGy2Ez_juioftPJ img[align=left] {
  padding-right: 20px;
}
.jhuERrGy2Ez_juioftPJ .sVWZE1xPFG24WQAG7H8B {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA {
  display: block;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA > span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA span img {
  display: block;
  float: left;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y {
  display: block;
  overflow: hidden;
  clear: both;
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y span img {
  margin: 0 auto;
  text-align: center;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n {
  display: block;
  overflow: hidden;
  clear: both;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n > span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n span img {
  margin: 0;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ span.Boj9O06hTbDYBq9dj9Ok {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.Boj9O06hTbDYBq9dj9Ok span {
  margin: 13px 0 0;
}
.jhuERrGy2Ez_juioftPJ span.drtlILfmA__6QxELjtQb {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.drtlILfmA__6QxELjtQb > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ tt {
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ code br,
.jhuERrGy2Ez_juioftPJ tt br {
  display: none;
}
.jhuERrGy2Ez_juioftPJ del code {
  text-decoration: inherit;
}
.jhuERrGy2Ez_juioftPJ samp {
  font-size: 85%;
}
.jhuERrGy2Ez_juioftPJ pre code {
  font-size: 100%;
}
.jhuERrGy2Ez_juioftPJ pre > code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ {
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ pre {
  margin-bottom: 0;
  word-break: normal;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ pre,
.jhuERrGy2Ez_juioftPJ pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ pre code,
.jhuERrGy2Ez_juioftPJ pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ td,
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ .CH7mpl5DsIO8kngyOT_0 {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ tr {
  border-top: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}
.jhuERrGy2Ez_juioftPJ [data-footnote-ref]::before {
  content: "[";
}
.jhuERrGy2Ez_juioftPJ [data-footnote-ref]::after {
  content: "]";
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D ol {
  padding-left: 16px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li {
  position: relative;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li:target {
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D .jsS3oJKd8THYHZ0YhvDU g-emoji {
  font-family: monospace;
}
.jhuERrGy2Ez_juioftPJ .nT03WuQHZc_DdjBYsHNW {
  color: var(--color-prettylights-syntax-comment);
}
.jhuERrGy2Ez_juioftPJ .wpumo5OElg7R1CR1SiSj,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .cWEOY24yVsl_9bIiFyRB {
  color: var(--color-prettylights-syntax-constant);
}
.jhuERrGy2Ez_juioftPJ .Dis570V1oCSk6ba_Io3H,
.jhuERrGy2Ez_juioftPJ .El0iqzn5ScEmDwF7oXB6 {
  color: var(--color-prettylights-syntax-entity);
}
.jhuERrGy2Ez_juioftPJ .DC2ctdUwt80pNJ5K1dPD,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .HpE9p7F1THi2G0CUkYb6 {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}
.jhuERrGy2Ez_juioftPJ .SPZVFdMZpTpU8ZTV4hbM {
  color: var(--color-prettylights-syntax-entity-tag);
}
.jhuERrGy2Ez_juioftPJ .vXmgXAYABRbvyxmjNzYD {
  color: var(--color-prettylights-syntax-keyword);
}
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9,
.jhuERrGy2Ez_juioftPJ .XyKqkv_R3D6JBERjpYWp,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .BNeIIJp52E_LYiITLNDq .HpE9p7F1THi2G0CUkYb6,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .TYcsoypvWWZiaRt0Nwjy,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .eXsy6SAzaRMpXzob1iFH,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .GD2eKfSpvO2DVcgIKK71 {
  color: var(--color-prettylights-syntax-string);
}
.jhuERrGy2Ez_juioftPJ .cWEOY24yVsl_9bIiFyRB,
.jhuERrGy2Ez_juioftPJ .dsJYgUlXjCcPyfd4axor {
  color: var(--color-prettylights-syntax-variable);
}
.jhuERrGy2Ez_juioftPJ .h_PzNrLzv30upAVl1rZF {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}
.jhuERrGy2Ez_juioftPJ .VfjTbz5D7jm39fTdPFCQ {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}
.jhuERrGy2Ez_juioftPJ .D3NpdSN5juqUCugoYucO {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .TYcsoypvWWZiaRt0Nwjy {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}
.jhuERrGy2Ez_juioftPJ ._ijf5VQmw6C2bwb2rwy4 {
  color: var(--color-prettylights-syntax-markup-list);
}
.jhuERrGy2Ez_juioftPJ .IX7JD5tkZRXospBpkZXr,
.jhuERrGy2Ez_juioftPJ .IX7JD5tkZRXospBpkZXr .El0iqzn5ScEmDwF7oXB6,
.jhuERrGy2Ez_juioftPJ .o6Gb0EsPDKY6kbA2DlAE {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}
.jhuERrGy2Ez_juioftPJ .LEzWd62OuUtiJrJg0XvM {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}
.jhuERrGy2Ez_juioftPJ ._5EUReYja67HglRBg2JA {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}
.jhuERrGy2Ez_juioftPJ .mKmFuRRyXwBYiKjJmd7p {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}
.jhuERrGy2Ez_juioftPJ .SxwFwbOFPYvybSfzwsyg {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}
.jhuERrGy2Ez_juioftPJ .clUkIb_NmY8_4zOgRBpq {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}
.jhuERrGy2Ez_juioftPJ .bJx8m9TOsXYaSj0QNroa {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}
.jhuERrGy2Ez_juioftPJ .NkLdaDUcpWEzVt14gs43 {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}
.jhuERrGy2Ez_juioftPJ .KDigDNVZSYul2AdV7fP3 {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}
.jhuERrGy2Ez_juioftPJ .VlQnpUClE6XrfLw5XXQA {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}
.jhuERrGy2Ez_juioftPJ .Zepx3TDSe1C1A9DF_uP_ {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}
.jhuERrGy2Ez_juioftPJ g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}
.jhuERrGy2Ez_juioftPJ g-emoji img {
  width: 1em;
  height: 1em;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo {
  list-style-type: none;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo label {
  font-weight: var(--base-text-weight-normal, 400);
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo.Otlzp2pKl18SMjc5l2hF label {
  cursor: pointer;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo + .jcVTlnE6Vbh_fYvsOZAo {
  margin-top: 4px;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo ._TLWEE2zJKemwxc8gjCZ {
  display: none;
}
.jhuERrGy2Ez_juioftPJ .qGdDQDu6UE6bxenQs3yV {
  margin: 0 0.2em 0.25em -1.4em;
  vertical-align: middle;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:dir(rtl) .qGdDQDu6UE6bxenQs3yV {
  margin: 0 -1.6em 0.25em 0.2em;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6 {
  position: relative;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:hover .enhJ8uVNQ0WvDsDyVX1q,
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:focus-within .enhJ8uVNQ0WvDsDyVX1q {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA {
  padding: var(--base-size-8) var(--base-size-16);
  margin-bottom: 16px;
  color: inherit;
  border-left: 0.25em solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA > :first-child {
  margin-top: 0;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA .QD4_kRkHBdhtEcf6CzgB {
  display: flex;
  font-weight: var(--base-text-weight-medium, 500);
  align-items: center;
  line-height: 1;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eVCyuX5_NeNdMltdPz3i {
  border-left-color: var(--color-accent-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eVCyuX5_NeNdMltdPz3i .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-accent-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eOdjWaU7Kuu4lsg683wr {
  border-left-color: var(--color-done-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eOdjWaU7Kuu4lsg683wr .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-done-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.DylO7Nzr98vtpzwwQqAZ {
  border-left-color: var(--color-attention-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.DylO7Nzr98vtpzwwQqAZ .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-attention-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.FEe4cfkpQ65Z4XBsgV38 {
  border-left-color: var(--color-success-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.FEe4cfkpQ65Z4XBsgV38 .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-success-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.m_Mu0cpLObIuSFlB2wUe {
  border-left-color: var(--color-danger-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.m_Mu0cpLObIuSFlB2wUe .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-danger-fg);
}
`,"",{version:3,sources:["webpack://./node_modules/github-markdown-css/github-markdown.css"],names:[],mappings:"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",sourcesContent:[`@media (prefers-color-scheme: dark) {
  .markdown-body,
  [data-theme="dark"] {
    /*dark*/
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #e6edf3;
    --color-fg-muted: #848d97;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110,118,129,0.4);
    --color-accent-fg: #2f81f7;
    --color-accent-emphasis: #1f6feb;
    --color-success-fg: #3fb950;
    --color-success-emphasis: #238636;
    --color-attention-fg: #d29922;
    --color-attention-emphasis: #9e6a03;
    --color-attention-subtle: rgba(187,128,9,0.15);
    --color-danger-fg: #f85149;
    --color-danger-emphasis: #da3633;
    --color-done-fg: #a371f7;
    --color-done-emphasis: #8957e5;
  }
}

@media (prefers-color-scheme: light) {
  .markdown-body,
  [data-theme="light"] {
    /*light*/
    color-scheme: light;
    --color-prettylights-syntax-comment: #57606a;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #6639ba;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #1F2328;
    --color-fg-muted: #656d76;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsla(210,18%,87%,1);
    --color-neutral-muted: rgba(175,184,193,0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-success-fg: #1a7f37;
    --color-success-emphasis: #1f883d;
    --color-attention-fg: #9a6700;
    --color-attention-emphasis: #9a6700;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #d1242f;
    --color-danger-emphasis: #cf222e;
    --color-done-fg: #8250df;
    --color-done-emphasis: #8250df;
  }
}

.markdown-body {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}

.markdown-body .octicon {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}

.markdown-body h1:hover .anchor .octicon-link:before,
.markdown-body h2:hover .anchor .octicon-link:before,
.markdown-body h3:hover .anchor .octicon-link:before,
.markdown-body h4:hover .anchor .octicon-link:before,
.markdown-body h5:hover .anchor .octicon-link:before,
.markdown-body h6:hover .anchor .octicon-link:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
  mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
}

.markdown-body details,
.markdown-body figcaption,
.markdown-body figure {
  display: block;
}

.markdown-body summary {
  display: list-item;
}

.markdown-body [hidden] {
  display: none !important;
}

.markdown-body a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}

.markdown-body abbr[title] {
  border-bottom: none;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

.markdown-body b,
.markdown-body strong {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dfn {
  font-style: italic;
}

.markdown-body h1 {
  margin: .67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}

.markdown-body small {
  font-size: 90%;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body sup {
  top: -0.5em;
}

.markdown-body img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace;
  font-size: 1em;
}

.markdown-body figure {
  margin: 1em 40px;
}

.markdown-body hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: .25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}

.markdown-body input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.markdown-body [type=button],
.markdown-body [type=reset],
.markdown-body [type=submit] {
  -webkit-appearance: button;
  appearance: button;
}

.markdown-body [type=checkbox],
.markdown-body [type=radio] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body [type=number]::-webkit-inner-spin-button,
.markdown-body [type=number]::-webkit-outer-spin-button {
  height: auto;
}

.markdown-body [type=search]::-webkit-search-cancel-button,
.markdown-body [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}

.markdown-body ::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

.markdown-body ::-webkit-file-upload-button {
  -webkit-appearance: button;
  appearance: button;
  font: inherit;
}

.markdown-body a:hover {
  text-decoration: underline;
}

.markdown-body ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}

.markdown-body hr::before {
  display: table;
  content: "";
}

.markdown-body hr::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body details summary {
  cursor: pointer;
}

.markdown-body details:not([open])>*:not(summary) {
  display: none !important;
}

.markdown-body a:focus,
.markdown-body [role=button]:focus,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:focus:not(:focus-visible),
.markdown-body [role=button]:focus:not(:focus-visible),
.markdown-body input[type=radio]:focus:not(:focus-visible),
.markdown-body input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}

.markdown-body a:focus-visible,
.markdown-body [role=button]:focus-visible,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:not([class]):focus,
.markdown-body a:not([class]):focus-visible,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus,
.markdown-body input[type=checkbox]:focus-visible {
  outline-offset: 0;
}

.markdown-body kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}

.markdown-body h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}

.markdown-body h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}

.markdown-body h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .875em;
}

.markdown-body h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .85em;
  color: var(--color-fg-muted);
}

.markdown-body p {
  margin-top: 0;
  margin-bottom: 10px;
}

.markdown-body blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: .25em solid var(--color-border-default);
}

.markdown-body ul,
.markdown-body ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body tt,
.markdown-body code,
.markdown-body samp {
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
  word-wrap: normal;
}

.markdown-body .octicon {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}

.markdown-body input::-webkit-outer-spin-button,
.markdown-body input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}

.markdown-body .mr-2 {
  margin-right: var(--base-size-8, 8px) !important;
}

.markdown-body::before {
  display: table;
  content: "";
}

.markdown-body::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body>*:first-child {
  margin-top: 0 !important;
}

.markdown-body>*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body a:not([href]) {
  color: inherit;
  text-decoration: none;
}

.markdown-body .absent {
  color: var(--color-danger-fg);
}

.markdown-body .anchor {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}

.markdown-body .anchor:focus {
  outline: none;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body details {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body blockquote>:first-child {
  margin-top: 0;
}

.markdown-body blockquote>:last-child {
  margin-bottom: 0;
}

.markdown-body h1 .octicon-link,
.markdown-body h2 .octicon-link,
.markdown-body h3 .octicon-link,
.markdown-body h4 .octicon-link,
.markdown-body h5 .octicon-link,
.markdown-body h6 .octicon-link {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}

.markdown-body h1:hover .anchor,
.markdown-body h2:hover .anchor,
.markdown-body h3:hover .anchor,
.markdown-body h4:hover .anchor,
.markdown-body h5:hover .anchor,
.markdown-body h6:hover .anchor {
  text-decoration: none;
}

.markdown-body h1:hover .anchor .octicon-link,
.markdown-body h2:hover .anchor .octicon-link,
.markdown-body h3:hover .anchor .octicon-link,
.markdown-body h4:hover .anchor .octicon-link,
.markdown-body h5:hover .anchor .octicon-link,
.markdown-body h6:hover .anchor .octicon-link {
  visibility: visible;
}

.markdown-body h1 tt,
.markdown-body h1 code,
.markdown-body h2 tt,
.markdown-body h2 code,
.markdown-body h3 tt,
.markdown-body h3 code,
.markdown-body h4 tt,
.markdown-body h4 code,
.markdown-body h5 tt,
.markdown-body h5 code,
.markdown-body h6 tt,
.markdown-body h6 code {
  padding: 0 .2em;
  font-size: inherit;
}

.markdown-body summary h1,
.markdown-body summary h2,
.markdown-body summary h3,
.markdown-body summary h4,
.markdown-body summary h5,
.markdown-body summary h6 {
  display: inline-block;
}

.markdown-body summary h1 .anchor,
.markdown-body summary h2 .anchor,
.markdown-body summary h3 .anchor,
.markdown-body summary h4 .anchor,
.markdown-body summary h5 .anchor,
.markdown-body summary h6 .anchor {
  margin-left: -40px;
}

.markdown-body summary h1,
.markdown-body summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}

.markdown-body ul.no-list,
.markdown-body ol.no-list {
  padding: 0;
  list-style-type: none;
}

.markdown-body ol[type="a s"] {
  list-style-type: lower-alpha;
}

.markdown-body ol[type="A s"] {
  list-style-type: upper-alpha;
}

.markdown-body ol[type="i s"] {
  list-style-type: lower-roman;
}

.markdown-body ol[type="I s"] {
  list-style-type: upper-roman;
}

.markdown-body ol[type="1"] {
  list-style-type: decimal;
}

.markdown-body div>ol:not([type]) {
  list-style-type: decimal;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li>p {
  margin-top: 16px;
}

.markdown-body li+li {
  margin-top: .25em;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body table th {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}

.markdown-body table td>:last-child {
  margin-bottom: 0;
}

.markdown-body table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}

.markdown-body table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}

.markdown-body table img {
  background-color: transparent;
}

.markdown-body img[align=right] {
  padding-left: 20px;
}

.markdown-body img[align=left] {
  padding-right: 20px;
}

.markdown-body .emoji {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}

.markdown-body span.frame {
  display: block;
  overflow: hidden;
}

.markdown-body span.frame>span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}

.markdown-body span.frame span img {
  display: block;
  float: left;
}

.markdown-body span.frame span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}

.markdown-body span.align-center {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-center>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}

.markdown-body span.align-center span img {
  margin: 0 auto;
  text-align: center;
}

.markdown-body span.align-right {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-right>span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body span.align-right span img {
  margin: 0;
  text-align: right;
}

.markdown-body span.float-left {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}

.markdown-body span.float-left span {
  margin: 13px 0 0;
}

.markdown-body span.float-right {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}

.markdown-body span.float-right>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body code,
.markdown-body tt {
  padding: .2em .4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}

.markdown-body code br,
.markdown-body tt br {
  display: none;
}

.markdown-body del code {
  text-decoration: inherit;
}

.markdown-body samp {
  font-size: 85%;
}

.markdown-body pre code {
  font-size: 100%;
}

.markdown-body pre>code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .highlight {
  margin-bottom: 16px;
}

.markdown-body .highlight pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body .highlight pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}

.markdown-body pre code,
.markdown-body pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body .csv-data td,
.markdown-body .csv-data th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}

.markdown-body .csv-data .blob-num {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}

.markdown-body .csv-data tr {
  border-top: 0;
}

.markdown-body .csv-data th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}

.markdown-body [data-footnote-ref]::before {
  content: "[";
}

.markdown-body [data-footnote-ref]::after {
  content: "]";
}

.markdown-body .footnotes {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}

.markdown-body .footnotes ol {
  padding-left: 16px;
}

.markdown-body .footnotes ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}

.markdown-body .footnotes li {
  position: relative;
}

.markdown-body .footnotes li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}

.markdown-body .footnotes li:target {
  color: var(--color-fg-default);
}

.markdown-body .footnotes .data-footnote-backref g-emoji {
  font-family: monospace;
}

.markdown-body .pl-c {
  color: var(--color-prettylights-syntax-comment);
}

.markdown-body .pl-c1,
.markdown-body .pl-s .pl-v {
  color: var(--color-prettylights-syntax-constant);
}

.markdown-body .pl-e,
.markdown-body .pl-en {
  color: var(--color-prettylights-syntax-entity);
}

.markdown-body .pl-smi,
.markdown-body .pl-s .pl-s1 {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}

.markdown-body .pl-ent {
  color: var(--color-prettylights-syntax-entity-tag);
}

.markdown-body .pl-k {
  color: var(--color-prettylights-syntax-keyword);
}

.markdown-body .pl-s,
.markdown-body .pl-pds,
.markdown-body .pl-s .pl-pse .pl-s1,
.markdown-body .pl-sr,
.markdown-body .pl-sr .pl-cce,
.markdown-body .pl-sr .pl-sre,
.markdown-body .pl-sr .pl-sra {
  color: var(--color-prettylights-syntax-string);
}

.markdown-body .pl-v,
.markdown-body .pl-smw {
  color: var(--color-prettylights-syntax-variable);
}

.markdown-body .pl-bu {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}

.markdown-body .pl-ii {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}

.markdown-body .pl-c2 {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}

.markdown-body .pl-sr .pl-cce {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}

.markdown-body .pl-ml {
  color: var(--color-prettylights-syntax-markup-list);
}

.markdown-body .pl-mh,
.markdown-body .pl-mh .pl-en,
.markdown-body .pl-ms {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}

.markdown-body .pl-mi {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}

.markdown-body .pl-mb {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}

.markdown-body .pl-md {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}

.markdown-body .pl-mi1 {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}

.markdown-body .pl-mc {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}

.markdown-body .pl-mi2 {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}

.markdown-body .pl-mdr {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}

.markdown-body .pl-ba {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}

.markdown-body .pl-sg {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}

.markdown-body .pl-corl {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}

.markdown-body g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}

.markdown-body g-emoji img {
  width: 1em;
  height: 1em;
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item label {
  font-weight: var(--base-text-weight-normal, 400);
}

.markdown-body .task-list-item.enabled label {
  cursor: pointer;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 4px;
}

.markdown-body .task-list-item .handle {
  display: none;
}

.markdown-body .task-list-item-checkbox {
  margin: 0 .2em .25em -1.4em;
  vertical-align: middle;
}

.markdown-body .contains-task-list:dir(rtl) .task-list-item-checkbox {
  margin: 0 -1.6em .25em .2em;
}

.markdown-body .contains-task-list {
  position: relative;
}

.markdown-body .contains-task-list:hover .task-list-item-convert-container,
.markdown-body .contains-task-list:focus-within .task-list-item-convert-container {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}

.markdown-body ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}

.markdown-body .markdown-alert {
  padding: var(--base-size-8) var(--base-size-16);
  margin-bottom: 16px;
  color: inherit;
  border-left: .25em solid var(--color-border-default);
}

.markdown-body .markdown-alert>:first-child {
  margin-top: 0;
}

.markdown-body .markdown-alert>:last-child {
  margin-bottom: 0;
}

.markdown-body .markdown-alert .markdown-alert-title {
  display: flex;
  font-weight: var(--base-text-weight-medium, 500);
  align-items: center;
  line-height: 1;
}

.markdown-body .markdown-alert.markdown-alert-note {
  border-left-color: var(--color-accent-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-note .markdown-alert-title {
  color: var(--color-accent-fg);
}

.markdown-body .markdown-alert.markdown-alert-important {
  border-left-color: var(--color-done-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-important .markdown-alert-title {
  color: var(--color-done-fg);
}

.markdown-body .markdown-alert.markdown-alert-warning {
  border-left-color: var(--color-attention-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-warning .markdown-alert-title {
  color: var(--color-attention-fg);
}

.markdown-body .markdown-alert.markdown-alert-tip {
  border-left-color: var(--color-success-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-tip .markdown-alert-title {
  color: var(--color-success-fg);
}

.markdown-body .markdown-alert.markdown-alert-caution {
  border-left-color: var(--color-danger-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-caution .markdown-alert-title {
  color: var(--color-danger-fg);
}
`],sourceRoot:""}]),N.locals={"markdown-body":"jhuERrGy2Ez_juioftPJ",octicon:"aqLz6oeiJK9QIlGLbUub",anchor:"Kr09SQ9Ha168wbwr2smk","octicon-link":"HHtUXtK67S7PUOICWKh8","mr-2":"xx2xJAGzaNS8rhIWQR_D",absent:"y1a3snSdabAY7BJykM_a","no-list":"l4BDvRDEZbMeFS3kKioU",emoji:"sVWZE1xPFG24WQAG7H8B",frame:"tsl_eAyXAZ6MKpaZK3dA","align-center":"eEA2sgiBEe6uUV5b9t2Y","align-right":"F_OMwli_eNu1HOaXE65n","float-left":"Boj9O06hTbDYBq9dj9Ok","float-right":"drtlILfmA__6QxELjtQb",highlight:"wEr838MNb8lUZUVrZ1EZ","csv-data":"IaL7FdKkF8ZOmpmRoi5_","blob-num":"CH7mpl5DsIO8kngyOT_0",footnotes:"_yYqs64w5pJiFM0tJU3D","data-footnote-backref":"jsS3oJKd8THYHZ0YhvDU","pl-c":"nT03WuQHZc_DdjBYsHNW","pl-c1":"wpumo5OElg7R1CR1SiSj","pl-s":"PZoXMrDFdCwY860nyAN9","pl-v":"cWEOY24yVsl_9bIiFyRB","pl-e":"Dis570V1oCSk6ba_Io3H","pl-en":"El0iqzn5ScEmDwF7oXB6","pl-smi":"DC2ctdUwt80pNJ5K1dPD","pl-s1":"HpE9p7F1THi2G0CUkYb6","pl-ent":"SPZVFdMZpTpU8ZTV4hbM","pl-k":"vXmgXAYABRbvyxmjNzYD","pl-pds":"XyKqkv_R3D6JBERjpYWp","pl-pse":"BNeIIJp52E_LYiITLNDq","pl-sr":"pRv3Yf2NpOstbVKGYMYf","pl-cce":"TYcsoypvWWZiaRt0Nwjy","pl-sre":"eXsy6SAzaRMpXzob1iFH","pl-sra":"GD2eKfSpvO2DVcgIKK71","pl-smw":"dsJYgUlXjCcPyfd4axor","pl-bu":"h_PzNrLzv30upAVl1rZF","pl-ii":"VfjTbz5D7jm39fTdPFCQ","pl-c2":"D3NpdSN5juqUCugoYucO","pl-ml":"_ijf5VQmw6C2bwb2rwy4","pl-mh":"IX7JD5tkZRXospBpkZXr","pl-ms":"o6Gb0EsPDKY6kbA2DlAE","pl-mi":"LEzWd62OuUtiJrJg0XvM","pl-mb":"_5EUReYja67HglRBg2JA","pl-md":"mKmFuRRyXwBYiKjJmd7p","pl-mi1":"SxwFwbOFPYvybSfzwsyg","pl-mc":"clUkIb_NmY8_4zOgRBpq","pl-mi2":"bJx8m9TOsXYaSj0QNroa","pl-mdr":"NkLdaDUcpWEzVt14gs43","pl-ba":"KDigDNVZSYul2AdV7fP3","pl-sg":"VlQnpUClE6XrfLw5XXQA","pl-corl":"Zepx3TDSe1C1A9DF_uP_","task-list-item":"jcVTlnE6Vbh_fYvsOZAo",enabled:"Otlzp2pKl18SMjc5l2hF",handle:"_TLWEE2zJKemwxc8gjCZ","task-list-item-checkbox":"qGdDQDu6UE6bxenQs3yV","contains-task-list":"SOYmrwDootVCiozakpl6","task-list-item-convert-container":"enhJ8uVNQ0WvDsDyVX1q","markdown-alert":"GNKmGPHnJcvpzbDuo4KA","markdown-alert-title":"QD4_kRkHBdhtEcf6CzgB","markdown-alert-note":"eVCyuX5_NeNdMltdPz3i","markdown-alert-important":"eOdjWaU7Kuu4lsg683wr","markdown-alert-warning":"DylO7Nzr98vtpzwwQqAZ","markdown-alert-tip":"FEe4cfkpQ65Z4XBsgV38","markdown-alert-caution":"m_Mu0cpLObIuSFlB2wUe"};const dt=N},4131:(Dt,K,u)=>{var E,P=u(5303);E={value:!0},K.A=void 0;var W=P(u(5211)),q=u(7343),tt=K.A=(0,W.default)((0,q.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"}),"Delete")},3318:(Dt,K,u)=>{var E,P=u(5303);E={value:!0},K.A=void 0;var W=P(u(5211)),q=u(7343),tt=K.A=(0,W.default)((0,q.jsx)("path",{d:"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2m0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19z"}),"Inbox")},4064:(Dt,K,u)=>{u.d(K,{A:()=>Ot});var E=u(1772),P=u(8733),W=u(4999),q=u(4164),tt=u(2926),ct=u(2458),Y=u(1742),N=u(4747),nt=u(3487),dt=u(7437),Pt=u(2533),T=u(6039),ot=u(3932),At=u(8748);function wt(A){return(0,At.Ay)("MuiButton",A)}const ut=(0,ot.A)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","colorPrimary","colorSecondary","colorSuccess","colorError","colorInfo","colorWarning","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","icon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]),pt=W.createContext({}),gt=W.createContext(void 0);var I=u(7343);const H=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],z=A=>{const{color:g,disableElevation:S,fullWidth:lt,size:rt,variant:kt,classes:zt}=A,v={root:["root",kt,`${kt}${(0,T.A)(g)}`,`size${(0,T.A)(rt)}`,`${kt}Size${(0,T.A)(rt)}`,`color${(0,T.A)(g)}`,S&&"disableElevation",lt&&"fullWidth"],label:["label"],startIcon:["icon","startIcon",`iconSize${(0,T.A)(rt)}`],endIcon:["icon","endIcon",`iconSize${(0,T.A)(rt)}`]},J=(0,ct.A)(v,wt,zt);return(0,P.A)({},zt,J)},et=A=>(0,P.A)({},A.size==="small"&&{"& > *:nth-of-type(1)":{fontSize:18}},A.size==="medium"&&{"& > *:nth-of-type(1)":{fontSize:20}},A.size==="large"&&{"& > *:nth-of-type(1)":{fontSize:22}}),jt=(0,N.Ay)(Pt.A,{shouldForwardProp:A=>(0,nt.A)(A)||A==="classes",name:"MuiButton",slot:"Root",overridesResolver:(A,g)=>{const{ownerState:S}=A;return[g.root,g[S.variant],g[`${S.variant}${(0,T.A)(S.color)}`],g[`size${(0,T.A)(S.size)}`],g[`${S.variant}Size${(0,T.A)(S.size)}`],S.color==="inherit"&&g.colorInherit,S.disableElevation&&g.disableElevation,S.fullWidth&&g.fullWidth]}})(({theme:A,ownerState:g})=>{var S,lt;const rt=A.palette.mode==="light"?A.palette.grey[300]:A.palette.grey[800],kt=A.palette.mode==="light"?A.palette.grey.A100:A.palette.grey[700];return(0,P.A)({},A.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(A.vars||A).shape.borderRadius,transition:A.transitions.create(["background-color","box-shadow","border-color","color"],{duration:A.transitions.duration.short}),"&:hover":(0,P.A)({textDecoration:"none",backgroundColor:A.vars?`rgba(${A.vars.palette.text.primaryChannel} / ${A.vars.palette.action.hoverOpacity})`:(0,Y.X4)(A.palette.text.primary,A.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="text"&&g.color!=="inherit"&&{backgroundColor:A.vars?`rgba(${A.vars.palette[g.color].mainChannel} / ${A.vars.palette.action.hoverOpacity})`:(0,Y.X4)(A.palette[g.color].main,A.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="outlined"&&g.color!=="inherit"&&{border:`1px solid ${(A.vars||A).palette[g.color].main}`,backgroundColor:A.vars?`rgba(${A.vars.palette[g.color].mainChannel} / ${A.vars.palette.action.hoverOpacity})`:(0,Y.X4)(A.palette[g.color].main,A.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="contained"&&{backgroundColor:A.vars?A.vars.palette.Button.inheritContainedHoverBg:kt,boxShadow:(A.vars||A).shadows[4],"@media (hover: none)":{boxShadow:(A.vars||A).shadows[2],backgroundColor:(A.vars||A).palette.grey[300]}},g.variant==="contained"&&g.color!=="inherit"&&{backgroundColor:(A.vars||A).palette[g.color].dark,"@media (hover: none)":{backgroundColor:(A.vars||A).palette[g.color].main}}),"&:active":(0,P.A)({},g.variant==="contained"&&{boxShadow:(A.vars||A).shadows[8]}),[`&.${ut.focusVisible}`]:(0,P.A)({},g.variant==="contained"&&{boxShadow:(A.vars||A).shadows[6]}),[`&.${ut.disabled}`]:(0,P.A)({color:(A.vars||A).palette.action.disabled},g.variant==="outlined"&&{border:`1px solid ${(A.vars||A).palette.action.disabledBackground}`},g.variant==="contained"&&{color:(A.vars||A).palette.action.disabled,boxShadow:(A.vars||A).shadows[0],backgroundColor:(A.vars||A).palette.action.disabledBackground})},g.variant==="text"&&{padding:"6px 8px"},g.variant==="text"&&g.color!=="inherit"&&{color:(A.vars||A).palette[g.color].main},g.variant==="outlined"&&{padding:"5px 15px",border:"1px solid currentColor"},g.variant==="outlined"&&g.color!=="inherit"&&{color:(A.vars||A).palette[g.color].main,border:A.vars?`1px solid rgba(${A.vars.palette[g.color].mainChannel} / 0.5)`:`1px solid ${(0,Y.X4)(A.palette[g.color].main,.5)}`},g.variant==="contained"&&{color:A.vars?A.vars.palette.text.primary:(S=(lt=A.palette).getContrastText)==null?void 0:S.call(lt,A.palette.grey[300]),backgroundColor:A.vars?A.vars.palette.Button.inheritContainedBg:rt,boxShadow:(A.vars||A).shadows[2]},g.variant==="contained"&&g.color!=="inherit"&&{color:(A.vars||A).palette[g.color].contrastText,backgroundColor:(A.vars||A).palette[g.color].main},g.color==="inherit"&&{color:"inherit",borderColor:"currentColor"},g.size==="small"&&g.variant==="text"&&{padding:"4px 5px",fontSize:A.typography.pxToRem(13)},g.size==="large"&&g.variant==="text"&&{padding:"8px 11px",fontSize:A.typography.pxToRem(15)},g.size==="small"&&g.variant==="outlined"&&{padding:"3px 9px",fontSize:A.typography.pxToRem(13)},g.size==="large"&&g.variant==="outlined"&&{padding:"7px 21px",fontSize:A.typography.pxToRem(15)},g.size==="small"&&g.variant==="contained"&&{padding:"4px 10px",fontSize:A.typography.pxToRem(13)},g.size==="large"&&g.variant==="contained"&&{padding:"8px 22px",fontSize:A.typography.pxToRem(15)},g.fullWidth&&{width:"100%"})},({ownerState:A})=>A.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${ut.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${ut.disabled}`]:{boxShadow:"none"}}),F=(0,N.Ay)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(A,g)=>{const{ownerState:S}=A;return[g.startIcon,g[`iconSize${(0,T.A)(S.size)}`]]}})(({ownerState:A})=>(0,P.A)({display:"inherit",marginRight:8,marginLeft:-4},A.size==="small"&&{marginLeft:-2},et(A))),yt=(0,N.Ay)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(A,g)=>{const{ownerState:S}=A;return[g.endIcon,g[`iconSize${(0,T.A)(S.size)}`]]}})(({ownerState:A})=>(0,P.A)({display:"inherit",marginRight:-4,marginLeft:8},A.size==="small"&&{marginRight:-2},et(A))),Ot=W.forwardRef(function(g,S){const lt=W.useContext(pt),rt=W.useContext(gt),kt=(0,tt.A)(lt,g),zt=(0,dt.A)({props:kt,name:"MuiButton"}),{children:v,color:J="primary",component:V="button",className:it,disabled:x=!1,disableElevation:b=!1,disableFocusRipple:xt=!1,endIcon:Et,focusVisibleClassName:at,fullWidth:Ct=!1,size:Jt="medium",startIcon:Bt,type:ft,variant:Ut="text"}=zt,Xt=(0,E.A)(zt,H),Tt=(0,P.A)({},zt,{color:J,component:V,disabled:x,disableElevation:b,disableFocusRipple:xt,fullWidth:Ct,size:Jt,type:ft,variant:Ut}),w=z(Tt),Qt=Bt&&(0,I.jsx)(F,{className:w.startIcon,ownerState:Tt,children:Bt}),ne=Et&&(0,I.jsx)(yt,{className:w.endIcon,ownerState:Tt,children:Et}),qt=rt||"";return(0,I.jsxs)(jt,(0,P.A)({ownerState:Tt,className:(0,q.A)(lt.className,w.root,it,qt),component:V,disabled:x,focusRipple:!xt,focusVisibleClassName:(0,q.A)(w.focusVisible,at),ref:S,type:ft},Xt,{classes:w,children:[Qt,v,ne]}))})},2704:(Dt,K,u)=>{u.d(K,{A:()=>Ot});var E=u(1772),P=u(8733),W=u(4999),q=u(4164),tt=u(2458),ct=u(4742),Y=u(6039),N=u(7437),nt=u(4747),dt=u(3932),Pt=u(8748);function T(A){return(0,Pt.Ay)("MuiCircularProgress",A)}const ot=(0,dt.A)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]),At=null;var wt=u(7343);const It=["className","color","disableShrink","size","style","thickness","value","variant"];let ut=A=>A,Mt,pt,$,gt;const I=44,H=(0,ct.i7)(Mt||(Mt=ut`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),z=(0,ct.i7)(pt||(pt=ut`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),et=A=>{const{classes:g,variant:S,color:lt,disableShrink:rt}=A,kt={root:["root",S,`color${(0,Y.A)(lt)}`],svg:["svg"],circle:["circle",`circle${(0,Y.A)(S)}`,rt&&"circleDisableShrink"]};return(0,tt.A)(kt,T,g)},jt=(0,nt.Ay)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(A,g)=>{const{ownerState:S}=A;return[g.root,g[S.variant],g[`color${(0,Y.A)(S.color)}`]]}})(({ownerState:A,theme:g})=>(0,P.A)({display:"inline-block"},A.variant==="determinate"&&{transition:g.transitions.create("transform")},A.color!=="inherit"&&{color:(g.vars||g).palette[A.color].main}),({ownerState:A})=>A.variant==="indeterminate"&&(0,ct.AH)($||($=ut`
      animation: ${0} 1.4s linear infinite;
    `),H)),F=(0,nt.Ay)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(A,g)=>g.svg})({display:"block"}),yt=(0,nt.Ay)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(A,g)=>{const{ownerState:S}=A;return[g.circle,g[`circle${(0,Y.A)(S.variant)}`],S.disableShrink&&g.circleDisableShrink]}})(({ownerState:A,theme:g})=>(0,P.A)({stroke:"currentColor"},A.variant==="determinate"&&{transition:g.transitions.create("stroke-dashoffset")},A.variant==="indeterminate"&&{strokeDasharray:"80px, 200px",strokeDashoffset:0}),({ownerState:A})=>A.variant==="indeterminate"&&!A.disableShrink&&(0,ct.AH)(gt||(gt=ut`
      animation: ${0} 1.4s ease-in-out infinite;
    `),z)),Ot=W.forwardRef(function(g,S){const lt=(0,N.A)({props:g,name:"MuiCircularProgress"}),{className:rt,color:kt="primary",disableShrink:zt=!1,size:v=40,style:J,thickness:V=3.6,value:it=0,variant:x="indeterminate"}=lt,b=(0,E.A)(lt,It),xt=(0,P.A)({},lt,{color:kt,disableShrink:zt,size:v,thickness:V,value:it,variant:x}),Et=et(xt),at={},Ct={},Jt={};if(x==="determinate"){const Bt=2*Math.PI*((I-V)/2);at.strokeDasharray=Bt.toFixed(3),Jt["aria-valuenow"]=Math.round(it),at.strokeDashoffset=`${((100-it)/100*Bt).toFixed(3)}px`,Ct.transform="rotate(-90deg)"}return(0,wt.jsx)(jt,(0,P.A)({className:(0,q.A)(Et.root,rt),style:(0,P.A)({width:v,height:v},Ct,J),ownerState:xt,ref:S,role:"progressbar"},Jt,b,{children:(0,wt.jsx)(F,{className:Et.svg,ownerState:xt,viewBox:`${I/2} ${I/2} ${I} ${I}`,children:(0,wt.jsx)(yt,{className:Et.circle,style:at,ownerState:xt,cx:I,cy:I,r:(I-V)/2,fill:"none",strokeWidth:V})})}))})},331:(Dt,K,u)=>{u.d(K,{A:()=>gt});var E=u(1772),P=u(8733),W=u(4999),q=u(4164),tt=u(2458),ct=u(1742),Y=u(4747),N=u(7437),nt=u(2533),dt=u(6039),Pt=u(3932),T=u(8748);function ot(I){return(0,T.Ay)("MuiIconButton",I)}const wt=(0,Pt.A)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var It=u(7343);const ut=["edge","children","className","color","disabled","disableFocusRipple","size"],Mt=I=>{const{classes:H,disabled:z,color:et,edge:jt,size:F}=I,yt={root:["root",z&&"disabled",et!=="default"&&`color${(0,dt.A)(et)}`,jt&&`edge${(0,dt.A)(jt)}`,`size${(0,dt.A)(F)}`]};return(0,tt.A)(yt,ot,H)},pt=(0,Y.Ay)(nt.A,{name:"MuiIconButton",slot:"Root",overridesResolver:(I,H)=>{const{ownerState:z}=I;return[H.root,z.color!=="default"&&H[`color${(0,dt.A)(z.color)}`],z.edge&&H[`edge${(0,dt.A)(z.edge)}`],H[`size${(0,dt.A)(z.size)}`]]}})(({theme:I,ownerState:H})=>(0,P.A)({textAlign:"center",flex:"0 0 auto",fontSize:I.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(I.vars||I).palette.action.active,transition:I.transitions.create("background-color",{duration:I.transitions.duration.shortest})},!H.disableRipple&&{"&:hover":{backgroundColor:I.vars?`rgba(${I.vars.palette.action.activeChannel} / ${I.vars.palette.action.hoverOpacity})`:(0,ct.X4)(I.palette.action.active,I.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},H.edge==="start"&&{marginLeft:H.size==="small"?-3:-12},H.edge==="end"&&{marginRight:H.size==="small"?-3:-12}),({theme:I,ownerState:H})=>{var z;const et=(z=(I.vars||I).palette)==null?void 0:z[H.color];return(0,P.A)({},H.color==="inherit"&&{color:"inherit"},H.color!=="inherit"&&H.color!=="default"&&(0,P.A)({color:et==null?void 0:et.main},!H.disableRipple&&{"&:hover":(0,P.A)({},et&&{backgroundColor:I.vars?`rgba(${et.mainChannel} / ${I.vars.palette.action.hoverOpacity})`:(0,ct.X4)(et.main,I.palette.action.hoverOpacity)},{"@media (hover: none)":{backgroundColor:"transparent"}})}),H.size==="small"&&{padding:5,fontSize:I.typography.pxToRem(18)},H.size==="large"&&{padding:12,fontSize:I.typography.pxToRem(28)},{[`&.${wt.disabled}`]:{backgroundColor:"transparent",color:(I.vars||I).palette.action.disabled}})}),gt=W.forwardRef(function(H,z){const et=(0,N.A)({props:H,name:"MuiIconButton"}),{edge:jt=!1,children:F,className:yt,color:Ft="default",disabled:Ot=!1,disableFocusRipple:A=!1,size:g="medium"}=et,S=(0,E.A)(et,ut),lt=(0,P.A)({},et,{edge:jt,color:Ft,disabled:Ot,disableFocusRipple:A,size:g}),rt=Mt(lt);return(0,It.jsx)(pt,(0,P.A)({className:(0,q.A)(rt.root,yt),centerRipple:!0,focusRipple:!A,disabled:Ot,ref:z},S,{ownerState:lt,children:F}))})},3337:(Dt,K,u)=>{u.d(K,{A:()=>pt});var E=u(1772),P=u(8733),W=u(4999),q=u(4164),tt=u(2458),ct=u(4747),Y=u(7437),N=u(3932),nt=u(8748);function dt($){return(0,nt.Ay)("MuiListItemIcon",$)}const Pt=(0,N.A)("MuiListItemIcon",["root","alignItemsFlexStart"]),T=null;var ot=u(9199),At=u(7343);const wt=["className"],It=$=>{const{alignItems:gt,classes:I}=$,H={root:["root",gt==="flex-start"&&"alignItemsFlexStart"]};return(0,tt.A)(H,dt,I)},ut=(0,ct.Ay)("div",{name:"MuiListItemIcon",slot:"Root",overridesResolver:($,gt)=>{const{ownerState:I}=$;return[gt.root,I.alignItems==="flex-start"&&gt.alignItemsFlexStart]}})(({theme:$,ownerState:gt})=>(0,P.A)({minWidth:56,color:($.vars||$).palette.action.active,flexShrink:0,display:"inline-flex"},gt.alignItems==="flex-start"&&{marginTop:8})),pt=W.forwardRef(function(gt,I){const H=(0,Y.A)({props:gt,name:"MuiListItemIcon"}),{className:z}=H,et=(0,E.A)(H,wt),jt=W.useContext(ot.A),F=(0,P.A)({},H,{alignItems:jt.alignItems}),yt=It(F);return(0,At.jsx)(ut,(0,P.A)({className:(0,q.A)(yt.root,z),ownerState:F,ref:I},et))})},9827:(Dt,K,u)=>{u.d(K,{Ay:()=>zt});var E=u(1772),P=u(8733),W=u(4999),q=u(4164),tt=u(400),ct=u(2458),Y=u(1742),N=u(4747),nt=u(7437),dt=u(2533),Pt=u(5525),T=u(7289),ot=u(6597),At=u(9199),wt=u(3932),It=u(8748);function ut(v){return(0,It.Ay)("MuiListItem",v)}const pt=(0,wt.A)("MuiListItem",["root","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","padding","button","secondaryAction","selected"]);var $=u(5150);function gt(v){return(0,It.Ay)("MuiListItemSecondaryAction",v)}const I=(0,wt.A)("MuiListItemSecondaryAction",["root","disableGutters"]),H=null;var z=u(7343);const et=["className"],jt=v=>{const{disableGutters:J,classes:V}=v,it={root:["root",J&&"disableGutters"]};return(0,ct.A)(it,gt,V)},F=(0,N.Ay)("div",{name:"MuiListItemSecondaryAction",slot:"Root",overridesResolver:(v,J)=>{const{ownerState:V}=v;return[J.root,V.disableGutters&&J.disableGutters]}})(({ownerState:v})=>(0,P.A)({position:"absolute",right:16,top:"50%",transform:"translateY(-50%)"},v.disableGutters&&{right:0})),yt=W.forwardRef(function(J,V){const it=(0,nt.A)({props:J,name:"MuiListItemSecondaryAction"}),{className:x}=it,b=(0,E.A)(it,et),xt=W.useContext(At.A),Et=(0,P.A)({},it,{disableGutters:xt.disableGutters}),at=jt(Et);return(0,z.jsx)(F,(0,P.A)({className:(0,q.A)(at.root,x),ownerState:Et,ref:V},b))});yt.muiName="ListItemSecondaryAction";const Ft=yt,Ot=["className"],A=["alignItems","autoFocus","button","children","className","component","components","componentsProps","ContainerComponent","ContainerProps","dense","disabled","disableGutters","disablePadding","divider","focusVisibleClassName","secondaryAction","selected","slotProps","slots"],g=(v,J)=>{const{ownerState:V}=v;return[J.root,V.dense&&J.dense,V.alignItems==="flex-start"&&J.alignItemsFlexStart,V.divider&&J.divider,!V.disableGutters&&J.gutters,!V.disablePadding&&J.padding,V.button&&J.button,V.hasSecondaryAction&&J.secondaryAction]},S=v=>{const{alignItems:J,button:V,classes:it,dense:x,disabled:b,disableGutters:xt,disablePadding:Et,divider:at,hasSecondaryAction:Ct,selected:Jt}=v,Bt={root:["root",x&&"dense",!xt&&"gutters",!Et&&"padding",at&&"divider",b&&"disabled",V&&"button",J==="flex-start"&&"alignItemsFlexStart",Ct&&"secondaryAction",Jt&&"selected"],container:["container"]};return(0,ct.A)(Bt,ut,it)},lt=(0,N.Ay)("div",{name:"MuiListItem",slot:"Root",overridesResolver:g})(({theme:v,ownerState:J})=>(0,P.A)({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left"},!J.disablePadding&&(0,P.A)({paddingTop:8,paddingBottom:8},J.dense&&{paddingTop:4,paddingBottom:4},!J.disableGutters&&{paddingLeft:16,paddingRight:16},!!J.secondaryAction&&{paddingRight:48}),!!J.secondaryAction&&{[`& > .${$.A.root}`]:{paddingRight:48}},{[`&.${pt.focusVisible}`]:{backgroundColor:(v.vars||v).palette.action.focus},[`&.${pt.selected}`]:{backgroundColor:v.vars?`rgba(${v.vars.palette.primary.mainChannel} / ${v.vars.palette.action.selectedOpacity})`:(0,Y.X4)(v.palette.primary.main,v.palette.action.selectedOpacity),[`&.${pt.focusVisible}`]:{backgroundColor:v.vars?`rgba(${v.vars.palette.primary.mainChannel} / calc(${v.vars.palette.action.selectedOpacity} + ${v.vars.palette.action.focusOpacity}))`:(0,Y.X4)(v.palette.primary.main,v.palette.action.selectedOpacity+v.palette.action.focusOpacity)}},[`&.${pt.disabled}`]:{opacity:(v.vars||v).palette.action.disabledOpacity}},J.alignItems==="flex-start"&&{alignItems:"flex-start"},J.divider&&{borderBottom:`1px solid ${(v.vars||v).palette.divider}`,backgroundClip:"padding-box"},J.button&&{transition:v.transitions.create("background-color",{duration:v.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(v.vars||v).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${pt.selected}:hover`]:{backgroundColor:v.vars?`rgba(${v.vars.palette.primary.mainChannel} / calc(${v.vars.palette.action.selectedOpacity} + ${v.vars.palette.action.hoverOpacity}))`:(0,Y.X4)(v.palette.primary.main,v.palette.action.selectedOpacity+v.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:v.vars?`rgba(${v.vars.palette.primary.mainChannel} / ${v.vars.palette.action.selectedOpacity})`:(0,Y.X4)(v.palette.primary.main,v.palette.action.selectedOpacity)}}},J.hasSecondaryAction&&{paddingRight:48})),rt=(0,N.Ay)("li",{name:"MuiListItem",slot:"Container",overridesResolver:(v,J)=>J.container})({position:"relative"}),zt=W.forwardRef(function(J,V){const it=(0,nt.A)({props:J,name:"MuiListItem"}),{alignItems:x="center",autoFocus:b=!1,button:xt=!1,children:Et,className:at,component:Ct,components:Jt={},componentsProps:Bt={},ContainerComponent:ft="li",ContainerProps:{className:Ut}={},dense:Xt=!1,disabled:Tt=!1,disableGutters:w=!1,disablePadding:Qt=!1,divider:ne=!1,focusVisibleClassName:qt,secondaryAction:oe,selected:ae=!1,slotProps:se={},slots:le={}}=it,Ae=(0,E.A)(it.ContainerProps,Ot),f=(0,E.A)(it,A),e=W.useContext(At.A),n=W.useMemo(()=>({dense:Xt||e.dense||!1,alignItems:x,disableGutters:w}),[x,e.dense,Xt,w]),t=W.useRef(null);(0,T.A)(()=>{b&&t.current&&t.current.focus()},[b]);const o=W.Children.toArray(Et),l=o.length&&(0,Pt.A)(o[o.length-1],["ListItemSecondaryAction"]),h=(0,P.A)({},it,{alignItems:x,autoFocus:b,button:xt,dense:n.dense,disabled:Tt,disableGutters:w,disablePadding:Qt,divider:ne,hasSecondaryAction:l,selected:ae}),m=S(h),k=(0,ot.A)(t,V),O=le.root||Jt.Root||lt,B=se.root||Bt.root||{},G=(0,P.A)({className:(0,q.A)(m.root,B.className,at),disabled:Tt},f);let D=Ct||"li";return xt&&(G.component=Ct||"div",G.focusVisibleClassName=(0,q.A)(pt.focusVisible,qt),D=dt.A),l?(D=!G.component&&!Ct?"div":D,ft==="li"&&(D==="li"?D="div":G.component==="li"&&(G.component="div")),(0,z.jsx)(At.A.Provider,{value:n,children:(0,z.jsxs)(rt,(0,P.A)({as:ft,className:(0,q.A)(m.container,Ut),ref:k,ownerState:h},Ae,{children:[(0,z.jsx)(O,(0,P.A)({},B,!(0,tt.g)(O)&&{as:D,ownerState:(0,P.A)({},h,B.ownerState)},G,{children:o})),o.pop()]}))})):(0,z.jsx)(At.A.Provider,{value:n,children:(0,z.jsxs)(O,(0,P.A)({},B,{as:D,ref:k},!(0,tt.g)(O)&&{ownerState:(0,P.A)({},h,B.ownerState)},G,{children:[o,oe&&(0,z.jsx)(Ft,{children:oe})]}))})})},436:Dt=>{Dt.exports=function(K,u){return u||(u={}),K&&(K=String(K.__esModule?K.default:K),/^['"].*['"]$/.test(K)&&(K=K.slice(1,-1)),u.hash&&(K+=u.hash),/["'() \t\n]|(%20)/.test(K)||u.needQuotes?'"'.concat(K.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):K)}},7442:(Dt,K,u)=>{u.d(K,{n:()=>Pe,dh:()=>_e});var E=u(4999),P=u(7874);function W(a){var r,c,d="";if(typeof a=="string"||typeof a=="number")d+=a;else if(typeof a=="object")if(Array.isArray(a))for(r=0;r<a.length;r++)a[r]&&(c=W(a[r]))&&(d&&(d+=" "),d+=c);else for(r in a)a[r]&&(d&&(d+=" "),d+=r);return d}function q(){for(var a,r,c=0,d="";c<arguments.length;)(a=arguments[c++])&&(r=W(a))&&(d&&(d+=" "),d+=r);return d}const tt=q;let ct={data:""},Y=a=>typeof window=="object"?((a?a.querySelector("#_goober"):window._goober)||Object.assign((a||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:a||ct,N=a=>{let r=Y(a),c=r.data;return r.data="",c},nt=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,dt=/\/\*[^]*?\*\/|  +/g,Pt=/\n+/g,T=(a,r)=>{let c="",d="",i="";for(let s in a){let p=a[s];s[0]=="@"?s[1]=="i"?c=s+" "+p+";":d+=s[1]=="f"?T(p,s):s+"{"+T(p,s[1]=="k"?"":r)+"}":typeof p=="object"?d+=T(p,r?r.replace(/([^,])+/g,y=>s.replace(/(^:.*)|([^,])+/g,C=>/&/.test(C)?C.replace(/&/g,y):y?y+" "+C:C)):s):p!=null&&(s=/^--/.test(s)?s:s.replace(/[A-Z]/g,"-$&").toLowerCase(),i+=T.p?T.p(s,p):s+":"+p+";")}return c+(r&&i?r+"{"+i+"}":i)+d},ot={},At=a=>{if(typeof a=="object"){let r="";for(let c in a)r+=c+At(a[c]);return r}return a},wt=(a,r,c,d,i)=>{let s=At(a),p=ot[s]||(ot[s]=(C=>{let R=0,_=11;for(;R<C.length;)_=101*_+C.charCodeAt(R++)>>>0;return"go"+_})(s));if(!ot[p]){let C=s!==a?a:(R=>{let _,M,U=[{}];for(;_=nt.exec(R.replace(dt,""));)_[4]?U.shift():_[3]?(M=_[3].replace(Pt," ").trim(),U.unshift(U[0][M]=U[0][M]||{})):U[0][_[1]]=_[2].replace(Pt," ").trim();return U[0]})(a);ot[p]=T(i?{["@keyframes "+p]:C}:C,c?"":"."+p)}let y=c&&ot.g?ot.g:null;return c&&(ot.g=ot[p]),((C,R,_,M)=>{M?R.data=R.data.replace(M,C):R.data.indexOf(C)===-1&&(R.data=_?C+R.data:R.data+C)})(ot[p],r,d,y),p},It=(a,r,c)=>a.reduce((d,i,s)=>{let p=r[s];if(p&&p.call){let y=p(c),C=y&&y.props&&y.props.className||/^go/.test(y)&&y;p=C?"."+C:y&&typeof y=="object"?y.props?"":T(y,""):y===!1?"":y}return d+i+(p==null?"":p)},"");function ut(a){let r=this||{},c=a.call?a(r.p):a;return wt(c.unshift?c.raw?It(c,[].slice.call(arguments,1),r.p):c.reduce((d,i)=>Object.assign(d,i&&i.call?i(r.p):i),{}):c,Y(r.target),r.g,r.o,r.k)}let Mt,pt,$,gt=ut.bind({g:1}),I=ut.bind({k:1});function H(a,r,c,d){T.p=r,Mt=a,pt=c,$=d}function z(a,r){let c=this||{};return function(){let d=arguments;function i(s,p){let y=Object.assign({},s),C=y.className||i.className;c.p=Object.assign({theme:pt&&pt()},y),c.o=/ *go\d+/.test(C),y.className=ut.apply(c,d)+(C?" "+C:""),r&&(y.ref=p);let R=a;return a[0]&&(R=y.as||a,delete y.as),$&&R[0]&&$(y),Mt(R,y)}return r?r(i):i}}function et(a,r){for(var c=0;c<r.length;c++){var d=r[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}function jt(a,r,c){return r&&et(a.prototype,r),c&&et(a,c),a}function F(){return F=Object.assign||function(a){for(var r=1;r<arguments.length;r++){var c=arguments[r];for(var d in c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d])}return a},F.apply(this,arguments)}function yt(a,r){a.prototype=Object.create(r.prototype),a.prototype.constructor=a,a.__proto__=r}function Ft(a,r){if(a==null)return{};var c={},d=Object.keys(a),i,s;for(s=0;s<d.length;s++)i=d[s],!(r.indexOf(i)>=0)&&(c[i]=a[i]);return c}function Ot(a){if(a===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}var A=function(){return""},g=E.createContext({enqueueSnackbar:A,closeSnackbar:A}),S={downXs:"@media (max-width:599.95px)",upSm:"@media (min-width:600px)"},lt=function(r){return r.charAt(0).toUpperCase()+r.slice(1)},rt=function(r){return""+lt(r.vertical)+lt(r.horizontal)},kt=function(r){return!!r||r===0},zt="unmounted",v="exited",J="entering",V="entered",it="exiting",x=function(a){yt(r,a);function r(d){var i;i=a.call(this,d)||this;var s=d.appear,p;return i.appearStatus=null,d.in?s?(p=v,i.appearStatus=J):p=V:d.unmountOnExit||d.mountOnEnter?p=zt:p=v,i.state={status:p},i.nextCallback=null,i}r.getDerivedStateFromProps=function(i,s){var p=i.in;return p&&s.status===zt?{status:v}:null};var c=r.prototype;return c.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},c.componentDidUpdate=function(i){var s=null;if(i!==this.props){var p=this.state.status;this.props.in?p!==J&&p!==V&&(s=J):(p===J||p===V)&&(s=it)}this.updateStatus(!1,s)},c.componentWillUnmount=function(){this.cancelNextCallback()},c.getTimeouts=function(){var i=this.props.timeout,s=i,p=i;return i!=null&&typeof i!="number"&&typeof i!="string"&&(p=i.exit,s=i.enter),{exit:p,enter:s}},c.updateStatus=function(i,s){i===void 0&&(i=!1),s!==null?(this.cancelNextCallback(),s===J?this.performEnter(i):this.performExit()):this.props.unmountOnExit&&this.state.status===v&&this.setState({status:zt})},c.performEnter=function(i){var s=this,p=this.props.enter,y=i,C=this.getTimeouts();if(!i&&!p){this.safeSetState({status:V},function(){s.props.onEntered&&s.props.onEntered(s.node,y)});return}this.props.onEnter&&this.props.onEnter(this.node,y),this.safeSetState({status:J},function(){s.props.onEntering&&s.props.onEntering(s.node,y),s.onTransitionEnd(C.enter,function(){s.safeSetState({status:V},function(){s.props.onEntered&&s.props.onEntered(s.node,y)})})})},c.performExit=function(){var i=this,s=this.props.exit,p=this.getTimeouts();if(!s){this.safeSetState({status:v},function(){i.props.onExited&&i.props.onExited(i.node)});return}this.props.onExit&&this.props.onExit(this.node),this.safeSetState({status:it},function(){i.props.onExiting&&i.props.onExiting(i.node),i.onTransitionEnd(p.exit,function(){i.safeSetState({status:v},function(){i.props.onExited&&i.props.onExited(i.node)})})})},c.cancelNextCallback=function(){this.nextCallback!==null&&this.nextCallback.cancel&&(this.nextCallback.cancel(),this.nextCallback=null)},c.safeSetState=function(i,s){s=this.setNextCallback(s),this.setState(i,s)},c.setNextCallback=function(i){var s=this,p=!0;return this.nextCallback=function(){p&&(p=!1,s.nextCallback=null,i())},this.nextCallback.cancel=function(){p=!1},this.nextCallback},c.onTransitionEnd=function(i,s){this.setNextCallback(s);var p=i==null&&!this.props.addEndListener;if(!this.node||p){setTimeout(this.nextCallback,0);return}this.props.addEndListener&&this.props.addEndListener(this.node,this.nextCallback),i!=null&&setTimeout(this.nextCallback,i)},c.render=function(){var i=this.state.status;if(i===zt)return null;var s=this.props,p=s.children,y=Ft(s,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return p(i,y)},jt(r,[{key:"node",get:function(){var i,s=(i=this.props.nodeRef)===null||i===void 0?void 0:i.current;if(!s)throw new Error("notistack - Custom snackbar is not refForwarding");return s}}]),r}(E.Component);function b(){}x.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:b,onEntering:b,onEntered:b,onExit:b,onExiting:b,onExited:b};function xt(a,r){typeof a=="function"?a(r):a&&(a.current=r)}function Et(a,r){return(0,E.useMemo)(function(){return a==null&&r==null?null:function(c){xt(a,c),xt(r,c)}},[a,r])}function at(a){var r=a.timeout,c=a.style,d=c===void 0?{}:c,i=a.mode;return{duration:typeof r=="object"?r[i]||0:r,easing:d.transitionTimingFunction,delay:d.transitionDelay}}var Ct={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},Jt=function(r){r.scrollTop=r.scrollTop},Bt=function(r){return Math.round(r)+"ms"};function ft(a,r){a===void 0&&(a=["all"]);var c=r||{},d=c.duration,i=d===void 0?300:d,s=c.easing,p=s===void 0?Ct.easeInOut:s,y=c.delay,C=y===void 0?0:y,R=Array.isArray(a)?a:[a];return R.map(function(_){var M=typeof i=="string"?i:Bt(i),U=typeof C=="string"?C:Bt(C);return _+" "+M+" "+p+" "+U}).join(",")}function Ut(a){return a&&a.ownerDocument||document}function Xt(a){var r=Ut(a);return r.defaultView||window}function Tt(a,r){r===void 0&&(r=166);var c;function d(){for(var i=this,s=arguments.length,p=new Array(s),y=0;y<s;y++)p[y]=arguments[y];var C=function(){a.apply(i,p)};clearTimeout(c),c=setTimeout(C,r)}return d.clear=function(){clearTimeout(c)},d}function w(a,r){var c=r.getBoundingClientRect(),d=Xt(r),i;if(r.fakeTransform)i=r.fakeTransform;else{var s=d.getComputedStyle(r);i=s.getPropertyValue("-webkit-transform")||s.getPropertyValue("transform")}var p=0,y=0;if(i&&i!=="none"&&typeof i=="string"){var C=i.split("(")[1].split(")")[0].split(",");p=parseInt(C[4],10),y=parseInt(C[5],10)}switch(a){case"left":return"translateX("+(d.innerWidth+p-c.left)+"px)";case"right":return"translateX(-"+(c.left+c.width-p)+"px)";case"up":return"translateY("+(d.innerHeight+y-c.top)+"px)";default:return"translateY(-"+(c.top+c.height-y)+"px)"}}function Qt(a,r){if(r){var c=w(a,r);c&&(r.style.webkitTransform=c,r.style.transform=c)}}var ne=(0,E.forwardRef)(function(a,r){var c=a.children,d=a.direction,i=d===void 0?"down":d,s=a.in,p=a.style,y=a.timeout,C=y===void 0?0:y,R=a.onEnter,_=a.onEntered,M=a.onExit,U=a.onExited,Gt=Ft(a,["children","direction","in","style","timeout","onEnter","onEntered","onExit","onExited"]),L=(0,E.useRef)(null),Z=Et(c.ref,L),st=Et(Z,r),mt=function(Q,Zt){Qt(i,Q),Jt(Q),R&&R(Q,Zt)},vt=function(Q){var Zt=(p==null?void 0:p.transitionTimingFunction)||Ct.easeOut,Yt=at({timeout:C,mode:"enter",style:F({},p,{transitionTimingFunction:Zt})});Q.style.webkitTransition=ft("-webkit-transform",Yt),Q.style.transition=ft("transform",Yt),Q.style.webkitTransform="none",Q.style.transform="none"},ht=function(Q){var Zt=(p==null?void 0:p.transitionTimingFunction)||Ct.sharp,Yt=at({timeout:C,mode:"exit",style:F({},p,{transitionTimingFunction:Zt})});Q.style.webkitTransition=ft("-webkit-transform",Yt),Q.style.transition=ft("transform",Yt),Qt(i,Q),M&&M(Q)},Vt=function(Q){Q.style.webkitTransition="",Q.style.transition="",U&&U(Q)},St=(0,E.useCallback)(function(){L.current&&Qt(i,L.current)},[i]);return(0,E.useEffect)(function(){if(!(s||i==="down"||i==="right")){var Ht=Tt(function(){L.current&&Qt(i,L.current)}),Q=Xt(L.current);return Q.addEventListener("resize",Ht),function(){Ht.clear(),Q.removeEventListener("resize",Ht)}}},[i,s]),(0,E.useEffect)(function(){s||St()},[s,St]),(0,E.createElement)(x,Object.assign({appear:!0,nodeRef:L,onEnter:mt,onEntered:_,onEntering:vt,onExit:ht,onExited:Vt,in:s,timeout:C},Gt),function(Ht,Q){return(0,E.cloneElement)(c,F({ref:st,style:F({visibility:Ht==="exited"&&!s?"hidden":void 0},p,{},c.props.style)},Q))})});ne.displayName="Slide";var qt=function(r){return E.createElement("svg",Object.assign({viewBox:"0 0 24 24",focusable:"false",style:{fontSize:20,marginInlineEnd:8,userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0}},r))},oe=function(){return E.createElement(qt,null,E.createElement("path",{d:`M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41
        10.59L10 14.17L17.59 6.58L19 8L10 17Z`}))},ae=function(){return E.createElement(qt,null,E.createElement("path",{d:"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"}))},se=function(){return E.createElement(qt,null,E.createElement("path",{d:`M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,
        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,
        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z`}))},le=function(){return E.createElement(qt,null,E.createElement("path",{d:`M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,
        0 22,12A10,10 0 0,0 12,2Z`}))},Ae={default:void 0,success:E.createElement(oe,null),warning:E.createElement(ae,null),error:E.createElement(se,null),info:E.createElement(le,null)},f={maxSnack:3,persist:!1,hideIconVariant:!1,disableWindowBlurListener:!1,variant:"default",autoHideDuration:5e3,iconVariant:Ae,anchorOrigin:{vertical:"bottom",horizontal:"left"},TransitionComponent:ne,transitionDuration:{enter:225,exit:195}},e=function(r,c){var d=function(s){return typeof s=="number"||s===null};return d(r)?r:d(c)?c:f.autoHideDuration},n=function(r,c){var d=function(s,p){return p.some(function(y){return typeof s===y})};return d(r,["string","number"])?r:d(r,["object"])?F({},f.transitionDuration,{},d(c,["object"])&&c,{},r):d(c,["string","number"])?c:d(c,["object"])?F({},f.transitionDuration,{},c):f.transitionDuration},t=function(r,c){return function(d,i){return i===void 0&&(i=!1),i?F({},f[d],{},c[d],{},r[d]):d==="autoHideDuration"?e(r.autoHideDuration,c.autoHideDuration):d==="transitionDuration"?n(r.transitionDuration,c.transitionDuration):r[d]||c[d]||f[d]}};function o(a){return Object.entries(a).reduce(function(r,c){var d,i=c[0],s=c[1];return F({},r,(d={},d[i]=ut(s),d))},{})}var l={SnackbarContainer:"notistack-SnackbarContainer",Snackbar:"notistack-Snackbar",CollapseWrapper:"notistack-CollapseWrapper",MuiContent:"notistack-MuiContent",MuiContentVariant:function(r){return"notistack-MuiContent-"+r}},h=o({root:{height:0},entered:{height:"auto"}}),m="0px",k=175,O=(0,E.forwardRef)(function(a,r){var c=a.children,d=a.in,i=a.onExited,s=(0,E.useRef)(null),p=(0,E.useRef)(null),y=Et(r,p),C=function(){return s.current?s.current.clientHeight:0},R=function(Z){Z.style.height=m},_=function(Z){var st=C(),mt=at({timeout:k,mode:"enter"}),vt=mt.duration,ht=mt.easing;Z.style.transitionDuration=typeof vt=="string"?vt:vt+"ms",Z.style.height=st+"px",Z.style.transitionTimingFunction=ht||""},M=function(Z){Z.style.height="auto"},U=function(Z){Z.style.height=C()+"px"},Gt=function(Z){Jt(Z);var st=at({timeout:k,mode:"exit"}),mt=st.duration,vt=st.easing;Z.style.transitionDuration=typeof mt=="string"?mt:mt+"ms",Z.style.height=m,Z.style.transitionTimingFunction=vt||""};return(0,E.createElement)(x,{in:d,unmountOnExit:!0,onEnter:R,onEntered:M,onEntering:_,onExit:U,onExited:i,onExiting:Gt,nodeRef:p,timeout:k},function(L,Z){return(0,E.createElement)("div",Object.assign({ref:y,className:tt(h.root,L==="entered"&&h.entered),style:F({pointerEvents:"all",overflow:"hidden",minHeight:m,transition:ft("height")},L==="entered"&&{overflow:"visible"},{},L==="exited"&&!d&&{visibility:"hidden"})},Z),(0,E.createElement)("div",{ref:s,className:l.CollapseWrapper,style:{display:"flex",width:"100%"}},c))})});O.displayName="Collapse";var B={right:"left",left:"right",bottom:"up",top:"down"},G=function(r){return r.horizontal!=="center"?B[r.horizontal]:B[r.vertical]},D=function(r){return"anchorOrigin"+rt(r)},j=function(r){r===void 0&&(r={});var c={containerRoot:!0,containerAnchorOriginTopCenter:!0,containerAnchorOriginBottomCenter:!0,containerAnchorOriginTopRight:!0,containerAnchorOriginBottomRight:!0,containerAnchorOriginTopLeft:!0,containerAnchorOriginBottomLeft:!0};return Object.keys(r).filter(function(d){return!c[d]}).reduce(function(d,i){var s;return F({},d,(s={},s[i]=r[i],s))},{})},$t=function(){};function Rt(a,r){return a.reduce(function(c,d){return d==null?c:function(){for(var s=arguments.length,p=new Array(s),y=0;y<s;y++)p[y]=arguments[y];var C=[].concat(p);r&&C.indexOf(r)===-1&&C.push(r),c.apply(this,C),d.apply(this,C)}},$t)}var Nt=typeof window!="undefined"?E.useLayoutEffect:E.useEffect;function X(a){var r=(0,E.useRef)(a);return Nt(function(){r.current=a}),(0,E.useCallback)(function(){return r.current.apply(void 0,arguments)},[])}var bt=(0,E.forwardRef)(function(a,r){var c=a.children,d=a.className,i=a.autoHideDuration,s=a.disableWindowBlurListener,p=s===void 0?!1:s,y=a.onClose,C=a.id,R=a.open,_=a.SnackbarProps,M=_===void 0?{}:_,U=(0,E.useRef)(),Gt=X(function(){y&&y.apply(void 0,arguments)}),L=X(function(ht){!y||ht==null||(U.current&&clearTimeout(U.current),U.current=setTimeout(function(){Gt(null,"timeout",C)},ht))});(0,E.useEffect)(function(){return R&&L(i),function(){U.current&&clearTimeout(U.current)}},[R,i,L]);var Z=function(){U.current&&clearTimeout(U.current)},st=(0,E.useCallback)(function(){i!=null&&L(i*.5)},[i,L]),mt=function(Vt){M.onMouseEnter&&M.onMouseEnter(Vt),Z()},vt=function(Vt){M.onMouseLeave&&M.onMouseLeave(Vt),st()};return(0,E.useEffect)(function(){if(!p&&R)return window.addEventListener("focus",st),window.addEventListener("blur",Z),function(){window.removeEventListener("focus",st),window.removeEventListener("blur",Z)}},[p,st,R]),(0,E.createElement)("div",Object.assign({ref:r},M,{className:tt(l.Snackbar,d),onMouseEnter:mt,onMouseLeave:vt}),c)});bt.displayName="Snackbar";var Wt,Kt=o({root:(Wt={display:"flex",flexWrap:"wrap",flexGrow:1},Wt[S.upSm]={flexGrow:"initial",minWidth:"288px"},Wt)}),Lt=(0,E.forwardRef)(function(a,r){var c=a.className,d=Ft(a,["className"]);return E.createElement("div",Object.assign({ref:r,className:tt(Kt.root,c)},d))});Lt.displayName="SnackbarContent";var _t=o({root:{backgroundColor:"#313131",fontSize:"0.875rem",lineHeight:1.43,letterSpacing:"0.01071em",color:"#fff",alignItems:"center",padding:"6px 16px",borderRadius:"4px",boxShadow:"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)"},lessPadding:{paddingLeft:8*2.5+"px"},default:{backgroundColor:"#313131"},success:{backgroundColor:"#43a047"},error:{backgroundColor:"#d32f2f"},warning:{backgroundColor:"#ff9800"},info:{backgroundColor:"#2196f3"},message:{display:"flex",alignItems:"center",padding:"8px 0"},action:{display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:"16px",marginRight:"-8px"}}),ee="notistack-snackbar",re=(0,E.forwardRef)(function(a,r){var c=a.id,d=a.message,i=a.action,s=a.iconVariant,p=a.variant,y=a.hideIconVariant,C=a.style,R=a.className,_=s[p],M=i;return typeof M=="function"&&(M=M(c)),E.createElement(Lt,{ref:r,role:"alert","aria-describedby":ee,style:C,className:tt(l.MuiContent,l.MuiContentVariant(p),_t.root,_t[p],R,!y&&_&&_t.lessPadding)},E.createElement("div",{id:ee,className:_t.message},y?null:_,d),M&&E.createElement("div",{className:_t.action},M))});re.displayName="MaterialDesignContent";var be=(0,E.memo)(re),ke=o({wrappedRoot:{width:"100%",position:"relative",transform:"translateX(0)",top:0,right:0,bottom:0,left:0,minWidth:"288px"}}),xe=function(r){var c=(0,E.useRef)(),d=(0,E.useState)(!0),i=d[0],s=d[1],p=Rt([r.snack.onClose,r.onClose]),y=function(){r.snack.requestClose&&p(null,"instructed",r.snack.id)},C=(0,E.useCallback)(function(){c.current=setTimeout(function(){s(function(Yt){return!Yt})},125)},[]);(0,E.useEffect)(function(){return function(){c.current&&clearTimeout(c.current)}},[]);var R=r.snack,_=r.classes,M=r.Component,U=M===void 0?be:M,Gt=(0,E.useMemo)(function(){return j(_)},[_]),L=R.open,Z=R.SnackbarProps,st=R.TransitionComponent,mt=R.TransitionProps,vt=R.transitionDuration,ht=R.disableWindowBlurListener,Vt=R.content,St=Ft(R,["open","SnackbarProps","TransitionComponent","TransitionProps","transitionDuration","disableWindowBlurListener","content","entered","requestClose","onEnter","onEntered","onExit","onExited"]),Ht=F({direction:G(St.anchorOrigin),timeout:vt},mt),Q=Vt;typeof Q=="function"&&(Q=Q(St.id,St.message));var Zt=["onEnter","onEntered","onExit","onExited"].reduce(function(Yt,me){var ge;return F({},Yt,(ge={},ge[me]=Rt([r.snack[me],r[me]],St.id),ge))},{});return E.createElement(O,{in:i,onExited:Zt.onExited},E.createElement(bt,{open:L,id:St.id,disableWindowBlurListener:ht,autoHideDuration:St.autoHideDuration,className:tt(ke.wrappedRoot,Gt.root,Gt[D(St.anchorOrigin)]),SnackbarProps:Z,onClose:p},E.createElement(st,Object.assign({},Ht,{appear:!0,in:L,onExit:Zt.onExit,onExited:C,onEnter:Zt.onEnter,onEntered:Rt([Zt.onEntered,y],St.id)}),Q||E.createElement(U,Object.assign({},St)))))},ie,pe,ce,de,he,te={view:{default:20,dense:4},snackbar:{default:6,dense:2}},ye="."+l.CollapseWrapper,fe=16,ue=o({root:(ie={boxSizing:"border-box",display:"flex",maxHeight:"100%",position:"fixed",zIndex:1400,height:"auto",width:"auto",transition:ft(["top","right","bottom","left","max-width"],{duration:300,easing:"ease"}),pointerEvents:"none"},ie[ye]={padding:te.snackbar.default+"px 0px",transition:"padding 300ms ease 0ms"},ie.maxWidth="calc(100% - "+te.view.default*2+"px)",ie[S.downXs]={width:"100%",maxWidth:"calc(100% - "+fe*2+"px)"},ie),rootDense:(pe={},pe[ye]={padding:te.snackbar.dense+"px 0px"},pe),top:{top:te.view.default-te.snackbar.default+"px",flexDirection:"column"},bottom:{bottom:te.view.default-te.snackbar.default+"px",flexDirection:"column-reverse"},left:(ce={left:te.view.default+"px"},ce[S.upSm]={alignItems:"flex-start"},ce[S.downXs]={left:fe+"px"},ce),right:(de={right:te.view.default+"px"},de[S.upSm]={alignItems:"flex-end"},de[S.downXs]={right:fe+"px"},de),center:(he={left:"50%",transform:"translateX(-50%)"},he[S.upSm]={alignItems:"center"},he)}),ve=function(r){var c=r.classes,d=c===void 0?{}:c,i=r.anchorOrigin,s=r.dense,p=r.children,y=tt(l.SnackbarContainer,ue[i.vertical],ue[i.horizontal],ue.root,d.containerRoot,d["containerAnchorOrigin"+rt(i)],s&&ue.rootDense);return E.createElement("div",{className:y},p)},Ce=(0,E.memo)(ve),we=null,je={NO_PERSIST_ALL:"Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented."},Ie=function(a){if(we){var r=je[a];typeof console!="undefined"&&console.error("WARNING - notistack: "+r);try{throw new Error(r)}catch(c){}}},Ee=function(r){var c=typeof r=="string"||(0,E.isValidElement)(r);return!c},ze,Re,Pe=function(a){yt(r,a);function r(d){var i;return i=a.call(this,d)||this,i.enqueueSnackbar=function(s,p){if(p===void 0&&(p={}),s==null)throw new Error("enqueueSnackbar called with invalid argument");var y=Ee(s)?s:p,C=Ee(s)?s.message:s,R=y.key,_=y.preventDuplicate,M=Ft(y,["key","preventDuplicate"]),U=kt(R),Gt=U?R:new Date().getTime()+Math.random(),L=t(M,i.props),Z=F({id:Gt},M,{message:C,open:!0,entered:!1,requestClose:!1,persist:L("persist"),action:L("action"),content:L("content"),variant:L("variant"),anchorOrigin:L("anchorOrigin"),disableWindowBlurListener:L("disableWindowBlurListener"),autoHideDuration:L("autoHideDuration"),hideIconVariant:L("hideIconVariant"),TransitionComponent:L("TransitionComponent"),transitionDuration:L("transitionDuration"),TransitionProps:L("TransitionProps",!0),iconVariant:L("iconVariant",!0),style:L("style",!0),SnackbarProps:L("SnackbarProps",!0),className:tt(i.props.className,M.className)});return Z.persist&&(Z.autoHideDuration=void 0),i.setState(function(st){if(_===void 0&&i.props.preventDuplicate||_){var mt=function(St){return U?St.id===Gt:St.message===C},vt=st.queue.findIndex(mt)>-1,ht=st.snacks.findIndex(mt)>-1;if(vt||ht)return st}return i.handleDisplaySnack(F({},st,{queue:[].concat(st.queue,[Z])}))}),Gt},i.handleDisplaySnack=function(s){var p=s.snacks;return p.length>=i.maxSnack?i.handleDismissOldest(s):i.processQueue(s)},i.processQueue=function(s){var p=s.queue,y=s.snacks;return p.length>0?F({},s,{snacks:[].concat(y,[p[0]]),queue:p.slice(1,p.length)}):s},i.handleDismissOldest=function(s){if(s.snacks.some(function(_){return!_.open||_.requestClose}))return s;var p=!1,y=!1,C=s.snacks.reduce(function(_,M){return _+(M.open&&M.persist?1:0)},0);C===i.maxSnack&&(y=!0);var R=s.snacks.map(function(_){return!p&&(!_.persist||y)?(p=!0,_.entered?(_.onClose&&_.onClose(null,"maxsnack",_.id),i.props.onClose&&i.props.onClose(null,"maxsnack",_.id),F({},_,{open:!1})):F({},_,{requestClose:!0})):F({},_)});return F({},s,{snacks:R})},i.handleEnteredSnack=function(s,p,y){if(!kt(y))throw new Error("handleEnteredSnack Cannot be called with undefined key");i.setState(function(C){var R=C.snacks;return{snacks:R.map(function(_){return _.id===y?F({},_,{entered:!0}):F({},_)})}})},i.handleCloseSnack=function(s,p,y){i.props.onClose&&i.props.onClose(s,p,y);var C=y===void 0;i.setState(function(R){var _=R.snacks,M=R.queue;return{snacks:_.map(function(U){return!C&&U.id!==y?F({},U):U.entered?F({},U,{open:!1}):F({},U,{requestClose:!0})}),queue:M.filter(function(U){return U.id!==y})}})},i.closeSnackbar=function(s){var p=i.state.snacks.find(function(y){return y.id===s});kt(s)&&p&&p.onClose&&p.onClose(null,"instructed",s),i.handleCloseSnack(null,"instructed",s)},i.handleExitedSnack=function(s,p){if(!kt(p))throw new Error("handleExitedSnack Cannot be called with undefined key");i.setState(function(y){var C=i.processQueue(F({},y,{snacks:y.snacks.filter(function(R){return R.id!==p})}));return C.queue.length===0?C:i.handleDismissOldest(C)})},ze=i.enqueueSnackbar,Re=i.closeSnackbar,i.state={snacks:[],queue:[],contextValue:{enqueueSnackbar:i.enqueueSnackbar.bind(Ot(i)),closeSnackbar:i.closeSnackbar.bind(Ot(i))}},i}var c=r.prototype;return c.render=function(){var i=this,s=this.state.contextValue,p=this.props,y=p.domRoot,C=p.children,R=p.dense,_=R===void 0?!1:R,M=p.Components,U=M===void 0?{}:M,Gt=p.classes,L=this.state.snacks.reduce(function(st,mt){var vt,ht=rt(mt.anchorOrigin),Vt=st[ht]||[];return F({},st,(vt={},vt[ht]=[].concat(Vt,[mt]),vt))},{}),Z=Object.keys(L).map(function(st){var mt=L[st],vt=mt[0];return E.createElement(Ce,{key:st,dense:_,anchorOrigin:vt.anchorOrigin,classes:Gt},mt.map(function(ht){return E.createElement(xe,{key:ht.id,snack:ht,classes:Gt,Component:U[ht.variant],onClose:i.handleCloseSnack,onEnter:i.props.onEnter,onExit:i.props.onExit,onExited:Rt([i.handleExitedSnack,i.props.onExited],ht.id),onEntered:Rt([i.handleEnteredSnack,i.props.onEntered],ht.id)})}))});return E.createElement(g.Provider,{value:s},C,y?(0,P.createPortal)(Z,y):Z)},jt(r,[{key:"maxSnack",get:function(){return this.props.maxSnack||f.maxSnack}}]),r}(E.Component),_e=function(){return(0,E.useContext)(g)}},7711:(Dt,K,u)=>{var E=u(5072),P=u.n(E),W=u(7825),q=u.n(W),tt=u(7659),ct=u.n(tt),Y=u(5056),N=u.n(Y),nt=u(540),dt=u.n(nt),Pt=u(1113),T=u.n(Pt),ot=u(2274),At={};At.styleTagTransform=T(),At.setAttributes=N(),At.insert=ct().bind(null,"head"),At.domAPI=q(),At.insertStyleElement=dt();var wt=P()(ot.A,At),It=ot.A&&ot.A.locals?ot.A.locals:void 0},1460:(Dt,K,u)=>{u.d(K,{xI:()=>w});var E=Object.defineProperty,P=Object.defineProperties,W=Object.getOwnPropertyDescriptors,q=Object.getOwnPropertySymbols,tt=Object.prototype.hasOwnProperty,ct=Object.prototype.propertyIsEnumerable,Y=(f,e,n)=>e in f?E(f,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):f[e]=n,N=(f,e)=>{for(var n in e||(e={}))tt.call(e,n)&&Y(f,n,e[n]);if(q)for(var n of q(e))ct.call(e,n)&&Y(f,n,e[n]);return f},nt=(f,e)=>P(f,W(e)),dt=(f,e,n)=>(Y(f,typeof e!="symbol"?e+"":e,n),n);function Pt(){return{async:!1,baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,hooks:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}let T=Pt();function ot(f){T=f}const At=/[&<>"']/,wt=new RegExp(At.source,"g"),It=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,ut=new RegExp(It.source,"g"),Mt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},pt=f=>Mt[f];function $(f,e){if(e){if(At.test(f))return f.replace(wt,pt)}else if(It.test(f))return f.replace(ut,pt);return f}const gt=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function I(f){return f.replace(gt,(e,n)=>(n=n.toLowerCase(),n==="colon"?":":n.charAt(0)==="#"?n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):""))}const H=/(^|[^\[])\^/g;function z(f,e){f=typeof f=="string"?f:f.source,e=e||"";const n={replace:(t,o)=>(o=o.source||o,o=o.replace(H,"$1"),f=f.replace(t,o),n),getRegex:()=>new RegExp(f,e)};return n}const et=/[^\w:]/g,jt=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function F(f,e,n){if(f){let t;try{t=decodeURIComponent(I(n)).replace(et,"").toLowerCase()}catch(o){return null}if(t.indexOf("javascript:")===0||t.indexOf("vbscript:")===0||t.indexOf("data:")===0)return null}e&&!jt.test(n)&&(n=g(e,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(t){return null}return n}const yt={},Ft=/^[^:]+:\/*[^/]*$/,Ot=/^([^:]+:)[\s\S]*$/,A=/^([^:]+:\/*[^/]*)[\s\S]*$/;function g(f,e){yt[" "+f]||(Ft.test(f)?yt[" "+f]=f+"/":yt[" "+f]=rt(f,"/",!0)),f=yt[" "+f];const n=f.indexOf(":")===-1;return e.substring(0,2)==="//"?n?e:f.replace(Ot,"$1")+e:e.charAt(0)==="/"?n?e:f.replace(A,"$1")+e:f+e}const S={exec:function(){}};function lt(f,e){const n=f.replace(/\|/g,(l,h,m)=>{let k=!1,O=h;for(;--O>=0&&m[O]==="\\";)k=!k;return k?"|":" |"}),t=n.split(/ \|/);let o=0;if(t[0].trim()||t.shift(),t.length>0&&!t[t.length-1].trim()&&t.pop(),t.length>e)t.splice(e);else for(;t.length<e;)t.push("");for(;o<t.length;o++)t[o]=t[o].trim().replace(/\\\|/g,"|");return t}function rt(f,e,n){const t=f.length;if(t===0)return"";let o=0;for(;o<t;){const l=f.charAt(t-o-1);if(l===e&&!n)o++;else if(l!==e&&n)o++;else break}return f.slice(0,t-o)}function kt(f,e){if(f.indexOf(e[1])===-1)return-1;const n=f.length;let t=0,o=0;for(;o<n;o++)if(f[o]==="\\")o++;else if(f[o]===e[0])t++;else if(f[o]===e[1]&&(t--,t<0))return o;return-1}function zt(f){f&&f.sanitize&&!f.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function v(f,e){if(e<1)return"";let n="";for(;e>1;)e&1&&(n+=f),e>>=1,f+=f;return n+f}function J(f,e,n,t){const o=e.href,l=e.title?$(e.title):null,h=f[1].replace(/\\([\[\]])/g,"$1");if(f[0].charAt(0)!=="!"){t.state.inLink=!0;const m={type:"link",raw:n,href:o,title:l,text:h,tokens:t.inlineTokens(h)};return t.state.inLink=!1,m}return{type:"image",raw:n,href:o,title:l,text:$(h)}}function V(f,e){const n=f.match(/^(\s+)(?:```)/);if(n===null)return e;const t=n[1];return e.split(`
`).map(o=>{const l=o.match(/^\s+/);if(l===null)return o;const[h]=l;return h.length>=t.length?o.slice(t.length):o}).join(`
`)}class it{constructor(e){this.options=e||T}space(e){const n=this.rules.block.newline.exec(e);if(n&&n[0].length>0)return{type:"space",raw:n[0]}}code(e){const n=this.rules.block.code.exec(e);if(n){const t=n[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:n[0],codeBlockStyle:"indented",text:this.options.pedantic?t:rt(t,`
`)}}}fences(e){const n=this.rules.block.fences.exec(e);if(n){const t=n[0],o=V(t,n[3]||"");return{type:"code",raw:t,lang:n[2]?n[2].trim().replace(this.rules.inline._escapes,"$1"):n[2],text:o}}}heading(e){const n=this.rules.block.heading.exec(e);if(n){let t=n[2].trim();if(/#$/.test(t)){const o=rt(t,"#");(this.options.pedantic||!o||/ $/.test(o))&&(t=o.trim())}return{type:"heading",raw:n[0],depth:n[1].length,text:t,tokens:this.lexer.inline(t)}}}hr(e){const n=this.rules.block.hr.exec(e);if(n)return{type:"hr",raw:n[0]}}blockquote(e){const n=this.rules.block.blockquote.exec(e);if(n){const t=n[0].replace(/^ *>[ \t]?/gm,""),o=this.lexer.state.top;this.lexer.state.top=!0;const l=this.lexer.blockTokens(t);return this.lexer.state.top=o,{type:"blockquote",raw:n[0],tokens:l,text:t}}}list(e){let n=this.rules.block.list.exec(e);if(n){let t,o,l,h,m,k,O,B,G,D,j,$t,Rt=n[1].trim();const Nt=Rt.length>1,X={type:"list",raw:"",ordered:Nt,start:Nt?+Rt.slice(0,-1):"",loose:!1,items:[]};Rt=Nt?`\\d{1,9}\\${Rt.slice(-1)}`:`\\${Rt}`,this.options.pedantic&&(Rt=Nt?Rt:"[*+-]");const bt=new RegExp(`^( {0,3}${Rt})((?:[	 ][^\\n]*)?(?:\\n|$))`);for(;e&&($t=!1,!(!(n=bt.exec(e))||this.rules.block.hr.test(e)));){if(t=n[0],e=e.substring(t.length),B=n[2].split(`
`,1)[0].replace(/^\t+/,Kt=>" ".repeat(3*Kt.length)),G=e.split(`
`,1)[0],this.options.pedantic?(h=2,j=B.trimLeft()):(h=n[2].search(/[^ ]/),h=h>4?1:h,j=B.slice(h),h+=n[1].length),k=!1,!B&&/^ *$/.test(G)&&(t+=G+`
`,e=e.substring(G.length+1),$t=!0),!$t){const Kt=new RegExp(`^ {0,${Math.min(3,h-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),Lt=new RegExp(`^ {0,${Math.min(3,h-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),_t=new RegExp(`^ {0,${Math.min(3,h-1)}}(?:\`\`\`|~~~)`),ee=new RegExp(`^ {0,${Math.min(3,h-1)}}#`);for(;e&&(D=e.split(`
`,1)[0],G=D,this.options.pedantic&&(G=G.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!(_t.test(G)||ee.test(G)||Kt.test(G)||Lt.test(e)));){if(G.search(/[^ ]/)>=h||!G.trim())j+=`
`+G.slice(h);else{if(k||B.search(/[^ ]/)>=4||_t.test(B)||ee.test(B)||Lt.test(B))break;j+=`
`+G}!k&&!G.trim()&&(k=!0),t+=D+`
`,e=e.substring(D.length+1),B=G.slice(h)}}X.loose||(O?X.loose=!0:/\n *\n *$/.test(t)&&(O=!0)),this.options.gfm&&(o=/^\[[ xX]\] /.exec(j),o&&(l=o[0]!=="[ ] ",j=j.replace(/^\[[ xX]\] +/,""))),X.items.push({type:"list_item",raw:t,task:!!o,checked:l,loose:!1,text:j}),X.raw+=t}X.items[X.items.length-1].raw=t.trimRight(),X.items[X.items.length-1].text=j.trimRight(),X.raw=X.raw.trimRight();const Wt=X.items.length;for(m=0;m<Wt;m++)if(this.lexer.state.top=!1,X.items[m].tokens=this.lexer.blockTokens(X.items[m].text,[]),!X.loose){const Kt=X.items[m].tokens.filter(_t=>_t.type==="space"),Lt=Kt.length>0&&Kt.some(_t=>/\n.*\n/.test(_t.raw));X.loose=Lt}if(X.loose)for(m=0;m<Wt;m++)X.items[m].loose=!0;return X}}html(e){const n=this.rules.block.html.exec(e);if(n){const t={type:"html",raw:n[0],pre:!this.options.sanitizer&&(n[1]==="pre"||n[1]==="script"||n[1]==="style"),text:n[0]};if(this.options.sanitize){const o=this.options.sanitizer?this.options.sanitizer(n[0]):$(n[0]);t.type="paragraph",t.text=o,t.tokens=this.lexer.inline(o)}return t}}def(e){const n=this.rules.block.def.exec(e);if(n){const t=n[1].toLowerCase().replace(/\s+/g," "),o=n[2]?n[2].replace(/^<(.*)>$/,"$1").replace(this.rules.inline._escapes,"$1"):"",l=n[3]?n[3].substring(1,n[3].length-1).replace(this.rules.inline._escapes,"$1"):n[3];return{type:"def",tag:t,raw:n[0],href:o,title:l}}}table(e){const n=this.rules.block.table.exec(e);if(n){const t={type:"table",header:lt(n[1]).map(o=>({text:o})),align:n[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:n[3]&&n[3].trim()?n[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(t.header.length===t.align.length){t.raw=n[0];let o=t.align.length,l,h,m,k;for(l=0;l<o;l++)/^ *-+: *$/.test(t.align[l])?t.align[l]="right":/^ *:-+: *$/.test(t.align[l])?t.align[l]="center":/^ *:-+ *$/.test(t.align[l])?t.align[l]="left":t.align[l]=null;for(o=t.rows.length,l=0;l<o;l++)t.rows[l]=lt(t.rows[l],t.header.length).map(O=>({text:O}));for(o=t.header.length,h=0;h<o;h++)t.header[h].tokens=this.lexer.inline(t.header[h].text);for(o=t.rows.length,h=0;h<o;h++)for(k=t.rows[h],m=0;m<k.length;m++)k[m].tokens=this.lexer.inline(k[m].text);return t}}}lheading(e){const n=this.rules.block.lheading.exec(e);if(n)return{type:"heading",raw:n[0],depth:n[2].charAt(0)==="="?1:2,text:n[1],tokens:this.lexer.inline(n[1])}}paragraph(e){const n=this.rules.block.paragraph.exec(e);if(n){const t=n[1].charAt(n[1].length-1)===`
`?n[1].slice(0,-1):n[1];return{type:"paragraph",raw:n[0],text:t,tokens:this.lexer.inline(t)}}}text(e){const n=this.rules.block.text.exec(e);if(n)return{type:"text",raw:n[0],text:n[0],tokens:this.lexer.inline(n[0])}}escape(e){const n=this.rules.inline.escape.exec(e);if(n)return{type:"escape",raw:n[0],text:$(n[1])}}tag(e){const n=this.rules.inline.tag.exec(e);if(n)return!this.lexer.state.inLink&&/^<a /i.test(n[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(n[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(n[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(n[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:n[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(n[0]):$(n[0]):n[0]}}link(e){const n=this.rules.inline.link.exec(e);if(n){const t=n[2].trim();if(!this.options.pedantic&&/^</.test(t)){if(!/>$/.test(t))return;const h=rt(t.slice(0,-1),"\\");if((t.length-h.length)%2===0)return}else{const h=kt(n[2],"()");if(h>-1){const k=(n[0].indexOf("!")===0?5:4)+n[1].length+h;n[2]=n[2].substring(0,h),n[0]=n[0].substring(0,k).trim(),n[3]=""}}let o=n[2],l="";if(this.options.pedantic){const h=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o);h&&(o=h[1],l=h[3])}else l=n[3]?n[3].slice(1,-1):"";return o=o.trim(),/^</.test(o)&&(this.options.pedantic&&!/>$/.test(t)?o=o.slice(1):o=o.slice(1,-1)),J(n,{href:o&&o.replace(this.rules.inline._escapes,"$1"),title:l&&l.replace(this.rules.inline._escapes,"$1")},n[0],this.lexer)}}reflink(e,n){let t;if((t=this.rules.inline.reflink.exec(e))||(t=this.rules.inline.nolink.exec(e))){let o=(t[2]||t[1]).replace(/\s+/g," ");if(o=n[o.toLowerCase()],!o){const l=t[0].charAt(0);return{type:"text",raw:l,text:l}}return J(t,o,t[0],this.lexer)}}emStrong(e,n,t=""){let o=this.rules.inline.emStrong.lDelim.exec(e);if(!o||o[3]&&t.match(/[\p{L}\p{N}]/u))return;const l=o[1]||o[2]||"";if(!l||l&&(t===""||this.rules.inline.punctuation.exec(t))){const h=o[0].length-1;let m,k,O=h,B=0;const G=o[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(G.lastIndex=0,n=n.slice(-1*e.length+h);(o=G.exec(n))!=null;){if(m=o[1]||o[2]||o[3]||o[4]||o[5]||o[6],!m)continue;if(k=m.length,o[3]||o[4]){O+=k;continue}else if((o[5]||o[6])&&h%3&&!((h+k)%3)){B+=k;continue}if(O-=k,O>0)continue;k=Math.min(k,k+O+B);const D=e.slice(0,h+o.index+(o[0].length-m.length)+k);if(Math.min(h,k)%2){const $t=D.slice(1,-1);return{type:"em",raw:D,text:$t,tokens:this.lexer.inlineTokens($t)}}const j=D.slice(2,-2);return{type:"strong",raw:D,text:j,tokens:this.lexer.inlineTokens(j)}}}}codespan(e){const n=this.rules.inline.code.exec(e);if(n){let t=n[2].replace(/\n/g," ");const o=/[^ ]/.test(t),l=/^ /.test(t)&&/ $/.test(t);return o&&l&&(t=t.substring(1,t.length-1)),t=$(t,!0),{type:"codespan",raw:n[0],text:t}}}br(e){const n=this.rules.inline.br.exec(e);if(n)return{type:"br",raw:n[0]}}del(e){const n=this.rules.inline.del.exec(e);if(n)return{type:"del",raw:n[0],text:n[2],tokens:this.lexer.inlineTokens(n[2])}}autolink(e,n){const t=this.rules.inline.autolink.exec(e);if(t){let o,l;return t[2]==="@"?(o=$(this.options.mangle?n(t[1]):t[1]),l="mailto:"+o):(o=$(t[1]),l=o),{type:"link",raw:t[0],text:o,href:l,tokens:[{type:"text",raw:o,text:o}]}}}url(e,n){let t;if(t=this.rules.inline.url.exec(e)){let o,l;if(t[2]==="@")o=$(this.options.mangle?n(t[0]):t[0]),l="mailto:"+o;else{let h;do h=t[0],t[0]=this.rules.inline._backpedal.exec(t[0])[0];while(h!==t[0]);o=$(t[0]),t[1]==="www."?l="http://"+t[0]:l=t[0]}return{type:"link",raw:t[0],text:o,href:l,tokens:[{type:"text",raw:o,text:o}]}}}inlineText(e,n){const t=this.rules.inline.text.exec(e);if(t){let o;return this.lexer.state.inRawBlock?o=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):$(t[0]):t[0]:o=$(this.options.smartypants?n(t[0]):t[0]),{type:"text",raw:t[0],text:o}}}}const x={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:S,lheading:/^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};x._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,x._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,x.def=z(x.def).replace("label",x._label).replace("title",x._title).getRegex(),x.bullet=/(?:[*+-]|\d{1,9}[.)])/,x.listItemStart=z(/^( *)(bull) */).replace("bull",x.bullet).getRegex(),x.list=z(x.list).replace(/bull/g,x.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+x.def.source+")").getRegex(),x._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",x._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,x.html=z(x.html,"i").replace("comment",x._comment).replace("tag",x._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),x.paragraph=z(x._paragraph).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.blockquote=z(x.blockquote).replace("paragraph",x.paragraph).getRegex(),x.normal=N({},x),x.gfm=nt(N({},x.normal),{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),x.gfm.table=z(x.gfm.table).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.gfm.paragraph=z(x._paragraph).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",x.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.pedantic=nt(N({},x.normal),{html:z(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",x._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:S,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:z(x.normal._paragraph).replace("hr",x.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",x.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});const b={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:S,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,rDelimUnd:/^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:S,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};b._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",b.punctuation=z(b.punctuation).replace(/punctuation/g,b._punctuation).getRegex(),b.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,b.escapedEmSt=/(?:^|[^\\])(?:\\\\)*\\[*_]/g,b._comment=z(x._comment).replace("(?:-->|$)","-->").getRegex(),b.emStrong.lDelim=z(b.emStrong.lDelim).replace(/punct/g,b._punctuation).getRegex(),b.emStrong.rDelimAst=z(b.emStrong.rDelimAst,"g").replace(/punct/g,b._punctuation).getRegex(),b.emStrong.rDelimUnd=z(b.emStrong.rDelimUnd,"g").replace(/punct/g,b._punctuation).getRegex(),b._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,b._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,b._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,b.autolink=z(b.autolink).replace("scheme",b._scheme).replace("email",b._email).getRegex(),b._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,b.tag=z(b.tag).replace("comment",b._comment).replace("attribute",b._attribute).getRegex(),b._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,b._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,b._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,b.link=z(b.link).replace("label",b._label).replace("href",b._href).replace("title",b._title).getRegex(),b.reflink=z(b.reflink).replace("label",b._label).replace("ref",x._label).getRegex(),b.nolink=z(b.nolink).replace("ref",x._label).getRegex(),b.reflinkSearch=z(b.reflinkSearch,"g").replace("reflink",b.reflink).replace("nolink",b.nolink).getRegex(),b.normal=N({},b),b.pedantic=nt(N({},b.normal),{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:z(/^!?\[(label)\]\((.*?)\)/).replace("label",b._label).getRegex(),reflink:z(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",b._label).getRegex()}),b.gfm=nt(N({},b.normal),{escape:z(b.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),b.gfm.url=z(b.gfm.url,"i").replace("email",b.gfm._extended_email).getRegex(),b.breaks=nt(N({},b.gfm),{br:z(b.br).replace("{2,}","*").getRegex(),text:z(b.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function xt(f){return f.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function Et(f){let e="",n,t;const o=f.length;for(n=0;n<o;n++)t=f.charCodeAt(n),Math.random()>.5&&(t="x"+t.toString(16)),e+="&#"+t+";";return e}class at{constructor(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||T,this.options.tokenizer=this.options.tokenizer||new it,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const n={block:x.normal,inline:b.normal};this.options.pedantic?(n.block=x.pedantic,n.inline=b.pedantic):this.options.gfm&&(n.block=x.gfm,this.options.breaks?n.inline=b.breaks:n.inline=b.gfm),this.tokenizer.rules=n}static get rules(){return{block:x,inline:b}}static lex(e,n){return new at(n).lex(e)}static lexInline(e,n){return new at(n).inlineTokens(e)}lex(e){e=e.replace(/\r\n|\r/g,`
`),this.blockTokens(e,this.tokens);let n;for(;n=this.inlineQueue.shift();)this.inlineTokens(n.src,n.tokens);return this.tokens}blockTokens(e,n=[]){this.options.pedantic?e=e.replace(/\t/g,"    ").replace(/^ +$/gm,""):e=e.replace(/^( *)(\t+)/gm,(m,k,O)=>k+"    ".repeat(O.length));let t,o,l,h;for(;e;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(m=>(t=m.call({lexer:this},e,n))?(e=e.substring(t.raw.length),n.push(t),!0):!1))){if(t=this.tokenizer.space(e)){e=e.substring(t.raw.length),t.raw.length===1&&n.length>0?n[n.length-1].raw+=`
`:n.push(t);continue}if(t=this.tokenizer.code(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t);continue}if(t=this.tokenizer.fences(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.heading(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.hr(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.blockquote(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.list(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.html(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.def(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.raw,this.inlineQueue[this.inlineQueue.length-1].src=o.text):this.tokens.links[t.tag]||(this.tokens.links[t.tag]={href:t.href,title:t.title});continue}if(t=this.tokenizer.table(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.lheading(e)){e=e.substring(t.raw.length),n.push(t);continue}if(l=e,this.options.extensions&&this.options.extensions.startBlock){let m=1/0;const k=e.slice(1);let O;this.options.extensions.startBlock.forEach(function(B){O=B.call({lexer:this},k),typeof O=="number"&&O>=0&&(m=Math.min(m,O))}),m<1/0&&m>=0&&(l=e.substring(0,m+1))}if(this.state.top&&(t=this.tokenizer.paragraph(l))){o=n[n.length-1],h&&o.type==="paragraph"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t),h=l.length!==e.length,e=e.substring(t.raw.length);continue}if(t=this.tokenizer.text(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&o.type==="text"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t);continue}if(e){const m="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(m);break}else throw new Error(m)}}return this.state.top=!0,n}inline(e,n=[]){return this.inlineQueue.push({src:e,tokens:n}),n}inlineTokens(e,n=[]){let t,o,l,h=e,m,k,O;if(this.tokens.links){const B=Object.keys(this.tokens.links);if(B.length>0)for(;(m=this.tokenizer.rules.inline.reflinkSearch.exec(h))!=null;)B.includes(m[0].slice(m[0].lastIndexOf("[")+1,-1))&&(h=h.slice(0,m.index)+"["+v("a",m[0].length-2)+"]"+h.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(m=this.tokenizer.rules.inline.blockSkip.exec(h))!=null;)h=h.slice(0,m.index)+"["+v("a",m[0].length-2)+"]"+h.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(m=this.tokenizer.rules.inline.escapedEmSt.exec(h))!=null;)h=h.slice(0,m.index+m[0].length-2)+"++"+h.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex),this.tokenizer.rules.inline.escapedEmSt.lastIndex--;for(;e;)if(k||(O=""),k=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(B=>(t=B.call({lexer:this},e,n))?(e=e.substring(t.raw.length),n.push(t),!0):!1))){if(t=this.tokenizer.escape(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.tag(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(t=this.tokenizer.link(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.reflink(e,this.tokens.links)){e=e.substring(t.raw.length),o=n[n.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(t=this.tokenizer.emStrong(e,h,O)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.codespan(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.br(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.del(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.autolink(e,Et)){e=e.substring(t.raw.length),n.push(t);continue}if(!this.state.inLink&&(t=this.tokenizer.url(e,Et))){e=e.substring(t.raw.length),n.push(t);continue}if(l=e,this.options.extensions&&this.options.extensions.startInline){let B=1/0;const G=e.slice(1);let D;this.options.extensions.startInline.forEach(function(j){D=j.call({lexer:this},G),typeof D=="number"&&D>=0&&(B=Math.min(B,D))}),B<1/0&&B>=0&&(l=e.substring(0,B+1))}if(t=this.tokenizer.inlineText(l,xt)){e=e.substring(t.raw.length),t.raw.slice(-1)!=="_"&&(O=t.raw.slice(-1)),k=!0,o=n[n.length-1],o&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(e){const B="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(B);break}else throw new Error(B)}}return n}}class Ct{constructor(e){this.options=e||T}code(e,n,t){const o=(n||"").match(/\S*/)[0];if(this.options.highlight){const l=this.options.highlight(e,o);l!=null&&l!==e&&(t=!0,e=l)}return e=e.replace(/\n$/,"")+`
`,o?'<pre><code class="'+this.options.langPrefix+$(o)+'">'+(t?e:$(e,!0))+`</code></pre>
`:"<pre><code>"+(t?e:$(e,!0))+`</code></pre>
`}blockquote(e){return`<blockquote>
${e}</blockquote>
`}html(e){return e}heading(e,n,t,o){if(this.options.headerIds){const l=this.options.headerPrefix+o.slug(t);return`<h${n} id="${l}">${e}</h${n}>
`}return`<h${n}>${e}</h${n}>
`}hr(){return this.options.xhtml?`<hr/>
`:`<hr>
`}list(e,n,t){const o=n?"ol":"ul",l=n&&t!==1?' start="'+t+'"':"";return"<"+o+l+`>
`+e+"</"+o+`>
`}listitem(e){return`<li>${e}</li>
`}checkbox(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(e){return`<p>${e}</p>
`}table(e,n){return n&&(n=`<tbody>${n}</tbody>`),`<table>
<thead>
`+e+`</thead>
`+n+`</table>
`}tablerow(e){return`<tr>
${e}</tr>
`}tablecell(e,n){const t=n.header?"th":"td";return(n.align?`<${t} align="${n.align}">`:`<${t}>`)+e+`</${t}>
`}strong(e){return`<strong>${e}</strong>`}em(e){return`<em>${e}</em>`}codespan(e){return`<code>${e}</code>`}br(){return this.options.xhtml?"<br/>":"<br>"}del(e){return`<del>${e}</del>`}link(e,n,t){if(e=F(this.options.sanitize,this.options.baseUrl,e),e===null)return t;let o='<a href="'+e+'"';return n&&(o+=' title="'+n+'"'),o+=">"+t+"</a>",o}image(e,n,t){if(e=F(this.options.sanitize,this.options.baseUrl,e),e===null)return t;let o=`<img src="${e}" alt="${t}"`;return n&&(o+=` title="${n}"`),o+=this.options.xhtml?"/>":">",o}text(e){return e}}class Jt{strong(e){return e}em(e){return e}codespan(e){return e}del(e){return e}html(e){return e}text(e){return e}link(e,n,t){return""+t}image(e,n,t){return""+t}br(){return""}}class Bt{constructor(){this.seen={}}serialize(e){return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")}getNextSafeSlug(e,n){let t=e,o=0;if(this.seen.hasOwnProperty(t)){o=this.seen[e];do o++,t=e+"-"+o;while(this.seen.hasOwnProperty(t))}return n||(this.seen[e]=o,this.seen[t]=0),t}slug(e,n={}){const t=this.serialize(e);return this.getNextSafeSlug(t,n.dryrun)}}class ft{constructor(e){this.options=e||T,this.options.renderer=this.options.renderer||new Ct,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new Jt,this.slugger=new Bt}static parse(e,n){return new ft(n).parse(e)}static parseInline(e,n){return new ft(n).parseInline(e)}parse(e,n=!0){let t="",o,l,h,m,k,O,B,G,D,j,$t,Rt,Nt,X,bt,Wt,Kt,Lt,_t;const ee=e.length;for(o=0;o<ee;o++){if(j=e[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[j.type]&&(_t=this.options.extensions.renderers[j.type].call({parser:this},j),_t!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(j.type))){t+=_t||"";continue}switch(j.type){case"space":continue;case"hr":{t+=this.renderer.hr();continue}case"heading":{t+=this.renderer.heading(this.parseInline(j.tokens),j.depth,I(this.parseInline(j.tokens,this.textRenderer)),this.slugger);continue}case"code":{t+=this.renderer.code(j.text,j.lang,j.escaped);continue}case"table":{for(G="",B="",m=j.header.length,l=0;l<m;l++)B+=this.renderer.tablecell(this.parseInline(j.header[l].tokens),{header:!0,align:j.align[l]});for(G+=this.renderer.tablerow(B),D="",m=j.rows.length,l=0;l<m;l++){for(O=j.rows[l],B="",k=O.length,h=0;h<k;h++)B+=this.renderer.tablecell(this.parseInline(O[h].tokens),{header:!1,align:j.align[h]});D+=this.renderer.tablerow(B)}t+=this.renderer.table(G,D);continue}case"blockquote":{D=this.parse(j.tokens),t+=this.renderer.blockquote(D);continue}case"list":{for($t=j.ordered,Rt=j.start,Nt=j.loose,m=j.items.length,D="",l=0;l<m;l++)bt=j.items[l],Wt=bt.checked,Kt=bt.task,X="",bt.task&&(Lt=this.renderer.checkbox(Wt),Nt?bt.tokens.length>0&&bt.tokens[0].type==="paragraph"?(bt.tokens[0].text=Lt+" "+bt.tokens[0].text,bt.tokens[0].tokens&&bt.tokens[0].tokens.length>0&&bt.tokens[0].tokens[0].type==="text"&&(bt.tokens[0].tokens[0].text=Lt+" "+bt.tokens[0].tokens[0].text)):bt.tokens.unshift({type:"text",text:Lt}):X+=Lt),X+=this.parse(bt.tokens,Nt),D+=this.renderer.listitem(X,Kt,Wt);t+=this.renderer.list(D,$t,Rt);continue}case"html":{t+=this.renderer.html(j.text);continue}case"paragraph":{t+=this.renderer.paragraph(this.parseInline(j.tokens));continue}case"text":{for(D=j.tokens?this.parseInline(j.tokens):j.text;o+1<ee&&e[o+1].type==="text";)j=e[++o],D+=`
`+(j.tokens?this.parseInline(j.tokens):j.text);t+=n?this.renderer.paragraph(D):D;continue}default:{const re='Token with "'+j.type+'" type was not found.';if(this.options.silent){console.error(re);return}else throw new Error(re)}}}return t}parseInline(e,n){n=n||this.renderer;let t="",o,l,h;const m=e.length;for(o=0;o<m;o++){if(l=e[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[l.type]&&(h=this.options.extensions.renderers[l.type].call({parser:this},l),h!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(l.type))){t+=h||"";continue}switch(l.type){case"escape":{t+=n.text(l.text);break}case"html":{t+=n.html(l.text);break}case"link":{t+=n.link(l.href,l.title,this.parseInline(l.tokens,n));break}case"image":{t+=n.image(l.href,l.title,l.text);break}case"strong":{t+=n.strong(this.parseInline(l.tokens,n));break}case"em":{t+=n.em(this.parseInline(l.tokens,n));break}case"codespan":{t+=n.codespan(l.text);break}case"br":{t+=n.br();break}case"del":{t+=n.del(this.parseInline(l.tokens,n));break}case"text":{t+=n.text(l.text);break}default:{const k='Token with "'+l.type+'" type was not found.';if(this.options.silent){console.error(k);return}else throw new Error(k)}}}return t}}class Ut{constructor(e){this.options=e||T}preprocess(e){return e}postprocess(e){return e}}dt(Ut,"passThroughHooks",new Set(["preprocess","postprocess"]));function Xt(f,e,n){return t=>{if(t.message+=`
Please report this to https://github.com/markedjs/marked.`,f){const o="<p>An error occurred:</p><pre>"+$(t.message+"",!0)+"</pre>";if(e)return Promise.resolve(o);if(n){n(null,o);return}return o}if(e)return Promise.reject(t);if(n){n(t);return}throw t}}function Tt(f,e){return(n,t,o)=>{typeof t=="function"&&(o=t,t=null);const l=N({},t);t=N(N({},w.defaults),l);const h=Xt(t.silent,t.async,o);if(typeof n=="undefined"||n===null)return h(new Error("marked(): input parameter is undefined or null"));if(typeof n!="string")return h(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected"));if(zt(t),t.hooks&&(t.hooks.options=t),o){const m=t.highlight;let k;try{t.hooks&&(n=t.hooks.preprocess(n)),k=f(n,t)}catch(G){return h(G)}const O=function(G){let D;if(!G)try{t.walkTokens&&w.walkTokens(k,t.walkTokens),D=e(k,t),t.hooks&&(D=t.hooks.postprocess(D))}catch(j){G=j}return t.highlight=m,G?h(G):o(null,D)};if(!m||m.length<3||(delete t.highlight,!k.length))return O();let B=0;w.walkTokens(k,function(G){G.type==="code"&&(B++,setTimeout(()=>{m(G.text,G.lang,function(D,j){if(D)return O(D);j!=null&&j!==G.text&&(G.text=j,G.escaped=!0),B--,B===0&&O()})},0))}),B===0&&O();return}if(t.async)return Promise.resolve(t.hooks?t.hooks.preprocess(n):n).then(m=>f(m,t)).then(m=>t.walkTokens?Promise.all(w.walkTokens(m,t.walkTokens)).then(()=>m):m).then(m=>e(m,t)).then(m=>t.hooks?t.hooks.postprocess(m):m).catch(h);try{t.hooks&&(n=t.hooks.preprocess(n));const m=f(n,t);t.walkTokens&&w.walkTokens(m,t.walkTokens);let k=e(m,t);return t.hooks&&(k=t.hooks.postprocess(k)),k}catch(m){return h(m)}}}function w(f,e,n){return Tt(at.lex,ft.parse)(f,e,n)}w.options=w.setOptions=function(f){return w.defaults=N(N({},w.defaults),f),ot(w.defaults),w},w.getDefaults=Pt,w.defaults=T,w.use=function(...f){const e=w.defaults.extensions||{renderers:{},childTokens:{}};f.forEach(n=>{const t=N({},n);if(t.async=w.defaults.async||t.async||!1,n.extensions&&(n.extensions.forEach(o=>{if(!o.name)throw new Error("extension name required");if(o.renderer){const l=e.renderers[o.name];l?e.renderers[o.name]=function(...h){let m=o.renderer.apply(this,h);return m===!1&&(m=l.apply(this,h)),m}:e.renderers[o.name]=o.renderer}if(o.tokenizer){if(!o.level||o.level!=="block"&&o.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");e[o.level]?e[o.level].unshift(o.tokenizer):e[o.level]=[o.tokenizer],o.start&&(o.level==="block"?e.startBlock?e.startBlock.push(o.start):e.startBlock=[o.start]:o.level==="inline"&&(e.startInline?e.startInline.push(o.start):e.startInline=[o.start]))}o.childTokens&&(e.childTokens[o.name]=o.childTokens)}),t.extensions=e),n.renderer){const o=w.defaults.renderer||new Ct;for(const l in n.renderer){const h=o[l];o[l]=(...m)=>{let k=n.renderer[l].apply(o,m);return k===!1&&(k=h.apply(o,m)),k}}t.renderer=o}if(n.tokenizer){const o=w.defaults.tokenizer||new it;for(const l in n.tokenizer){const h=o[l];o[l]=(...m)=>{let k=n.tokenizer[l].apply(o,m);return k===!1&&(k=h.apply(o,m)),k}}t.tokenizer=o}if(n.hooks){const o=w.defaults.hooks||new Ut;for(const l in n.hooks){const h=o[l];Ut.passThroughHooks.has(l)?o[l]=m=>{if(w.defaults.async)return Promise.resolve(n.hooks[l].call(o,m)).then(O=>h.call(o,O));const k=n.hooks[l].call(o,m);return h.call(o,k)}:o[l]=(...m)=>{let k=n.hooks[l].apply(o,m);return k===!1&&(k=h.apply(o,m)),k}}t.hooks=o}if(n.walkTokens){const o=w.defaults.walkTokens;t.walkTokens=function(l){let h=[];return h.push(n.walkTokens.call(this,l)),o&&(h=h.concat(o.call(this,l))),h}}w.setOptions(t)})},w.walkTokens=function(f,e){let n=[];for(const t of f)switch(n=n.concat(e.call(w,t)),t.type){case"table":{for(const o of t.header)n=n.concat(w.walkTokens(o.tokens,e));for(const o of t.rows)for(const l of o)n=n.concat(w.walkTokens(l.tokens,e));break}case"list":{n=n.concat(w.walkTokens(t.items,e));break}default:w.defaults.extensions&&w.defaults.extensions.childTokens&&w.defaults.extensions.childTokens[t.type]?w.defaults.extensions.childTokens[t.type].forEach(function(o){n=n.concat(w.walkTokens(t[o],e))}):t.tokens&&(n=n.concat(w.walkTokens(t.tokens,e)))}return n},w.parseInline=Tt(at.lexInline,ft.parseInline),w.Parser=ft,w.parser=ft.parse,w.Renderer=Ct,w.TextRenderer=Jt,w.Lexer=at,w.lexer=at.lex,w.Tokenizer=it,w.Slugger=Bt,w.Hooks=Ut,w.parse=w;const Qt=w.options,ne=w.setOptions,qt=w.use,oe=w.walkTokens,ae=w.parseInline,se=null,le=ft.parse,Ae=at.lex}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,