"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[964],{1468:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.tWgKE_UudcDgKDwzNbJt {
  margin-bottom: 20px;
  font-size: 20px;
  letter-spacing: 1.2px;
  font-weight: 400;
}
.XZRfTXRvzmPIracnb5cX {
  display: flex;
  flex-flow: wrap row;
}
.kJSFZpQZUt2lke6HRnyV {
  flex: 1;
  margin-bottom: 10px;
  background-color: #fff;
}
.kJSFZpQZUt2lke6HRnyV:hover {
  box-shadow: 0 6px 16px 0 #d6e0e8;
}
.UStbqJ6qLorlUwyfjSDn {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  min-width: 200px;
  height: 88px;
  vertical-align: top;
}
.UStbqJ6qLorlUwyfjSDn img {
  margin-left: 10px;
  margin-right: 10px;
}
.UStbqJ6qLorlUwyfjSDn > p {
  margin-left: 10px;
  margin-right: 10px;
}
.GS7XieMHeA01JB89nZ7F {
  font-size: 14px;
  color: #3d3d3d;
}
.HaO5zpaa6zldlJzLdiCs {
  font-size: 12px;
  color: #909090;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/components/card/index.module.less"],names:[],mappings:"AAAA;EACE,mBAAA;EACA,eAAA;EACA,qBAAA;EACA,gBAAA;AACF;AACA;EACE,aAAA;EACA,mBAAA;AACF;AACA;EACE,OAAA;EACA,mBAAA;EACA,sBAAA;AACF;AACA;EACE,gCAAA;AACF;AACA;EACE,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,gBAAA;EACA,YAAA;EACA,mBAAA;AACF;AAPA;EAQI,iBAAA;EACA,kBAAA;AAEJ;AAXA;EAYI,iBAAA;EACA,kBAAA;AAEJ;AACA;EACE,eAAA;EACA,cAAA;AACF;AACA;EACE,eAAA;EACA,cAAA;AACF",sourcesContent:[`.menu {
  margin-bottom: 20px;
  font-size: 20px;
  letter-spacing: 1.2px;
  font-weight: 400;
}
.content {
  display: flex;
  flex-flow: wrap row;
}
.link {
  flex: 1;
  margin-bottom: 10px;
  background-color: #fff;
}
.link:hover {
  box-shadow: 0 6px 16px 0 #d6e0e8;
}
.card {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  min-width: 200px;
  height: 88px;
  vertical-align: top;
  img {
    margin-left: 10px;
    margin-right: 10px;
  }
  >p {
    margin-left: 10px;
    margin-right: 10px;
  }
}
.title {
  font-size: 14px;
  color: #3d3d3d;
}
.describe {
  font-size: 12px;
  color: #909090;
}
`],sourceRoot:""}]),i.locals={menu:"tWgKE_UudcDgKDwzNbJt",content:"XZRfTXRvzmPIracnb5cX",link:"kJSFZpQZUt2lke6HRnyV",card:"UStbqJ6qLorlUwyfjSDn",title:"GS7XieMHeA01JB89nZ7F",describe:"HaO5zpaa6zldlJzLdiCs"};const p=i},6537:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.E_T9zZc1fleI3b68mzzv {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}
.qQInqJZ8NaBVeQVTF5Jx {
  position: fixed;
  top: 0;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  height: 60px;
  border-bottom: 1px solid #d4dee6;
  background-color: #fff;
}
.qQInqJZ8NaBVeQVTF5Jx + section {
  margin-top: 60px;
}
.jDGmdUr8AZX6W_2Z_sMF {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  margin-left: 10px;
  line-height: 60px;
}
.jDGmdUr8AZX6W_2Z_sMF h1 {
  padding: 0 10px;
  color: #909090;
  cursor: pointer;
  font-weight: 500;
  font-size: 18px;
}
.jDGmdUr8AZX6W_2Z_sMF .H_4RB44_GX7wPDt6p10S {
  font-weight: 700;
  color: #000;
}
.n4H71Qj4TFWLpjSxfJCg {
  flex: 1;
  display: flex;
  justify-content: flex-end;
}
.n4H71Qj4TFWLpjSxfJCg .UZH75qu8TIq7uacJLyIa {
  justify-content: center;
  width: 32px;
  height: 32px;
  margin-right: 20px;
  border: 1px #a39595 solid;
  border-radius: 50%;
}
`,"",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/layout/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EACE,eAAA;EACA,MAAA;EDFA,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECCA,WAAA;EACA,YAAA;EACA,gCAAA;EACA,sBAAA;AASF;AAhBA;EASI,gBAAA;AAUJ;AAPA;EDZE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECWA,iBAAA;EACA,iBAAA;AAYF;AAfA;EAKI,eAAA;EACA,cAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;AAaJ;AAtBA;EAYI,gBAAA;EACA,WAAA;AAaJ;AAVA;EACE,OAAA;EACA,aAAA;EACA,yBAAA;AAYF;AAfA;EAKI,uBAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAaJ",sourcesContent:[`.flex-start {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}`,`@import '../../pc/styles/mixins';
.header {
  position: fixed;
  top: 0;
  .flex-start();
  width: 100%;
  height: 60px;
  border-bottom: 1px solid #d4dee6;
  background-color: #fff;
  + section {
    margin-top: 60px;
  }
}
.left {
  .flex-start();
  margin-left: 10px;
  line-height: 60px;
  h1 {
    padding: 0 10px;
    color: #909090;
    cursor: pointer;
    font-weight: 500;
    font-size: 18px;
  }
  .active {
    font-weight: 700;
    color: #000;
  }
}
.right {
  flex: 1;
  display: flex;
  justify-content: flex-end;
  .via {
    justify-content: center;
    width: 32px;
    height: 32px;
    margin-right: 20px;
    border: 1px rgb(163, 149, 149) solid;
    border-radius: 50%;
  }
}

`],sourceRoot:""}]),i.locals={"flex-start":"E_T9zZc1fleI3b68mzzv",header:"qQInqJZ8NaBVeQVTF5Jx",left:"jDGmdUr8AZX6W_2Z_sMF",active:"H_4RB44_GX7wPDt6p10S",right:"n4H71Qj4TFWLpjSxfJCg",via:"UZH75qu8TIq7uacJLyIa"};const p=i},2722:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.dPOKicdWl10kJJrZR3SE {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}
.VRQrf82kK3SW4HyNduCq {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  padding: 6px 8px;
}
.Czq8gLyGaCePULPeu_oA {
  flex: 1;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}
.Czq8gLyGaCePULPeu_oA ul {
  font-size: 14px;
  padding-bottom: 3px;
}
.Czq8gLyGaCePULPeu_oA ul li {
  cursor: pointer;
  color: #909090;
}
.Czq8gLyGaCePULPeu_oA ul li :hover {
  color: #00a4ec;
}
.Czq8gLyGaCePULPeu_oA ul .dKbNGZhRykEEItXIv3Wb {
  font-weight: 700;
  color: #3d3d3d;
}
.Czq8gLyGaCePULPeu_oA ul h1 {
  font-size: 14px;
  padding: 5px 20px;
}
.Czq8gLyGaCePULPeu_oA ul h1.dKbNGZhRykEEItXIv3Wb {
  font-weight: 700;
  background-color: #e4e4e4;
}
.Czq8gLyGaCePULPeu_oA ul p {
  padding: 5px 0;
}
.hbR7A9CbioyLLm2gPWmc {
  flex: 9;
}
`,"",{version:3,sources:["webpack://./src/platform/pc/styles/mixins.less","webpack://./src/platform/mobile/views/blog/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ACCF;AAJA;EDAE,aAAA;EACA,qBAAA;EACA,2BAAA;EACA,mBAAA;ECDA,WAAA;EACA,gBAAA;AASF;AAPA;EACE,OAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AASF;AAbA;EAMI,eAAA;EACA,mBAAA;AAUJ;AAjBA;EASM,eAAA;EACA,cAAA;AAWN;AArBA;EAaM,cAAA;AAWN;AAxBA;EAgBM,gBAAA;EACA,cAAA;AAWN;AA5BA;EAoBM,eAAA;EACA,iBAAA;AAWN;AAhCA;EAwBM,gBAAA;EACA,yBAAA;AAWN;AApCA;EA4BM,cAAA;AAWN;AAPA;EACE,OAAA;AASF",sourcesContent:[`.flex-start {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
}`,`@import '@/platform/pc/styles/mixins.less';
.blog {
  .flex-start();
  width: 100%;
  padding: 6px 8px;
}
.blogMenu {
  flex: 1;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
  ul {
    font-size: 14px;
    padding-bottom: 3px;
    li {
      cursor: pointer;
      color: #909090;
    }
    li :hover {
      color: #00a4ec;
    }
    .active {
      font-weight: 700;
      color: #3d3d3d;
    }
    h1 {
      font-size: 14px;
      padding: 5px 20px;
    }
    h1.active {
      font-weight: 700;
      background-color: #e4e4e4;
    }
    p {
      padding: 5px 0;
    }
  }
}
.blogContent {
  flex:9;
}
`],sourceRoot:""}]),i.locals={"flex-start":"dPOKicdWl10kJJrZR3SE",blog:"VRQrf82kK3SW4HyNduCq",blogMenu:"Czq8gLyGaCePULPeu_oA",active:"dKbNGZhRykEEItXIv3Wb",blogContent:"hbR7A9CbioyLLm2gPWmc"};const p=i},811:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.ooHbWpcWiQRpnZTvtbyg {
  height: 100vh;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}
ul {
  font-size: 14px;
  padding-bottom: 3px;
}
ul li {
  cursor: pointer;
  color: #909090;
}
ul li :hover {
  color: #00a4ec;
}
ul .TUMYIo6FCyHV8BH2pONy {
  font-weight: 700;
  color: #3d3d3d;
}
ul h1 {
  font-size: 14px;
  padding: 5px 20px;
}
ul li.TUMYIo6FCyHV8BH2pONy,
ul h1.TUMYIo6FCyHV8BH2pONy {
  font-weight: 700;
  background-color: #e4e4e4;
}
ul h1 ~ ul li {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 30px;
  padding-right: 5px;
}
ul ul > li {
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 20px;
  padding-right: 5px;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/aside/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;EACA,gBAAA;EACA,8BAAA;EACA,gBAAA;AACF;AAEA;EACE,eAAA;EACA,mBAAA;AAAF;AAFA;EAKI,eAAA;EACA,cAAA;AAAJ;AANA;EAUI,cAAA;AADJ;AATA;EAcI,gBAAA;EACA,cAAA;AAFJ;AAbA;EAmBI,eAAA;EACA,iBAAA;AAHJ;AAjBA;;EAyBI,gBAAA;EACA,yBAAA;AAJJ;AAtBA;EA8BI,gBAAA;EACA,mBAAA;EACA,kBAAA;EACA,kBAAA;AALJ;AA5BA;EAqCI,gBAAA;EACA,mBAAA;EACA,kBAAA;EACA,kBAAA;AANJ",sourcesContent:[`.aside {
  height: 100vh;
  background: #fff;
  box-shadow: 18px 0 0 0 #d4dee6;
  overflow: hidden;
}

ul {
  font-size: 14px;
  padding-bottom: 3px;

  li {
    cursor: pointer;
    color: #909090;
  }

  li :hover {
    color: #00a4ec;
  }

  .active {
    font-weight: 700;
    color: #3d3d3d;
  }

  h1 {
    font-size: 14px;
    padding: 5px 20px;
  }

  li.active,
  h1.active {
    font-weight: 700;
    background-color: #e4e4e4;
  }

  h1~ul li {
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 30px;
    padding-right: 5px;
  }

  ul > li{
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 20px;
    padding-right: 5px;
  }
}`],sourceRoot:""}]),i.locals={aside:"ooHbWpcWiQRpnZTvtbyg",active:"TUMYIo6FCyHV8BH2pONy"};const p=i},7722:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.mCLUMJbXUyMsQxmzskVn {
  display: flex;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/index.module.less"],names:[],mappings:"AAAA;EACE,aAAA;AACF",sourcesContent:[`.layout {
  display: flex;
  // height: calc(100vh - 60px);
}`],sourceRoot:""}]),i.locals={layout:"mCLUMJbXUyMsQxmzskVn"};const p=i},5066:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,`.fvnjaAGF4afUmF0jyJZ9 {
  flex: 9;
  padding: 10px 20px;
  color: #777;
  background-color: #e4e4e4;
}
`,"",{version:3,sources:["webpack://./src/platform/mobile/views/frontend-nav/main/index.module.less"],names:[],mappings:"AAAA;EACE,OAAA;EACA,kBAAA;EACA,WAAA;EACA,yBAAA;AACF",sourcesContent:[`.main {
  flex: 9;
  padding: 10px 20px;
  color: #777;
  background-color: #e4e4e4;
}
`],sourceRoot:""}]),i.locals={main:"fvnjaAGF4afUmF0jyJZ9"};const p=i},7987:(g,m,n)=>{n.d(m,{A:()=>p});var e=n(1003),E=n.n(e),_=n(2905),u=n.n(_),i=u()(E());i.push([g.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),i.locals={};const p=i},1964:(g,m,n)=>{n.r(m),n.d(m,{default:()=>Ze});var e=n(4999),E=n(2215),_=n(6773),u=n(8484),i=n(5617),p=n(1362);function ne(A){const l=(0,u.Zp)(),[o,t]=e.useState(null),d=r=>{t(r.currentTarget)},c=()=>{t(null)},a=!!o,s=a?"simple-popover":void 0;return e.createElement("div",null,e.createElement("div",{"aria-describedby":s,variant:"contained",onClick:d},A.children),e.createElement(i.Ay,{id:s,open:a,anchorEl:o,onClose:c,anchorOrigin:{vertical:"bottom",horizontal:"left"}},e.createElement(p.A,{sx:{p:1},onClick:()=>l("/blog")},"\u968F\u7B14"),e.createElement(p.A,{sx:{p:1}},e.createElement("a",{href:"https://juejin.cn/creator/content/column?status=all",target:"_blank",style:{color:"#3d3d3d"}},"\u535A\u5BA2"))))}var te=n(5072),C=n.n(te),Ae=n(7825),v=n.n(Ae),oe=n(7659),x=n.n(oe),le=n(5056),h=n.n(le),ae=n(540),y=n.n(ae),se=n(1113),B=n.n(se),S=n(6537),P={};P.styleTagTransform=B(),P.setAttributes=h(),P.insert=x().bind(null,"head"),P.domAPI=v(),P.insertStyleElement=y();var Xe=C()(S.A,P);const R=S.A&&S.A.locals?S.A.locals:void 0;function re(){const A=(0,u.Zp)(),l=ee.routes[0].children.filter(a=>a.activeMenu!==!1),[o,t]=(0,e.useState)(l[0]);function d(a){t(a),A(a.path)}function c(){t(null)}return e.createElement(e.Fragment,null,e.createElement("div",{className:R.header},e.createElement("section",{className:R.left},l.map(a=>e.createElement("h1",{className:a.path===o.path?R.active:"",key:a.path,onClick:()=>d(a)},a.cname))),e.createElement("section",{className:R.right},e.createElement(ne,null,e.createElement("div",{className:R.via,onClick:()=>c()})))),e.createElement(u.sv,null))}const de=re;var W=n(811),D={};D.styleTagTransform=B(),D.setAttributes=h(),D.insert=x().bind(null,"head"),D.domAPI=v(),D.insertStyleElement=y();var we=C()(W.A,D);const N=W.A&&W.A.locals?W.A.locals:void 0;function ie(A){return[...new Set(A.map(t=>t.pid))].reverse().map(t=>({pid:t,children:A.reduce((d,c)=>(t===c.pid&&!d.includes(c.type)&&d.push(c.type),d),[])}))}function ce(A){const{originData:l,curMenu:o,setCurMenu:t}=A;function d(c){t(c)}return e.createElement("aside",{className:N.aside},e.createElement("ul",{className:N.navUl},ie(l).map((c,a)=>e.createElement("li",{key:a},c.pid?e.createElement("h1",{onClick:()=>d(c.children[0])},c.pid):null,e.createElement("ul",null,c.children.map((s,r)=>e.createElement("li",{key:r,className:o===s?N.active:"",onClick:()=>d(s)},s)))))))}const ue=ce;var F=n(5066),M={};M.styleTagTransform=B(),M.setAttributes=h(),M.insert=x().bind(null,"head"),M.domAPI=v(),M.insertStyleElement=y();var He=C()(F.A,M);const me=F.A&&F.A.locals?F.A.locals:void 0;var j=n(1468),O={};O.styleTagTransform=B(),O.setAttributes=h(),O.insert=x().bind(null,"head"),O.domAPI=v(),O.insertStyleElement=y();var Ge=C()(j.A,O);const T=j.A&&j.A.locals?j.A.locals:void 0;var Z=n(5426);function Ee(A){var l,o;return e.createElement(e.Fragment,null,e.createElement("div",{className:T.menu},(l=A.list[0])==null?void 0:l.type),e.createElement("div",{className:T.content},(o=A.list)==null?void 0:o.map((t,d)=>{let c=t.logo.startsWith("imgs")||t.logo.startsWith("public")||(0,Z.g)(t.logo),a=null;return t.logo.startsWith("imgs")&&(a=n(2186)("./"+t.logo)),t.logo.startsWith("public")&&(a=n(9773)),(0,Z.g)(t.logo)&&(a=t.logo),e.createElement("a",{href:t.href,target:"_blank",className:T.link,key:d},e.createElement("div",{className:T.card},c?e.createElement("img",{width:"32px",height:"32px",src:a}):e.createElement("p",null,t.logo),e.createElement("div",null,e.createElement("b",{className:T.title},t.title),e.createElement("p",{className:T.describe},t.describe))))})))}function pe(A){return e.createElement("section",{className:me.main},e.createElement(Ee,{list:A.originData}))}const _e=pe;var J=n(7722),L={};L.styleTagTransform=B(),L.setAttributes=h(),L.insert=x().bind(null,"head"),L.domAPI=v(),L.insertStyleElement=y();var Ve=C()(J.A,L);const fe=J.A&&J.A.locals?J.A.locals:void 0;var ge=n(2131),Ce=(A,l,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},a=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,a);s((o=o.apply(A,l)).next())});function ve(){const[A,l]=(0,e.useState)("\u5E38\u7528\u5DE5\u5177"),[o,t]=(0,e.useState)([]);return(0,e.useEffect)(()=>{function d(){return Ce(this,null,function*(){const c=yield(0,ge.Z)();t(c)})}d()},[]),e.createElement(e.Fragment,null,e.createElement("section",{className:fe.layout},e.createElement(ue,{originData:o,curMenu:A,setCurMenu:l}),e.createElement(_e,{originData:o.filter(d=>d.type===A)})))}const xe=ve;var he=n(4367),ye=n.n(he),K=n(2722),b={};b.styleTagTransform=B(),b.setAttributes=h(),b.insert=x().bind(null,"head"),b.domAPI=v(),b.insertStyleElement=y();var Qe=C()(K.A,b);const X=K.A&&K.A.locals?K.A.locals:void 0,Be=[],w=n(4548).keys().map(A=>(Be.push(A.replace(/\.\//,"").replace(/.md$/,"")),n(3823)("./blog"+A.replace(/\.\//,"/"))));function Pe(){const A=(0,e.useRef)(null),l=w[w.length-1].default;return(0,e.useEffect)(()=>{A.current&&(A.current.innerHTML=l)},[]),e.createElement("section",{className:X.blog},e.createElement("div",{className:ye()("markdown-body",X.blogContent),ref:A,style:{backgroundColor:"white"}}))}const De=Pe;var Me=n(7157),Oe=n(9275),Te=n(916),Le=n(9791),H=n(900),be=n(8020),Ie=n(7925),z=n(7987),I={};I.styleTagTransform=B(),I.setAttributes=h(),I.insert=x().bind(null,"head"),I.domAPI=v(),I.insertStyleElement=y();var Ye=C()(z.A,I);const Re=z.A&&z.A.locals?z.A.locals:void 0;var U=n(4291),G=(A,l,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},a=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,a);s((o=o.apply(A,l)).next())});function Ue(){const A=(0,u.Zp)(),[l,o]=(0,e.useState)([]);(0,e.useEffect)(()=>{function a(s){return G(this,null,function*(){const r=yield(0,U.vS)(s);o(r)})}a("")},[]);const t=(0,e.useRef)(null),d=a=>{t.current=a.touches[0].clientX},c=(a,s)=>G(this,null,function*(){a.changedTouches[0].clientX-t.current<-80&&(yield(0,U.V_)(s.id),o((yield(0,U.vS)(""))||[]))});return e.createElement("section",{className:Re.memorandum},e.createElement(Me.A,{sx:{width:"100%",bgcolor:"background.paper"}},e.createElement(Oe.A,{sx:{padding:0}},l.map(a=>e.createElement(Te.A,{key:a.id,onTouchStart:d,onTouchEnd:s=>c(s,a),onClick:()=>A("/memorandum-detail",{state:a})},e.createElement(Le.A,{primary:a.title}))))),e.createElement(H.A,{ariaLabel:"\u65B0\u589E",sx:{position:"absolute",bottom:16,right:16},icon:e.createElement(be.A,{openIcon:e.createElement(Ie.A,null)}),onClick:()=>A("/memorandum-detail")}))}var V=n(3815),Q=n(2141),Se=Object.defineProperty,We=Object.defineProperties,Fe=Object.getOwnPropertyDescriptors,Y=Object.getOwnPropertySymbols,je=Object.prototype.hasOwnProperty,Je=Object.prototype.propertyIsEnumerable,k=(A,l,o)=>l in A?Se(A,l,{enumerable:!0,configurable:!0,writable:!0,value:o}):A[l]=o,$=(A,l)=>{for(var o in l||(l={}))je.call(l,o)&&k(A,o,l[o]);if(Y)for(var o of Y(l))Je.call(l,o)&&k(A,o,l[o]);return A},q=(A,l)=>We(A,Fe(l)),Ke=(A,l,o)=>new Promise((t,d)=>{var c=r=>{try{s(o.next(r))}catch(f){d(f)}},a=r=>{try{s(o.throw(r))}catch(f){d(f)}},s=r=>r.done?t(r.value):Promise.resolve(r.value).then(c,a);s((o=o.apply(A,l)).next())});function ze(){const A=(0,u.zy)(),l=(0,u.Zp)(),o=A.state,[t,d]=(0,e.useState)(o||{}),c=s=>Ke(this,null,function*(){const{title:r,content:f}=s;s!=null&&s.id?(yield(0,U.fk)(s.id,{title:r,content:f}),l("/memorandum")):(yield(0,U.B5)({title:r,content:f}),l("/memorandum"))}),a=(0,e.useRef)();return(0,e.useLayoutEffect)(()=>{setTimeout(()=>{a.current.children[1].children[0].style.height="calc(100vh - 148px)"})}),e.createElement("section",null,e.createElement("form",{onSubmit:()=>c(t)},e.createElement(V.A,{label:"\u6807\u9898\uFF1A",variant:"filled",value:t==null?void 0:t.title,onChange:s=>d(q($({},t),{title:s.target.value})),fullWidth:!0}),e.createElement(V.A,{ref:a,label:"\u5185\u5BB9\uFF1A",variant:"filled",value:t==null?void 0:t.content,onChange:s=>d(q($({},t),{content:s.target.value})),fullWidth:!0,multiline:!0,rows:10})),e.createElement(H.A,{ariaLabel:"\u4FDD\u5B58",sx:{position:"absolute",bottom:16,right:16},icon:e.createElement(Q.A,{openIcon:e.createElement(Q.A,null)}),onClick:()=>c(t)}))}function Ne(){return e.createElement("div",null,"\u6682\u65E0\u5B8C\u5584\uFF0C\u540E\u7EED\u4E0A\u7EBF")}const ee=(0,E.Ys)([{path:"/",element:e.createElement(de,null),errorElement:e.createElement(_.A,null),children:[{path:"/",cname:"\u524D\u7AEF\u5BFC\u822A",element:e.createElement(xe,null)},{path:"blog",cname:"\u535A\u5BA2",activeMenu:!1,element:e.createElement(De,null)},{path:"memorandum",cname:"\u5907\u5FD8\u5F55",element:e.createElement(Ue,null)},{path:"memorandum-detail",cname:"\u5907\u5FD8\u5F55-\u8BE6\u60C5",activeMenu:!1,element:e.createElement(ze,null)},{path:"ebook",cname:"\u7535\u5B50\u4E66",element:e.createElement(Ne,null)}]}]);function Ze(){return e.createElement(e.StrictMode,null,e.createElement(E.pg,{router:ee}))}}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,