"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[394],{6015:(vo,x,e)=>{var m,r=e(4158);m={value:!0},x.Z=void 0;var s=r(e(9635)),U=e(8385),h=(0,s.default)((0,U.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add");x.Z=h},2464:(vo,x,e)=>{var m,r=e(4158);m={value:!0},x.Z=void 0;var s=r(e(9635)),U=e(8385),h=(0,s.default)((0,U.jsx)("path",{d:"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"}),"Save");x.Z=h},4443:(vo,x,e)=>{e.d(x,{Z:()=>so});var m=e(617),r=e(8348),s=e(4075),U=e(8252),h=e(3621),no=e(345),N=e(1488),eo=e(3298),B=e(8385);const mo=(0,eo.Z)((0,B.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add");var Y=e(8026),to=e(2041);function I(d){return(0,to.Z)("MuiSpeedDialIcon",d)}const D=(0,Y.Z)("MuiSpeedDialIcon",["root","icon","iconOpen","iconWithOpenIconOpen","openIcon","openIconOpen"]),Eo=["className","icon","open","openIcon"],ho=d=>{const{classes:l,open:g,openIcon:y}=d,k={root:["root"],icon:["icon",g&&"iconOpen",y&&g&&"iconWithOpenIconOpen"],openIcon:["openIcon",g&&"openIconOpen"]};return(0,h.Z)(k,I,l)},go=(0,no.ZP)("span",{name:"MuiSpeedDialIcon",slot:"Root",overridesResolver:(d,l)=>{const{ownerState:g}=d;return[{[`& .${D.icon}`]:l.icon},{[`& .${D.icon}`]:g.open&&l.iconOpen},{[`& .${D.icon}`]:g.open&&g.openIcon&&l.iconWithOpenIconOpen},{[`& .${D.openIcon}`]:l.openIcon},{[`& .${D.openIcon}`]:g.open&&l.openIconOpen},l.root]}})(({theme:d,ownerState:l})=>({height:24,[`& .${D.icon}`]:(0,r.Z)({transition:d.transitions.create(["transform","opacity"],{duration:d.transitions.duration.short})},l.open&&(0,r.Z)({transform:"rotate(45deg)"},l.openIcon&&{opacity:0})),[`& .${D.openIcon}`]:(0,r.Z)({position:"absolute",transition:d.transitions.create(["transform","opacity"],{duration:d.transitions.duration.short}),opacity:0,transform:"rotate(-45deg)"},l.open&&{transform:"rotate(0deg)",opacity:1})})),E=s.forwardRef(function(l,g){const y=(0,N.Z)({props:l,name:"MuiSpeedDialIcon"}),{className:k,icon:io,openIcon:ro}=y,yo=(0,m.Z)(y,Eo),ao=y,W=ho(ao);function co(q,Ro){return s.isValidElement(q)?s.cloneElement(q,{className:Ro}):q}return(0,B.jsxs)(go,(0,r.Z)({className:(0,U.Z)(W.root,k),ref:g,ownerState:ao},yo,{children:[ro?co(ro,W.openIcon):null,io?co(io,W.icon):(0,B.jsx)(mo,{className:W.icon})]}))});E.muiName="SpeedDialIcon";const so=E},6392:(vo,x,e)=>{e.d(x,{Z:()=>Ao});var m=e(617),r=e(8348),s=e(4075),U=e(1970),h=e(8252),no=e(3621),N=e(345),eo=e(1488),B=e(8340),mo=e(4624),Y=e(7174),to=e(6510),I=e(8385);const Io=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"],D={entering:{transform:"none"},entered:{transform:"none"}},ho=s.forwardRef(function(n,i){const c=(0,B.Z)(),Z={enter:c.transitions.duration.enteringScreen,exit:c.transitions.duration.leavingScreen},{addEndListener:S,appear:F=!0,children:P,easing:j,in:L,onEnter:z,onEntered:oo,onEntering:M,onExit:A,onExited:u,onExiting:T,style:H,timeout:K=Z,TransitionComponent:po=mo.ZP}=n,w=(0,m.Z)(n,Io),G=s.useRef(null),Zo=(0,to.Z)(G,P.ref,i),$=a=>p=>{if(a){const C=G.current;p===void 0?a(C):a(C,p)}},xo=$(M),J=$((a,p)=>{(0,Y.n)(a);const C=(0,Y.C)({style:H,timeout:K,easing:j},{mode:"enter"});a.style.webkitTransition=c.transitions.create("transform",C),a.style.transition=c.transitions.create("transform",C),z&&z(a,p)}),Do=$(oo),v=$(T),O=$(a=>{const p=(0,Y.C)({style:H,timeout:K,easing:j},{mode:"exit"});a.style.webkitTransition=c.transitions.create("transform",p),a.style.transition=c.transitions.create("transform",p),A&&A(a)}),Q=$(u),X=a=>{S&&S(G.current,a)};return(0,I.jsx)(po,(0,r.Z)({appear:F,in:L,nodeRef:G,onEnter:J,onEntered:Do,onEntering:xo,onExit:O,onExited:Q,onExiting:v,addEndListener:X,timeout:K},w,{children:(a,p)=>s.cloneElement(P,(0,r.Z)({style:(0,r.Z)({transform:"scale(0)",visibility:a==="exited"&&!L?"hidden":void 0},D[a],H,P.props.style),ref:Zo},p))}))});var go=e(6335),E=e(9390),so=e(8026),d=e(2041);function l(o){return(0,d.Z)("MuiFab",o)}const y=(0,so.Z)("MuiFab",["root","primary","secondary","extended","circular","focusVisible","disabled","colorInherit","sizeSmall","sizeMedium","sizeLarge","info","error","warning","success"]),k=["children","className","color","component","disabled","disableFocusRipple","focusVisibleClassName","size","variant"],io=o=>{const{color:n,variant:i,classes:c,size:Z}=o,S={root:["root",i,`size${(0,E.Z)(Z)}`,n==="inherit"?"colorInherit":n]},F=(0,no.Z)(S,l,c);return(0,r.Z)({},c,F)},ro=(0,N.ZP)(go.Z,{name:"MuiFab",slot:"Root",shouldForwardProp:o=>(0,N.FO)(o)||o==="classes",overridesResolver:(o,n)=>{const{ownerState:i}=o;return[n.root,n[i.variant],n[`size${(0,E.Z)(i.size)}`],i.color==="inherit"&&n.colorInherit,n[(0,E.Z)(i.size)],n[i.color]]}})(({theme:o,ownerState:n})=>{var i,c;return(0,r.Z)({},o.typography.button,{minHeight:36,transition:o.transitions.create(["background-color","box-shadow","border-color"],{duration:o.transitions.duration.short}),borderRadius:"50%",padding:0,minWidth:0,width:56,height:56,zIndex:(o.vars||o).zIndex.fab,boxShadow:(o.vars||o).shadows[6],"&:active":{boxShadow:(o.vars||o).shadows[12]},color:o.vars?o.vars.palette.text.primary:(i=(c=o.palette).getContrastText)==null?void 0:i.call(c,o.palette.grey[300]),backgroundColor:(o.vars||o).palette.grey[300],"&:hover":{backgroundColor:(o.vars||o).palette.grey.A100,"@media (hover: none)":{backgroundColor:(o.vars||o).palette.grey[300]},textDecoration:"none"},[`&.${y.focusVisible}`]:{boxShadow:(o.vars||o).shadows[6]}},n.size==="small"&&{width:40,height:40},n.size==="medium"&&{width:48,height:48},n.variant==="extended"&&{borderRadius:48/2,padding:"0 16px",width:"auto",minHeight:"auto",minWidth:48,height:48},n.variant==="extended"&&n.size==="small"&&{width:"auto",padding:"0 8px",borderRadius:34/2,minWidth:34,height:34},n.variant==="extended"&&n.size==="medium"&&{width:"auto",padding:"0 16px",borderRadius:40/2,minWidth:40,height:40},n.color==="inherit"&&{color:"inherit"})},({theme:o,ownerState:n})=>(0,r.Z)({},n.color!=="inherit"&&n.color!=="default"&&(o.vars||o).palette[n.color]!=null&&{color:(o.vars||o).palette[n.color].contrastText,backgroundColor:(o.vars||o).palette[n.color].main,"&:hover":{backgroundColor:(o.vars||o).palette[n.color].dark,"@media (hover: none)":{backgroundColor:(o.vars||o).palette[n.color].main}}}),({theme:o})=>({[`&.${y.disabled}`]:{color:(o.vars||o).palette.action.disabled,boxShadow:(o.vars||o).shadows[0],backgroundColor:(o.vars||o).palette.action.disabledBackground}})),ao=s.forwardRef(function(n,i){const c=(0,eo.Z)({props:n,name:"MuiFab"}),{children:Z,className:S,color:F="default",component:P="button",disabled:j=!1,disableFocusRipple:L=!1,focusVisibleClassName:z,size:oo="large",variant:M="circular"}=c,A=(0,m.Z)(c,k),u=(0,r.Z)({},c,{color:F,component:P,disabled:j,disableFocusRipple:L,size:oo,variant:M}),T=io(u);return(0,I.jsx)(ro,(0,r.Z)({className:(0,h.Z)(T.root,S),component:P,disabled:j,focusRipple:!L,focusVisibleClassName:(0,h.Z)(T.focusVisible,z),ownerState:u,ref:i},A,{classes:T,children:Z}))});var W=e(9518),co=e(1531);function q(o){return(0,d.Z)("MuiSpeedDial",o)}const lo=(0,so.Z)("MuiSpeedDial",["root","fab","directionUp","directionDown","directionLeft","directionRight","actions","actionsClosed"]),zo=["ref"],Mo=["ariaLabel","FabProps","children","className","direction","hidden","icon","onBlur","onClose","onFocus","onKeyDown","onMouseEnter","onMouseLeave","onOpen","open","openIcon","TransitionComponent","transitionDuration","TransitionProps"],To=["ref"],$o=o=>{const{classes:n,open:i,direction:c}=o,Z={root:["root",`direction${(0,E.Z)(c)}`],fab:["fab"],actions:["actions",!i&&"actionsClosed"]};return(0,no.Z)(Z,q,n)};function _(o){if(o==="up"||o==="down")return"vertical";if(o==="right"||o==="left")return"horizontal"}function Oo(o,n,i){return o<n?n:o>i?i:o}const R=32,uo=16,No=(0,N.ZP)("div",{name:"MuiSpeedDial",slot:"Root",overridesResolver:(o,n)=>{const{ownerState:i}=o;return[n.root,n[`direction${(0,E.Z)(i.direction)}`]]}})(({theme:o,ownerState:n})=>(0,r.Z)({zIndex:(o.vars||o).zIndex.speedDial,display:"flex",alignItems:"center",pointerEvents:"none"},n.direction==="up"&&{flexDirection:"column-reverse",[`& .${lo.actions}`]:{flexDirection:"column-reverse",marginBottom:-R,paddingBottom:uo+R}},n.direction==="down"&&{flexDirection:"column",[`& .${lo.actions}`]:{flexDirection:"column",marginTop:-R,paddingTop:uo+R}},n.direction==="left"&&{flexDirection:"row-reverse",[`& .${lo.actions}`]:{flexDirection:"row-reverse",marginRight:-R,paddingRight:uo+R}},n.direction==="right"&&{flexDirection:"row",[`& .${lo.actions}`]:{flexDirection:"row",marginLeft:-R,paddingLeft:uo+R}})),jo=(0,N.ZP)(ao,{name:"MuiSpeedDial",slot:"Fab",overridesResolver:(o,n)=>n.fab})(()=>({pointerEvents:"auto"})),Lo=(0,N.ZP)("div",{name:"MuiSpeedDial",slot:"Actions",overridesResolver:(o,n)=>{const{ownerState:i}=o;return[n.actions,!i.open&&n.actionsClosed]}})(({ownerState:o})=>(0,r.Z)({display:"flex",pointerEvents:"auto"},!o.open&&{transition:"top 0s linear 0.2s",pointerEvents:"none"})),Ao=s.forwardRef(function(n,i){const c=(0,eo.Z)({props:n,name:"MuiSpeedDial"}),Z=(0,B.Z)(),S={enter:Z.transitions.duration.enteringScreen,exit:Z.transitions.duration.leavingScreen},{ariaLabel:F,FabProps:{ref:P}={},children:j,className:L,direction:z="up",hidden:oo=!1,icon:M,onBlur:A,onClose:u,onFocus:T,onKeyDown:H,onMouseEnter:K,onMouseLeave:po,onOpen:w,open:G,TransitionComponent:Zo=ho,transitionDuration:$=S,TransitionProps:xo}=c,J=(0,m.Z)(c.FabProps,zo),Do=(0,m.Z)(c,Mo),[v,O]=(0,co.Z)({controlled:G,default:!1,name:"SpeedDial",state:"open"}),Q=(0,r.Z)({},c,{open:v,direction:z}),X=$o(Q),a=s.useRef();s.useEffect(()=>()=>{clearTimeout(a.current)},[]);const p=s.useRef(0),C=s.useRef(),V=s.useRef([]);V.current=[V.current[0]];const Vo=s.useCallback(t=>{V.current[0]=t},[]),Uo=(0,to.Z)(P,Vo),Bo=(t,f)=>b=>{V.current[t+1]=b,f&&f(b)},Wo=t=>{H&&H(t);const f=t.key.replace("Arrow","").toLowerCase(),{current:b=f}=C;if(t.key==="Escape"){O(!1),V.current[0].focus(),u&&u(t,"escapeKeyDown");return}if(_(f)===_(b)&&_(f)!==void 0){t.preventDefault();const bo=f===b?1:-1,fo=Oo(p.current+bo,0,V.current.length-1);V.current[fo].focus(),p.current=fo,C.current=b}};s.useEffect(()=>{v||(p.current=0,C.current=void 0)},[v]);const So=t=>{t.type==="mouseleave"&&po&&po(t),t.type==="blur"&&A&&A(t),clearTimeout(a.current),t.type==="blur"?a.current=setTimeout(()=>{O(!1),u&&u(t,"blur")}):(O(!1),u&&u(t,"mouseLeave"))},Ho=t=>{J.onClick&&J.onClick(t),clearTimeout(a.current),v?(O(!1),u&&u(t,"toggle")):(O(!0),w&&w(t,"toggle"))},Fo=t=>{t.type==="mouseenter"&&K&&K(t),t.type==="focus"&&T&&T(t),clearTimeout(a.current),v||(a.current=setTimeout(()=>{O(!0),w&&w(t,{focus:"focus",mouseenter:"mouseEnter"}[t.type])}))},Co=F.replace(/^[^a-z]+|[^\w:.-]+/gi,""),Po=s.Children.toArray(j).filter(t=>s.isValidElement(t)),Ko=Po.map((t,f)=>{const b=t.props,{FabProps:{ref:bo}={},tooltipPlacement:fo}=b,wo=(0,m.Z)(b.FabProps,To),Go=fo||(_(z)==="vertical"?"left":"top");return s.cloneElement(t,{FabProps:(0,r.Z)({},wo,{ref:Bo(f,bo)}),delay:30*(v?f:Po.length-f),open:v,tooltipPlacement:Go,id:`${Co}-action-${f}`})});return(0,I.jsxs)(No,(0,r.Z)({className:(0,h.Z)(X.root,L),ref:i,role:"presentation",onKeyDown:Wo,onBlur:So,onFocus:Fo,onMouseEnter:Fo,onMouseLeave:So,ownerState:Q},Do,{children:[(0,I.jsx)(Zo,(0,r.Z)({in:!oo,timeout:$,unmountOnExit:!0},xo,{children:(0,I.jsx)(jo,(0,r.Z)({color:"primary","aria-label":F,"aria-haspopup":"true","aria-expanded":v,"aria-controls":`${Co}-actions`},J,{onClick:Ho,className:(0,h.Z)(X.fab,J.className),ref:Uo,ownerState:Q,children:s.isValidElement(M)&&(0,W.Z)(M,["SpeedDialIcon"])?s.cloneElement(M,{open:v}):M}))})),(0,I.jsx)(Lo,{id:`${Co}-actions`,role:"menu","aria-orientation":_(z),className:(0,h.Z)(X.actions,!v&&X.actionsClosed),ownerState:Q,children:Ko})]}))})}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxDQUNKLENBQUMsQ0FBQyxDQUNKLENBQUMsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLXV0aWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQG11aStpY29ucy1tYXRlcmlhbEA1LjE0LjE4X0BtdWkrbWF0ZXJpYWxANS4xNC4xX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQG11aS9pY29ucy1tYXRlcmlhbC9BZGQuanMiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdXRpbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXVpK2ljb25zLW1hdGVyaWFsQDUuMTQuMThfQG11aSttYXRlcmlhbEA1LjE0LjFfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AbXVpL2ljb25zLW1hdGVyaWFsL1NhdmUuanMiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdXRpbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXVpK21hdGVyaWFsQDUuMTQuMV9AZW1vdGlvbityZWFjdEAxMS4xMS4xX0BlbW90aW9uK3N0eWxlZEAxMS4xMS4wX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL2ludGVybmFsL3N2Zy1pY29ucy9BZGQuanMiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdXRpbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXVpK21hdGVyaWFsQDUuMTQuMV9AZW1vdGlvbityZWFjdEAxMS4xMS4xX0BlbW90aW9uK3N0eWxlZEAxMS4xMS4wX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1NwZWVkRGlhbEljb24vc3BlZWREaWFsSWNvbkNsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdXRpbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXVpK21hdGVyaWFsQDUuMTQuMV9AZW1vdGlvbityZWFjdEAxMS4xMS4xX0BlbW90aW9uK3N0eWxlZEAxMS4xMS4wX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1NwZWVkRGlhbEljb24vU3BlZWREaWFsSWNvbi5qcyIsIndlYnBhY2s6Ly9mcm9udGVuZC11dGlsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BtdWkrbWF0ZXJpYWxANS4xNC4xX0BlbW90aW9uK3JlYWN0QDExLjExLjFfQGVtb3Rpb24rc3R5bGVkQDExLjExLjBfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvWm9vbS9ab29tLmpzIiwid2VicGFjazovL2Zyb250ZW5kLXV0aWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQG11aSttYXRlcmlhbEA1LjE0LjFfQGVtb3Rpb24rcmVhY3RAMTEuMTEuMV9AZW1vdGlvbitzdHlsZWRAMTEuMTEuMF9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQG11aS9tYXRlcmlhbC9GYWIvZmFiQ2xhc3Nlcy5qcyIsIndlYnBhY2s6Ly9mcm9udGVuZC11dGlsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BtdWkrbWF0ZXJpYWxANS4xNC4xX0BlbW90aW9uK3JlYWN0QDExLjExLjFfQGVtb3Rpb24rc3R5bGVkQDExLjExLjBfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvRmFiL0ZhYi5qcyIsIndlYnBhY2s6Ly9mcm9udGVuZC11dGlsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BtdWkrbWF0ZXJpYWxANS4xNC4xX0BlbW90aW9uK3JlYWN0QDExLjExLjFfQGVtb3Rpb24rc3R5bGVkQDExLjExLjBfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BtdWkvbWF0ZXJpYWwvU3BlZWREaWFsL3NwZWVkRGlhbENsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vZnJvbnRlbmQtdXRpbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbXVpK21hdGVyaWFsQDUuMTQuMV9AZW1vdGlvbityZWFjdEAxMS4xMS4xX0BlbW90aW9uK3N0eWxlZEAxMS4xMS4wX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9AbXVpL21hdGVyaWFsL1NwZWVkRGlhbC9TcGVlZERpYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cInVzZSBjbGllbnRcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9jcmVhdGVTdmdJY29uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlscy9jcmVhdGVTdmdJY29uXCIpKTtcbnZhciBfanN4UnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbnZhciBfZGVmYXVsdCA9ICgwLCBfY3JlYXRlU3ZnSWNvbi5kZWZhdWx0KSggLyojX19QVVJFX18qLygwLCBfanN4UnVudGltZS5qc3gpKFwicGF0aFwiLCB7XG4gIGQ6IFwiTTE5IDEzaC02djZoLTJ2LTZINXYtMmg2VjVoMnY2aDZ2MnpcIlxufSksICdBZGQnKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXCJ1c2UgY2xpZW50XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfY3JlYXRlU3ZnSWNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXRpbHMvY3JlYXRlU3ZnSWNvblwiKSk7XG52YXIgX2pzeFJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG52YXIgX2RlZmF1bHQgPSAoMCwgX2NyZWF0ZVN2Z0ljb24uZGVmYXVsdCkoIC8qI19fUFVSRV9fKi8oMCwgX2pzeFJ1bnRpbWUuanN4KShcInBhdGhcIiwge1xuICBkOiBcIk0xNyAzSDVjLTEuMTEgMC0yIC45LTIgMnYxNGMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY3bC00LTR6bS01IDE2Yy0xLjY2IDAtMy0xLjM0LTMtM3MxLjM0LTMgMy0zIDMgMS4zNCAzIDMtMS4zNCAzLTMgM3ptMy0xMEg1VjVoMTB2NHpcIlxufSksICdTYXZlJyk7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCIndXNlIGNsaWVudCc7XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZVN2Z0ljb24gfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN2Z0ljb24oIC8qI19fUFVSRV9fKi9fanN4KFwicGF0aFwiLCB7XG4gIGQ6IFwiTTE5IDEzaC02djZoLTJ2LTZINXYtMmg2VjVoMnY2aDZ2MnpcIlxufSksICdBZGQnKTsiLCJpbXBvcnQgeyB1bnN0YWJsZV9nZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIGFzIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBnZW5lcmF0ZVV0aWxpdHlDbGFzcyBmcm9tICcuLi9nZW5lcmF0ZVV0aWxpdHlDbGFzcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3BlZWREaWFsSWNvblV0aWxpdHlDbGFzcyhzbG90KSB7XG4gIHJldHVybiBnZW5lcmF0ZVV0aWxpdHlDbGFzcygnTXVpU3BlZWREaWFsSWNvbicsIHNsb3QpO1xufVxuY29uc3Qgc3BlZWREaWFsSWNvbkNsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlTcGVlZERpYWxJY29uJywgWydyb290JywgJ2ljb24nLCAnaWNvbk9wZW4nLCAnaWNvbldpdGhPcGVuSWNvbk9wZW4nLCAnb3Blbkljb24nLCAnb3Blbkljb25PcGVuJ10pO1xuZXhwb3J0IGRlZmF1bHQgc3BlZWREaWFsSWNvbkNsYXNzZXM7IiwiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiaWNvblwiLCBcIm9wZW5cIiwgXCJvcGVuSWNvblwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgQWRkSWNvbiBmcm9tICcuLi9pbnRlcm5hbC9zdmctaWNvbnMvQWRkJztcbmltcG9ydCBzcGVlZERpYWxJY29uQ2xhc3NlcywgeyBnZXRTcGVlZERpYWxJY29uVXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9zcGVlZERpYWxJY29uQ2xhc3Nlcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNsYXNzZXMsXG4gICAgb3BlbixcbiAgICBvcGVuSWNvblxuICB9ID0gb3duZXJTdGF0ZTtcbiAgY29uc3Qgc2xvdHMgPSB7XG4gICAgcm9vdDogWydyb290J10sXG4gICAgaWNvbjogWydpY29uJywgb3BlbiAmJiAnaWNvbk9wZW4nLCBvcGVuSWNvbiAmJiBvcGVuICYmICdpY29uV2l0aE9wZW5JY29uT3BlbiddLFxuICAgIG9wZW5JY29uOiBbJ29wZW5JY29uJywgb3BlbiAmJiAnb3Blbkljb25PcGVuJ11cbiAgfTtcbiAgcmV0dXJuIGNvbXBvc2VDbGFzc2VzKHNsb3RzLCBnZXRTcGVlZERpYWxJY29uVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5jb25zdCBTcGVlZERpYWxJY29uUm9vdCA9IHN0eWxlZCgnc3BhbicsIHtcbiAgbmFtZTogJ011aVNwZWVkRGlhbEljb24nLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFt7XG4gICAgICBbYCYgLiR7c3BlZWREaWFsSWNvbkNsYXNzZXMuaWNvbn1gXTogc3R5bGVzLmljb25cbiAgICB9LCB7XG4gICAgICBbYCYgLiR7c3BlZWREaWFsSWNvbkNsYXNzZXMuaWNvbn1gXTogb3duZXJTdGF0ZS5vcGVuICYmIHN0eWxlcy5pY29uT3BlblxuICAgIH0sIHtcbiAgICAgIFtgJiAuJHtzcGVlZERpYWxJY29uQ2xhc3Nlcy5pY29ufWBdOiBvd25lclN0YXRlLm9wZW4gJiYgb3duZXJTdGF0ZS5vcGVuSWNvbiAmJiBzdHlsZXMuaWNvbldpdGhPcGVuSWNvbk9wZW5cbiAgICB9LCB7XG4gICAgICBbYCYgLiR7c3BlZWREaWFsSWNvbkNsYXNzZXMub3Blbkljb259YF06IHN0eWxlcy5vcGVuSWNvblxuICAgIH0sIHtcbiAgICAgIFtgJiAuJHtzcGVlZERpYWxJY29uQ2xhc3Nlcy5vcGVuSWNvbn1gXTogb3duZXJTdGF0ZS5vcGVuICYmIHN0eWxlcy5vcGVuSWNvbk9wZW5cbiAgICB9LCBzdHlsZXMucm9vdF07XG4gIH1cbn0pKCh7XG4gIHRoZW1lLFxuICBvd25lclN0YXRlXG59KSA9PiAoe1xuICBoZWlnaHQ6IDI0LFxuICBbYCYgLiR7c3BlZWREaWFsSWNvbkNsYXNzZXMuaWNvbn1gXTogX2V4dGVuZHMoe1xuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZShbJ3RyYW5zZm9ybScsICdvcGFjaXR5J10sIHtcbiAgICAgIGR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydFxuICAgIH0pXG4gIH0sIG93bmVyU3RhdGUub3BlbiAmJiBfZXh0ZW5kcyh7XG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDQ1ZGVnKSdcbiAgfSwgb3duZXJTdGF0ZS5vcGVuSWNvbiAmJiB7XG4gICAgb3BhY2l0eTogMFxuICB9KSksXG4gIFtgJiAuJHtzcGVlZERpYWxJY29uQ2xhc3Nlcy5vcGVuSWNvbn1gXTogX2V4dGVuZHMoe1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZShbJ3RyYW5zZm9ybScsICdvcGFjaXR5J10sIHtcbiAgICAgIGR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5zaG9ydFxuICAgIH0pLFxuICAgIG9wYWNpdHk6IDAsXG4gICAgdHJhbnNmb3JtOiAncm90YXRlKC00NWRlZyknXG4gIH0sIG93bmVyU3RhdGUub3BlbiAmJiB7XG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDBkZWcpJyxcbiAgICBvcGFjaXR5OiAxXG4gIH0pXG59KSk7XG5jb25zdCBTcGVlZERpYWxJY29uID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gU3BlZWREaWFsSWNvbihpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpU3BlZWREaWFsSWNvbidcbiAgfSk7XG4gIGNvbnN0IHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGljb246IGljb25Qcm9wLFxuICAgICAgb3Blbkljb246IG9wZW5JY29uUHJvcFxuICAgIH0gPSBwcm9wcyxcbiAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuICBjb25zdCBvd25lclN0YXRlID0gcHJvcHM7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgZnVuY3Rpb24gZm9ybWF0SWNvbihpY29uLCBuZXdDbGFzc05hbWUpIHtcbiAgICBpZiAoIC8qI19fUFVSRV9fKi9SZWFjdC5pc1ZhbGlkRWxlbWVudChpY29uKSkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoaWNvbiwge1xuICAgICAgICBjbGFzc05hbWU6IG5ld0NsYXNzTmFtZVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBpY29uO1xuICB9XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoU3BlZWREaWFsSWNvblJvb3QsIF9leHRlbmRzKHtcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgIHJlZjogcmVmLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogW29wZW5JY29uUHJvcCA/IGZvcm1hdEljb24ob3Blbkljb25Qcm9wLCBjbGFzc2VzLm9wZW5JY29uKSA6IG51bGwsIGljb25Qcm9wID8gZm9ybWF0SWNvbihpY29uUHJvcCwgY2xhc3Nlcy5pY29uKSA6IC8qI19fUFVSRV9fKi9fanN4KEFkZEljb24sIHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3Nlcy5pY29uXG4gICAgfSldXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3BlZWREaWFsSWNvbi5wcm9wVHlwZXMgLyogcmVtb3ZlLXByb3B0eXBlcyAqLyA9IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvKipcbiAgICogVGhlIGljb24gdG8gZGlzcGxheS5cbiAgICovXG4gIGljb246IFByb3BUeXBlcy5ub2RlLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIFRoZSBpY29uIHRvIGRpc3BsYXkgaW4gdGhlIFNwZWVkRGlhbCBGbG9hdGluZyBBY3Rpb24gQnV0dG9uIHdoZW4gdGhlIFNwZWVkRGlhbCBpcyBvcGVuLlxuICAgKi9cbiAgb3Blbkljb246IFByb3BUeXBlcy5ub2RlLFxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG59IDogdm9pZCAwO1xuU3BlZWREaWFsSWNvbi5tdWlOYW1lID0gJ1NwZWVkRGlhbEljb24nO1xuZXhwb3J0IGRlZmF1bHQgU3BlZWREaWFsSWNvbjsiLCIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJhZGRFbmRMaXN0ZW5lclwiLCBcImFwcGVhclwiLCBcImNoaWxkcmVuXCIsIFwiZWFzaW5nXCIsIFwiaW5cIiwgXCJvbkVudGVyXCIsIFwib25FbnRlcmVkXCIsIFwib25FbnRlcmluZ1wiLCBcIm9uRXhpdFwiLCBcIm9uRXhpdGVkXCIsIFwib25FeGl0aW5nXCIsIFwic3R5bGVcIiwgXCJ0aW1lb3V0XCIsIFwiVHJhbnNpdGlvbkNvbXBvbmVudFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XG5pbXBvcnQgeyBlbGVtZW50QWNjZXB0aW5nUmVmIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lJztcbmltcG9ydCB7IHJlZmxvdywgZ2V0VHJhbnNpdGlvblByb3BzIH0gZnJvbSAnLi4vdHJhbnNpdGlvbnMvdXRpbHMnO1xuaW1wb3J0IHVzZUZvcmtSZWYgZnJvbSAnLi4vdXRpbHMvdXNlRm9ya1JlZic7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3Qgc3R5bGVzID0ge1xuICBlbnRlcmluZzoge1xuICAgIHRyYW5zZm9ybTogJ25vbmUnXG4gIH0sXG4gIGVudGVyZWQ6IHtcbiAgICB0cmFuc2Zvcm06ICdub25lJ1xuICB9XG59O1xuXG4vKipcbiAqIFRoZSBab29tIHRyYW5zaXRpb24gY2FuIGJlIHVzZWQgZm9yIHRoZSBmbG9hdGluZyB2YXJpYW50IG9mIHRoZVxuICogW0J1dHRvbl0oL21hdGVyaWFsLXVpL3JlYWN0LWJ1dHRvbi8jZmxvYXRpbmctYWN0aW9uLWJ1dHRvbnMpIGNvbXBvbmVudC5cbiAqIEl0IHVzZXMgW3JlYWN0LXRyYW5zaXRpb24tZ3JvdXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXApIGludGVybmFsbHkuXG4gKi9cbmNvbnN0IFpvb20gPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBab29tKHByb3BzLCByZWYpIHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBkZWZhdWx0VGltZW91dCA9IHtcbiAgICBlbnRlcjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uZW50ZXJpbmdTY3JlZW4sXG4gICAgZXhpdDogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24ubGVhdmluZ1NjcmVlblxuICB9O1xuICBjb25zdCB7XG4gICAgICBhZGRFbmRMaXN0ZW5lcixcbiAgICAgIGFwcGVhciA9IHRydWUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGVhc2luZyxcbiAgICAgIGluOiBpblByb3AsXG4gICAgICBvbkVudGVyLFxuICAgICAgb25FbnRlcmVkLFxuICAgICAgb25FbnRlcmluZyxcbiAgICAgIG9uRXhpdCxcbiAgICAgIG9uRXhpdGVkLFxuICAgICAgb25FeGl0aW5nLFxuICAgICAgc3R5bGUsXG4gICAgICB0aW1lb3V0ID0gZGVmYXVsdFRpbWVvdXQsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgICAgVHJhbnNpdGlvbkNvbXBvbmVudCA9IFRyYW5zaXRpb25cbiAgICB9ID0gcHJvcHMsXG4gICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcbiAgY29uc3Qgbm9kZVJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgY29uc3QgaGFuZGxlUmVmID0gdXNlRm9ya1JlZihub2RlUmVmLCBjaGlsZHJlbi5yZWYsIHJlZik7XG4gIGNvbnN0IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sgPSBjYWxsYmFjayA9PiBtYXliZUlzQXBwZWFyaW5nID0+IHtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBub2RlUmVmLmN1cnJlbnQ7XG5cbiAgICAgIC8vIG9uRW50ZXJYeHggYW5kIG9uRXhpdFh4eCBjYWxsYmFja3MgaGF2ZSBhIGRpZmZlcmVudCBhcmd1bWVudHMubGVuZ3RoIHZhbHVlLlxuICAgICAgaWYgKG1heWJlSXNBcHBlYXJpbmcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjYWxsYmFjayhub2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKG5vZGUsIG1heWJlSXNBcHBlYXJpbmcpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3QgaGFuZGxlRW50ZXJpbmcgPSBub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrKG9uRW50ZXJpbmcpO1xuICBjb25zdCBoYW5kbGVFbnRlciA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2soKG5vZGUsIGlzQXBwZWFyaW5nKSA9PiB7XG4gICAgcmVmbG93KG5vZGUpOyAvLyBTbyB0aGUgYW5pbWF0aW9uIGFsd2F5cyBzdGFydCBmcm9tIHRoZSBzdGFydC5cblxuICAgIGNvbnN0IHRyYW5zaXRpb25Qcm9wcyA9IGdldFRyYW5zaXRpb25Qcm9wcyh7XG4gICAgICBzdHlsZSxcbiAgICAgIHRpbWVvdXQsXG4gICAgICBlYXNpbmdcbiAgICB9LCB7XG4gICAgICBtb2RlOiAnZW50ZXInXG4gICAgfSk7XG4gICAgbm9kZS5zdHlsZS53ZWJraXRUcmFuc2l0aW9uID0gdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCd0cmFuc2Zvcm0nLCB0cmFuc2l0aW9uUHJvcHMpO1xuICAgIG5vZGUuc3R5bGUudHJhbnNpdGlvbiA9IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgndHJhbnNmb3JtJywgdHJhbnNpdGlvblByb3BzKTtcbiAgICBpZiAob25FbnRlcikge1xuICAgICAgb25FbnRlcihub2RlLCBpc0FwcGVhcmluZyk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgaGFuZGxlRW50ZXJlZCA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sob25FbnRlcmVkKTtcbiAgY29uc3QgaGFuZGxlRXhpdGluZyA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sob25FeGl0aW5nKTtcbiAgY29uc3QgaGFuZGxlRXhpdCA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sobm9kZSA9PiB7XG4gICAgY29uc3QgdHJhbnNpdGlvblByb3BzID0gZ2V0VHJhbnNpdGlvblByb3BzKHtcbiAgICAgIHN0eWxlLFxuICAgICAgdGltZW91dCxcbiAgICAgIGVhc2luZ1xuICAgIH0sIHtcbiAgICAgIG1vZGU6ICdleGl0J1xuICAgIH0pO1xuICAgIG5vZGUuc3R5bGUud2Via2l0VHJhbnNpdGlvbiA9IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgndHJhbnNmb3JtJywgdHJhbnNpdGlvblByb3BzKTtcbiAgICBub2RlLnN0eWxlLnRyYW5zaXRpb24gPSB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ3RyYW5zZm9ybScsIHRyYW5zaXRpb25Qcm9wcyk7XG4gICAgaWYgKG9uRXhpdCkge1xuICAgICAgb25FeGl0KG5vZGUpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGhhbmRsZUV4aXRlZCA9IG5vcm1hbGl6ZWRUcmFuc2l0aW9uQ2FsbGJhY2sob25FeGl0ZWQpO1xuICBjb25zdCBoYW5kbGVBZGRFbmRMaXN0ZW5lciA9IG5leHQgPT4ge1xuICAgIGlmIChhZGRFbmRMaXN0ZW5lcikge1xuICAgICAgLy8gT2xkIGNhbGwgc2lnbmF0dXJlIGJlZm9yZSBgcmVhY3QtdHJhbnNpdGlvbi1ncm91cGAgaW1wbGVtZW50ZWQgYG5vZGVSZWZgXG4gICAgICBhZGRFbmRMaXN0ZW5lcihub2RlUmVmLmN1cnJlbnQsIG5leHQpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFRyYW5zaXRpb25Db21wb25lbnQsIF9leHRlbmRzKHtcbiAgICBhcHBlYXI6IGFwcGVhcixcbiAgICBpbjogaW5Qcm9wLFxuICAgIG5vZGVSZWY6IG5vZGVSZWYsXG4gICAgb25FbnRlcjogaGFuZGxlRW50ZXIsXG4gICAgb25FbnRlcmVkOiBoYW5kbGVFbnRlcmVkLFxuICAgIG9uRW50ZXJpbmc6IGhhbmRsZUVudGVyaW5nLFxuICAgIG9uRXhpdDogaGFuZGxlRXhpdCxcbiAgICBvbkV4aXRlZDogaGFuZGxlRXhpdGVkLFxuICAgIG9uRXhpdGluZzogaGFuZGxlRXhpdGluZyxcbiAgICBhZGRFbmRMaXN0ZW5lcjogaGFuZGxlQWRkRW5kTGlzdGVuZXIsXG4gICAgdGltZW91dDogdGltZW91dFxuICB9LCBvdGhlciwge1xuICAgIGNoaWxkcmVuOiAoc3RhdGUsIGNoaWxkUHJvcHMpID0+IHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCBfZXh0ZW5kcyh7XG4gICAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMCknLFxuICAgICAgICAgIHZpc2liaWxpdHk6IHN0YXRlID09PSAnZXhpdGVkJyAmJiAhaW5Qcm9wID8gJ2hpZGRlbicgOiB1bmRlZmluZWRcbiAgICAgICAgfSwgc3R5bGVzW3N0YXRlXSwgc3R5bGUsIGNoaWxkcmVuLnByb3BzLnN0eWxlKSxcbiAgICAgICAgcmVmOiBoYW5kbGVSZWZcbiAgICAgIH0sIGNoaWxkUHJvcHMpKTtcbiAgICB9XG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gWm9vbS5wcm9wVHlwZXMgLyogcmVtb3ZlLXByb3B0eXBlcyAqLyA9IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBBZGQgYSBjdXN0b20gdHJhbnNpdGlvbiBlbmQgdHJpZ2dlci4gQ2FsbGVkIHdpdGggdGhlIHRyYW5zaXRpb25pbmcgRE9NXG4gICAqIG5vZGUgYW5kIGEgZG9uZSBjYWxsYmFjay4gQWxsb3dzIGZvciBtb3JlIGZpbmUgZ3JhaW5lZCB0cmFuc2l0aW9uIGVuZFxuICAgKiBsb2dpYy4gTm90ZTogVGltZW91dHMgYXJlIHN0aWxsIHVzZWQgYXMgYSBmYWxsYmFjayBpZiBwcm92aWRlZC5cbiAgICovXG4gIGFkZEVuZExpc3RlbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIFBlcmZvcm0gdGhlIGVudGVyIHRyYW5zaXRpb24gd2hlbiBpdCBmaXJzdCBtb3VudHMgaWYgYGluYCBpcyBhbHNvIGB0cnVlYC5cbiAgICogU2V0IHRoaXMgdG8gYGZhbHNlYCB0byBkaXNhYmxlIHRoaXMgYmVoYXZpb3IuXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIGFwcGVhcjogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBBIHNpbmdsZSBjaGlsZCBjb250ZW50IGVsZW1lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogZWxlbWVudEFjY2VwdGluZ1JlZi5pc1JlcXVpcmVkLFxuICAvKipcbiAgICogVGhlIHRyYW5zaXRpb24gdGltaW5nIGZ1bmN0aW9uLlxuICAgKiBZb3UgbWF5IHNwZWNpZnkgYSBzaW5nbGUgZWFzaW5nIG9yIGEgb2JqZWN0IGNvbnRhaW5pbmcgZW50ZXIgYW5kIGV4aXQgdmFsdWVzLlxuICAgKi9cbiAgZWFzaW5nOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGVudGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5zdHJpbmdcbiAgfSksIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCB3aWxsIHRyYW5zaXRpb24gaW4uXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkVudGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRW50ZXJlZDogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkVudGVyaW5nOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uRXhpdDogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkV4aXRpbmc6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gZm9yIHRoZSB0cmFuc2l0aW9uLCBpbiBtaWxsaXNlY29uZHMuXG4gICAqIFlvdSBtYXkgc3BlY2lmeSBhIHNpbmdsZSB0aW1lb3V0IGZvciBhbGwgdHJhbnNpdGlvbnMsIG9yIGluZGl2aWR1YWxseSB3aXRoIGFuIG9iamVjdC5cbiAgICogQGRlZmF1bHQge1xuICAgKiAgIGVudGVyOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5lbnRlcmluZ1NjcmVlbixcbiAgICogICBleGl0OiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5sZWF2aW5nU2NyZWVuLFxuICAgKiB9XG4gICAqL1xuICB0aW1lb3V0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGFwcGVhcjogUHJvcFR5cGVzLm51bWJlcixcbiAgICBlbnRlcjogUHJvcFR5cGVzLm51bWJlcixcbiAgICBleGl0OiBQcm9wVHlwZXMubnVtYmVyXG4gIH0pXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCBab29tOyIsImltcG9ydCB7IHVuc3RhYmxlX2dlbmVyYXRlVXRpbGl0eUNsYXNzZXMgYXMgZ2VuZXJhdGVVdGlsaXR5Q2xhc3NlcyB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuaW1wb3J0IGdlbmVyYXRlVXRpbGl0eUNsYXNzIGZyb20gJy4uL2dlbmVyYXRlVXRpbGl0eUNsYXNzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRGYWJVdGlsaXR5Q2xhc3Moc2xvdCkge1xuICByZXR1cm4gZ2VuZXJhdGVVdGlsaXR5Q2xhc3MoJ011aUZhYicsIHNsb3QpO1xufVxuY29uc3QgZmFiQ2xhc3NlcyA9IGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMoJ011aUZhYicsIFsncm9vdCcsICdwcmltYXJ5JywgJ3NlY29uZGFyeScsICdleHRlbmRlZCcsICdjaXJjdWxhcicsICdmb2N1c1Zpc2libGUnLCAnZGlzYWJsZWQnLCAnY29sb3JJbmhlcml0JywgJ3NpemVTbWFsbCcsICdzaXplTWVkaXVtJywgJ3NpemVMYXJnZScsICdpbmZvJywgJ2Vycm9yJywgJ3dhcm5pbmcnLCAnc3VjY2VzcyddKTtcbmV4cG9ydCBkZWZhdWx0IGZhYkNsYXNzZXM7IiwiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJjb2xvclwiLCBcImNvbXBvbmVudFwiLCBcImRpc2FibGVkXCIsIFwiZGlzYWJsZUZvY3VzUmlwcGxlXCIsIFwiZm9jdXNWaXNpYmxlQ2xhc3NOYW1lXCIsIFwic2l6ZVwiLCBcInZhcmlhbnRcIl07XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyBhcyBjb21wb3NlQ2xhc3NlcyB9IGZyb20gJ0BtdWkvYmFzZSc7XG5pbXBvcnQgQnV0dG9uQmFzZSBmcm9tICcuLi9CdXR0b25CYXNlJztcbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJy4uL3V0aWxzL2NhcGl0YWxpemUnO1xuaW1wb3J0IHVzZVRoZW1lUHJvcHMgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lUHJvcHMnO1xuaW1wb3J0IGZhYkNsYXNzZXMsIHsgZ2V0RmFiVXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9mYWJDbGFzc2VzJztcbmltcG9ydCBzdHlsZWQsIHsgcm9vdFNob3VsZEZvcndhcmRQcm9wIH0gZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgdXNlVXRpbGl0eUNsYXNzZXMgPSBvd25lclN0YXRlID0+IHtcbiAgY29uc3Qge1xuICAgIGNvbG9yLFxuICAgIHZhcmlhbnQsXG4gICAgY2xhc3NlcyxcbiAgICBzaXplXG4gIH0gPSBvd25lclN0YXRlO1xuICBjb25zdCBzbG90cyA9IHtcbiAgICByb290OiBbJ3Jvb3QnLCB2YXJpYW50LCBgc2l6ZSR7Y2FwaXRhbGl6ZShzaXplKX1gLCBjb2xvciA9PT0gJ2luaGVyaXQnID8gJ2NvbG9ySW5oZXJpdCcgOiBjb2xvcl1cbiAgfTtcbiAgY29uc3QgY29tcG9zZWRDbGFzc2VzID0gY29tcG9zZUNsYXNzZXMoc2xvdHMsIGdldEZhYlV0aWxpdHlDbGFzcywgY2xhc3Nlcyk7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgY2xhc3NlcywgY29tcG9zZWRDbGFzc2VzKTtcbn07XG5jb25zdCBGYWJSb290ID0gc3R5bGVkKEJ1dHRvbkJhc2UsIHtcbiAgbmFtZTogJ011aUZhYicsXG4gIHNsb3Q6ICdSb290JyxcbiAgc2hvdWxkRm9yd2FyZFByb3A6IHByb3AgPT4gcm9vdFNob3VsZEZvcndhcmRQcm9wKHByb3ApIHx8IHByb3AgPT09ICdjbGFzc2VzJyxcbiAgb3ZlcnJpZGVzUmVzb2x2ZXI6IChwcm9wcywgc3R5bGVzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgb3duZXJTdGF0ZVxuICAgIH0gPSBwcm9wcztcbiAgICByZXR1cm4gW3N0eWxlcy5yb290LCBzdHlsZXNbb3duZXJTdGF0ZS52YXJpYW50XSwgc3R5bGVzW2BzaXplJHtjYXBpdGFsaXplKG93bmVyU3RhdGUuc2l6ZSl9YF0sIG93bmVyU3RhdGUuY29sb3IgPT09ICdpbmhlcml0JyAmJiBzdHlsZXMuY29sb3JJbmhlcml0LCBzdHlsZXNbY2FwaXRhbGl6ZShvd25lclN0YXRlLnNpemUpXSwgc3R5bGVzW293bmVyU3RhdGUuY29sb3JdXTtcbiAgfVxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IHtcbiAgdmFyIF90aGVtZSRwYWxldHRlJGdldENvbiwgX3RoZW1lJHBhbGV0dGU7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgdGhlbWUudHlwb2dyYXBoeS5idXR0b24sIHtcbiAgICBtaW5IZWlnaHQ6IDM2LFxuICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZShbJ2JhY2tncm91bmQtY29sb3InLCAnYm94LXNoYWRvdycsICdib3JkZXItY29sb3InXSwge1xuICAgICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0XG4gICAgfSksXG4gICAgYm9yZGVyUmFkaXVzOiAnNTAlJyxcbiAgICBwYWRkaW5nOiAwLFxuICAgIG1pbldpZHRoOiAwLFxuICAgIHdpZHRoOiA1NixcbiAgICBoZWlnaHQ6IDU2LFxuICAgIHpJbmRleDogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnpJbmRleC5mYWIsXG4gICAgYm94U2hhZG93OiAodGhlbWUudmFycyB8fCB0aGVtZSkuc2hhZG93c1s2XSxcbiAgICAnJjphY3RpdmUnOiB7XG4gICAgICBib3hTaGFkb3c6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5zaGFkb3dzWzEyXVxuICAgIH0sXG4gICAgY29sb3I6IHRoZW1lLnZhcnMgPyB0aGVtZS52YXJzLnBhbGV0dGUudGV4dC5wcmltYXJ5IDogKF90aGVtZSRwYWxldHRlJGdldENvbiA9IChfdGhlbWUkcGFsZXR0ZSA9IHRoZW1lLnBhbGV0dGUpLmdldENvbnRyYXN0VGV4dCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGVtZSRwYWxldHRlJGdldENvbi5jYWxsKF90aGVtZSRwYWxldHRlLCB0aGVtZS5wYWxldHRlLmdyZXlbMzAwXSksXG4gICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5ncmV5WzMwMF0sXG4gICAgJyY6aG92ZXInOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICh0aGVtZS52YXJzIHx8IHRoZW1lKS5wYWxldHRlLmdyZXkuQTEwMCxcbiAgICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuZ3JleVszMDBdXG4gICAgICB9LFxuICAgICAgdGV4dERlY29yYXRpb246ICdub25lJ1xuICAgIH0sXG4gICAgW2AmLiR7ZmFiQ2xhc3Nlcy5mb2N1c1Zpc2libGV9YF06IHtcbiAgICAgIGJveFNoYWRvdzogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYWRvd3NbNl1cbiAgICB9XG4gIH0sIG93bmVyU3RhdGUuc2l6ZSA9PT0gJ3NtYWxsJyAmJiB7XG4gICAgd2lkdGg6IDQwLFxuICAgIGhlaWdodDogNDBcbiAgfSwgb3duZXJTdGF0ZS5zaXplID09PSAnbWVkaXVtJyAmJiB7XG4gICAgd2lkdGg6IDQ4LFxuICAgIGhlaWdodDogNDhcbiAgfSwgb3duZXJTdGF0ZS52YXJpYW50ID09PSAnZXh0ZW5kZWQnICYmIHtcbiAgICBib3JkZXJSYWRpdXM6IDQ4IC8gMixcbiAgICBwYWRkaW5nOiAnMCAxNnB4JyxcbiAgICB3aWR0aDogJ2F1dG8nLFxuICAgIG1pbkhlaWdodDogJ2F1dG8nLFxuICAgIG1pbldpZHRoOiA0OCxcbiAgICBoZWlnaHQ6IDQ4XG4gIH0sIG93bmVyU3RhdGUudmFyaWFudCA9PT0gJ2V4dGVuZGVkJyAmJiBvd25lclN0YXRlLnNpemUgPT09ICdzbWFsbCcgJiYge1xuICAgIHdpZHRoOiAnYXV0bycsXG4gICAgcGFkZGluZzogJzAgOHB4JyxcbiAgICBib3JkZXJSYWRpdXM6IDM0IC8gMixcbiAgICBtaW5XaWR0aDogMzQsXG4gICAgaGVpZ2h0OiAzNFxuICB9LCBvd25lclN0YXRlLnZhcmlhbnQgPT09ICdleHRlbmRlZCcgJiYgb3duZXJTdGF0ZS5zaXplID09PSAnbWVkaXVtJyAmJiB7XG4gICAgd2lkdGg6ICdhdXRvJyxcbiAgICBwYWRkaW5nOiAnMCAxNnB4JyxcbiAgICBib3JkZXJSYWRpdXM6IDQwIC8gMixcbiAgICBtaW5XaWR0aDogNDAsXG4gICAgaGVpZ2h0OiA0MFxuICB9LCBvd25lclN0YXRlLmNvbG9yID09PSAnaW5oZXJpdCcgJiYge1xuICAgIGNvbG9yOiAnaW5oZXJpdCdcbiAgfSk7XG59LCAoe1xuICB0aGVtZSxcbiAgb3duZXJTdGF0ZVxufSkgPT4gX2V4dGVuZHMoe30sIG93bmVyU3RhdGUuY29sb3IgIT09ICdpbmhlcml0JyAmJiBvd25lclN0YXRlLmNvbG9yICE9PSAnZGVmYXVsdCcgJiYgKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0gIT0gbnVsbCAmJiB7XG4gIGNvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5jb250cmFzdFRleHQsXG4gIGJhY2tncm91bmRDb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGVbb3duZXJTdGF0ZS5jb2xvcl0ubWFpbixcbiAgJyY6aG92ZXInOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5kYXJrLFxuICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZVtvd25lclN0YXRlLmNvbG9yXS5tYWluXG4gICAgfVxuICB9XG59KSwgKHtcbiAgdGhlbWVcbn0pID0+ICh7XG4gIFtgJi4ke2ZhYkNsYXNzZXMuZGlzYWJsZWR9YF06IHtcbiAgICBjb2xvcjogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkLFxuICAgIGJveFNoYWRvdzogKHRoZW1lLnZhcnMgfHwgdGhlbWUpLnNoYWRvd3NbMF0sXG4gICAgYmFja2dyb3VuZENvbG9yOiAodGhlbWUudmFycyB8fCB0aGVtZSkucGFsZXR0ZS5hY3Rpb24uZGlzYWJsZWRCYWNrZ3JvdW5kXG4gIH1cbn0pKTtcbmNvbnN0IEZhYiA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEZhYihpblByb3BzLCByZWYpIHtcbiAgY29uc3QgcHJvcHMgPSB1c2VUaGVtZVByb3BzKHtcbiAgICBwcm9wczogaW5Qcm9wcyxcbiAgICBuYW1lOiAnTXVpRmFiJ1xuICB9KTtcbiAgY29uc3Qge1xuICAgICAgY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjb2xvciA9ICdkZWZhdWx0JyxcbiAgICAgIGNvbXBvbmVudCA9ICdidXR0b24nLFxuICAgICAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgICAgIGRpc2FibGVGb2N1c1JpcHBsZSA9IGZhbHNlLFxuICAgICAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lLFxuICAgICAgc2l6ZSA9ICdsYXJnZScsXG4gICAgICB2YXJpYW50ID0gJ2NpcmN1bGFyJ1xuICAgIH0gPSBwcm9wcyxcbiAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgY29sb3IsXG4gICAgY29tcG9uZW50LFxuICAgIGRpc2FibGVkLFxuICAgIGRpc2FibGVGb2N1c1JpcHBsZSxcbiAgICBzaXplLFxuICAgIHZhcmlhbnRcbiAgfSk7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KEZhYlJvb3QsIF9leHRlbmRzKHtcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpLFxuICAgIGNvbXBvbmVudDogY29tcG9uZW50LFxuICAgIGRpc2FibGVkOiBkaXNhYmxlZCxcbiAgICBmb2N1c1JpcHBsZTogIWRpc2FibGVGb2N1c1JpcHBsZSxcbiAgICBmb2N1c1Zpc2libGVDbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5mb2N1c1Zpc2libGUsIGZvY3VzVmlzaWJsZUNsYXNzTmFtZSksXG4gICAgb3duZXJTdGF0ZTogb3duZXJTdGF0ZSxcbiAgICByZWY6IHJlZlxuICB9LCBvdGhlciwge1xuICAgIGNsYXNzZXM6IGNsYXNzZXMsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gRmFiLnByb3BUeXBlcyAvKiByZW1vdmUtcHJvcHR5cGVzICovID0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIEl0IHN1cHBvcnRzIGJvdGggZGVmYXVsdCBhbmQgY3VzdG9tIHRoZW1lIGNvbG9ycywgd2hpY2ggY2FuIGJlIGFkZGVkIGFzIHNob3duIGluIHRoZVxuICAgKiBbcGFsZXR0ZSBjdXN0b21pemF0aW9uIGd1aWRlXShodHRwczovL211aS5jb20vbWF0ZXJpYWwtdWkvY3VzdG9taXphdGlvbi9wYWxldHRlLyNhZGRpbmctbmV3LWNvbG9ycykuXG4gICAqIEBkZWZhdWx0ICdkZWZhdWx0J1xuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlcyAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnZGVmYXVsdCcsICdlcnJvcicsICdpbmZvJywgJ2luaGVyaXQnLCAncHJpbWFyeScsICdzZWNvbmRhcnknLCAnc3VjY2VzcycsICd3YXJuaW5nJ10pLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlcyAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovLmVsZW1lbnRUeXBlLFxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGRpc2FibGVkLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgIGtleWJvYXJkIGZvY3VzIHJpcHBsZSBpcyBkaXNhYmxlZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGRpc2FibGVGb2N1c1JpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSByaXBwbGUgZWZmZWN0IGlzIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZVJpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBmb2N1c1Zpc2libGVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIC8qKlxuICAgKiBUaGUgVVJMIHRvIGxpbmsgdG8gd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWQuXG4gICAqIElmIGRlZmluZWQsIGFuIGBhYCBlbGVtZW50IHdpbGwgYmUgdXNlZCBhcyB0aGUgcm9vdCBub2RlLlxuICAgKi9cbiAgaHJlZjogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSBjb21wb25lbnQuXG4gICAqIGBzbWFsbGAgaXMgZXF1aXZhbGVudCB0byB0aGUgZGVuc2UgYnV0dG9uIHN0eWxpbmcuXG4gICAqIEBkZWZhdWx0ICdsYXJnZSdcbiAgICovXG4gIHNpemU6IFByb3BUeXBlcyAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnc21hbGwnLCAnbWVkaXVtJywgJ2xhcmdlJ10pLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqIEBkZWZhdWx0ICdjaXJjdWxhcidcbiAgICovXG4gIHZhcmlhbnQ6IFByb3BUeXBlcyAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnY2lyY3VsYXInLCAnZXh0ZW5kZWQnXSksIFByb3BUeXBlcy5zdHJpbmddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IEZhYjsiLCJpbXBvcnQgeyB1bnN0YWJsZV9nZW5lcmF0ZVV0aWxpdHlDbGFzc2VzIGFzIGdlbmVyYXRlVXRpbGl0eUNsYXNzZXMgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBnZW5lcmF0ZVV0aWxpdHlDbGFzcyBmcm9tICcuLi9nZW5lcmF0ZVV0aWxpdHlDbGFzcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3BlZWREaWFsVXRpbGl0eUNsYXNzKHNsb3QpIHtcbiAgcmV0dXJuIGdlbmVyYXRlVXRpbGl0eUNsYXNzKCdNdWlTcGVlZERpYWwnLCBzbG90KTtcbn1cbmNvbnN0IHNwZWVkRGlhbENsYXNzZXMgPSBnZW5lcmF0ZVV0aWxpdHlDbGFzc2VzKCdNdWlTcGVlZERpYWwnLCBbJ3Jvb3QnLCAnZmFiJywgJ2RpcmVjdGlvblVwJywgJ2RpcmVjdGlvbkRvd24nLCAnZGlyZWN0aW9uTGVmdCcsICdkaXJlY3Rpb25SaWdodCcsICdhY3Rpb25zJywgJ2FjdGlvbnNDbG9zZWQnXSk7XG5leHBvcnQgZGVmYXVsdCBzcGVlZERpYWxDbGFzc2VzOyIsIid1c2UgY2xpZW50JztcblxuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmNvbnN0IF9leGNsdWRlZCA9IFtcInJlZlwiXSxcbiAgX2V4Y2x1ZGVkMiA9IFtcImFyaWFMYWJlbFwiLCBcIkZhYlByb3BzXCIsIFwiY2hpbGRyZW5cIiwgXCJjbGFzc05hbWVcIiwgXCJkaXJlY3Rpb25cIiwgXCJoaWRkZW5cIiwgXCJpY29uXCIsIFwib25CbHVyXCIsIFwib25DbG9zZVwiLCBcIm9uRm9jdXNcIiwgXCJvbktleURvd25cIiwgXCJvbk1vdXNlRW50ZXJcIiwgXCJvbk1vdXNlTGVhdmVcIiwgXCJvbk9wZW5cIiwgXCJvcGVuXCIsIFwib3Blbkljb25cIiwgXCJUcmFuc2l0aW9uQ29tcG9uZW50XCIsIFwidHJhbnNpdGlvbkR1cmF0aW9uXCIsIFwiVHJhbnNpdGlvblByb3BzXCJdLFxuICBfZXhjbHVkZWQzID0gW1wicmVmXCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNGcmFnbWVudCB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IHVuc3RhYmxlX2NvbXBvc2VDbGFzc2VzIGFzIGNvbXBvc2VDbGFzc2VzIH0gZnJvbSAnQG11aS9iYXNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vc3R5bGVzL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wcyBmcm9tICcuLi9zdHlsZXMvdXNlVGhlbWVQcm9wcyc7XG5pbXBvcnQgdXNlVGhlbWUgZnJvbSAnLi4vc3R5bGVzL3VzZVRoZW1lJztcbmltcG9ydCBab29tIGZyb20gJy4uL1pvb20nO1xuaW1wb3J0IEZhYiBmcm9tICcuLi9GYWInO1xuaW1wb3J0IGNhcGl0YWxpemUgZnJvbSAnLi4vdXRpbHMvY2FwaXRhbGl6ZSc7XG5pbXBvcnQgaXNNdWlFbGVtZW50IGZyb20gJy4uL3V0aWxzL2lzTXVpRWxlbWVudCc7XG5pbXBvcnQgdXNlRm9ya1JlZiBmcm9tICcuLi91dGlscy91c2VGb3JrUmVmJztcbmltcG9ydCB1c2VDb250cm9sbGVkIGZyb20gJy4uL3V0aWxzL3VzZUNvbnRyb2xsZWQnO1xuaW1wb3J0IHNwZWVkRGlhbENsYXNzZXMsIHsgZ2V0U3BlZWREaWFsVXRpbGl0eUNsYXNzIH0gZnJvbSAnLi9zcGVlZERpYWxDbGFzc2VzJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCB1c2VVdGlsaXR5Q2xhc3NlcyA9IG93bmVyU3RhdGUgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NlcyxcbiAgICBvcGVuLFxuICAgIGRpcmVjdGlvblxuICB9ID0gb3duZXJTdGF0ZTtcbiAgY29uc3Qgc2xvdHMgPSB7XG4gICAgcm9vdDogWydyb290JywgYGRpcmVjdGlvbiR7Y2FwaXRhbGl6ZShkaXJlY3Rpb24pfWBdLFxuICAgIGZhYjogWydmYWInXSxcbiAgICBhY3Rpb25zOiBbJ2FjdGlvbnMnLCAhb3BlbiAmJiAnYWN0aW9uc0Nsb3NlZCddXG4gIH07XG4gIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgZ2V0U3BlZWREaWFsVXRpbGl0eUNsYXNzLCBjbGFzc2VzKTtcbn07XG5mdW5jdGlvbiBnZXRPcmllbnRhdGlvbihkaXJlY3Rpb24pIHtcbiAgaWYgKGRpcmVjdGlvbiA9PT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT09ICdkb3duJykge1xuICAgIHJldHVybiAndmVydGljYWwnO1xuICB9XG4gIGlmIChkaXJlY3Rpb24gPT09ICdyaWdodCcgfHwgZGlyZWN0aW9uID09PSAnbGVmdCcpIHtcbiAgICByZXR1cm4gJ2hvcml6b250YWwnO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBjbGFtcCh2YWx1ZSwgbWluLCBtYXgpIHtcbiAgaWYgKHZhbHVlIDwgbWluKSB7XG4gICAgcmV0dXJuIG1pbjtcbiAgfVxuICBpZiAodmFsdWUgPiBtYXgpIHtcbiAgICByZXR1cm4gbWF4O1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmNvbnN0IGRpYWxSYWRpdXMgPSAzMjtcbmNvbnN0IHNwYWNpbmdBY3Rpb25zID0gMTY7XG5jb25zdCBTcGVlZERpYWxSb290ID0gc3R5bGVkKCdkaXYnLCB7XG4gIG5hbWU6ICdNdWlTcGVlZERpYWwnLFxuICBzbG90OiAnUm9vdCcsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMucm9vdCwgc3R5bGVzW2BkaXJlY3Rpb24ke2NhcGl0YWxpemUob3duZXJTdGF0ZS5kaXJlY3Rpb24pfWBdXTtcbiAgfVxufSkoKHtcbiAgdGhlbWUsXG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHtcbiAgekluZGV4OiAodGhlbWUudmFycyB8fCB0aGVtZSkuekluZGV4LnNwZWVkRGlhbCxcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgcG9pbnRlckV2ZW50czogJ25vbmUnXG59LCBvd25lclN0YXRlLmRpcmVjdGlvbiA9PT0gJ3VwJyAmJiB7XG4gIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4tcmV2ZXJzZScsXG4gIFtgJiAuJHtzcGVlZERpYWxDbGFzc2VzLmFjdGlvbnN9YF06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uLXJldmVyc2UnLFxuICAgIG1hcmdpbkJvdHRvbTogLWRpYWxSYWRpdXMsXG4gICAgcGFkZGluZ0JvdHRvbTogc3BhY2luZ0FjdGlvbnMgKyBkaWFsUmFkaXVzXG4gIH1cbn0sIG93bmVyU3RhdGUuZGlyZWN0aW9uID09PSAnZG93bicgJiYge1xuICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgW2AmIC4ke3NwZWVkRGlhbENsYXNzZXMuYWN0aW9uc31gXToge1xuICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgIG1hcmdpblRvcDogLWRpYWxSYWRpdXMsXG4gICAgcGFkZGluZ1RvcDogc3BhY2luZ0FjdGlvbnMgKyBkaWFsUmFkaXVzXG4gIH1cbn0sIG93bmVyU3RhdGUuZGlyZWN0aW9uID09PSAnbGVmdCcgJiYge1xuICBmbGV4RGlyZWN0aW9uOiAncm93LXJldmVyc2UnLFxuICBbYCYgLiR7c3BlZWREaWFsQ2xhc3Nlcy5hY3Rpb25zfWBdOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3Jvdy1yZXZlcnNlJyxcbiAgICBtYXJnaW5SaWdodDogLWRpYWxSYWRpdXMsXG4gICAgcGFkZGluZ1JpZ2h0OiBzcGFjaW5nQWN0aW9ucyArIGRpYWxSYWRpdXNcbiAgfVxufSwgb3duZXJTdGF0ZS5kaXJlY3Rpb24gPT09ICdyaWdodCcgJiYge1xuICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgW2AmIC4ke3NwZWVkRGlhbENsYXNzZXMuYWN0aW9uc31gXToge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIG1hcmdpbkxlZnQ6IC1kaWFsUmFkaXVzLFxuICAgIHBhZGRpbmdMZWZ0OiBzcGFjaW5nQWN0aW9ucyArIGRpYWxSYWRpdXNcbiAgfVxufSkpO1xuY29uc3QgU3BlZWREaWFsRmFiID0gc3R5bGVkKEZhYiwge1xuICBuYW1lOiAnTXVpU3BlZWREaWFsJyxcbiAgc2xvdDogJ0ZhYicsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4gc3R5bGVzLmZhYlxufSkoKCkgPT4gKHtcbiAgcG9pbnRlckV2ZW50czogJ2F1dG8nXG59KSk7XG5jb25zdCBTcGVlZERpYWxBY3Rpb25zID0gc3R5bGVkKCdkaXYnLCB7XG4gIG5hbWU6ICdNdWlTcGVlZERpYWwnLFxuICBzbG90OiAnQWN0aW9ucycsXG4gIG92ZXJyaWRlc1Jlc29sdmVyOiAocHJvcHMsIHN0eWxlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG93bmVyU3RhdGVcbiAgICB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIFtzdHlsZXMuYWN0aW9ucywgIW93bmVyU3RhdGUub3BlbiAmJiBzdHlsZXMuYWN0aW9uc0Nsb3NlZF07XG4gIH1cbn0pKCh7XG4gIG93bmVyU3RhdGVcbn0pID0+IF9leHRlbmRzKHtcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBwb2ludGVyRXZlbnRzOiAnYXV0bydcbn0sICFvd25lclN0YXRlLm9wZW4gJiYge1xuICB0cmFuc2l0aW9uOiAndG9wIDBzIGxpbmVhciAwLjJzJyxcbiAgcG9pbnRlckV2ZW50czogJ25vbmUnXG59KSk7XG5jb25zdCBTcGVlZERpYWwgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBTcGVlZERpYWwoaW5Qcm9wcywgcmVmKSB7XG4gIGNvbnN0IHByb3BzID0gdXNlVGhlbWVQcm9wcyh7XG4gICAgcHJvcHM6IGluUHJvcHMsXG4gICAgbmFtZTogJ011aVNwZWVkRGlhbCdcbiAgfSk7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZGVmYXVsdFRyYW5zaXRpb25EdXJhdGlvbiA9IHtcbiAgICBlbnRlcjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uZW50ZXJpbmdTY3JlZW4sXG4gICAgZXhpdDogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24ubGVhdmluZ1NjcmVlblxuICB9O1xuICBjb25zdCB7XG4gICAgICBhcmlhTGFiZWwsXG4gICAgICBGYWJQcm9wczoge1xuICAgICAgICByZWY6IG9yaWdEaWFsQnV0dG9uUmVmXG4gICAgICB9ID0ge30sXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5Qcm9wLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgZGlyZWN0aW9uID0gJ3VwJyxcbiAgICAgIGhpZGRlbiA9IGZhbHNlLFxuICAgICAgaWNvbixcbiAgICAgIG9uQmx1cixcbiAgICAgIG9uQ2xvc2UsXG4gICAgICBvbkZvY3VzLFxuICAgICAgb25LZXlEb3duLFxuICAgICAgb25Nb3VzZUVudGVyLFxuICAgICAgb25Nb3VzZUxlYXZlLFxuICAgICAgb25PcGVuLFxuICAgICAgb3Blbjogb3BlblByb3AsXG4gICAgICBUcmFuc2l0aW9uQ29tcG9uZW50ID0gWm9vbSxcbiAgICAgIHRyYW5zaXRpb25EdXJhdGlvbiA9IGRlZmF1bHRUcmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICBUcmFuc2l0aW9uUHJvcHNcbiAgICB9ID0gcHJvcHMsXG4gICAgRmFiUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcy5GYWJQcm9wcywgX2V4Y2x1ZGVkKSxcbiAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQyKTtcbiAgY29uc3QgW29wZW4sIHNldE9wZW5TdGF0ZV0gPSB1c2VDb250cm9sbGVkKHtcbiAgICBjb250cm9sbGVkOiBvcGVuUHJvcCxcbiAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICBuYW1lOiAnU3BlZWREaWFsJyxcbiAgICBzdGF0ZTogJ29wZW4nXG4gIH0pO1xuICBjb25zdCBvd25lclN0YXRlID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgb3BlbixcbiAgICBkaXJlY3Rpb25cbiAgfSk7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3Nlcyhvd25lclN0YXRlKTtcbiAgY29uc3QgZXZlbnRUaW1lciA9IFJlYWN0LnVzZVJlZigpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhclRpbWVvdXQoZXZlbnRUaW1lci5jdXJyZW50KTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgLyoqXG4gICAqIGFuIGluZGV4IGluIGFjdGlvbnMuY3VycmVudFxuICAgKi9cbiAgY29uc3QgZm9jdXNlZEFjdGlvbiA9IFJlYWN0LnVzZVJlZigwKTtcblxuICAvKipcbiAgICogcHJlc3NpbmcgdGhpcyBrZXkgd2hpbGUgdGhlIGZvY3VzIGlzIG9uIGEgY2hpbGQgU3BlZWREaWFsQWN0aW9uIGZvY3VzZXNcbiAgICogdGhlIG5leHQgU3BlZWREaWFsQWN0aW9uLlxuICAgKiBJdCBpcyBlcXVhbCB0byB0aGUgZmlyc3QgYXJyb3cga2V5IHByZXNzZWQgd2hpbGUgZm9jdXMgaXMgb24gdGhlIFNwZWVkRGlhbFxuICAgKiB0aGF0IGlzIG5vdCBvcnRob2dvbmFsIHRvIHRoZSBkaXJlY3Rpb24uXG4gICAqIEB0eXBlIHt1dGlscy5BcnJvd0tleT99XG4gICAqL1xuICBjb25zdCBuZXh0SXRlbUFycm93S2V5ID0gUmVhY3QudXNlUmVmKCk7XG5cbiAgLyoqXG4gICAqIHJlZnMgdG8gdGhlIEJ1dHRvbiB0aGF0IGhhdmUgYW4gYWN0aW9uIGFzc29jaWF0ZWQgdG8gdGhlbSBpbiB0aGlzIFNwZWVkRGlhbFxuICAgKiBbRmFiLCAuLi4oU3BlZWREaWFsQWN0aW9ucyA+IEJ1dHRvbildXG4gICAqIEB0eXBlIHtIVE1MQnV0dG9uRWxlbWVudFtdfVxuICAgKi9cbiAgY29uc3QgYWN0aW9ucyA9IFJlYWN0LnVzZVJlZihbXSk7XG4gIGFjdGlvbnMuY3VycmVudCA9IFthY3Rpb25zLmN1cnJlbnRbMF1dO1xuICBjb25zdCBoYW5kbGVPd25GYWJSZWYgPSBSZWFjdC51c2VDYWxsYmFjayhmYWJGZWYgPT4ge1xuICAgIGFjdGlvbnMuY3VycmVudFswXSA9IGZhYkZlZjtcbiAgfSwgW10pO1xuICBjb25zdCBoYW5kbGVGYWJSZWYgPSB1c2VGb3JrUmVmKG9yaWdEaWFsQnV0dG9uUmVmLCBoYW5kbGVPd25GYWJSZWYpO1xuXG4gIC8qKlxuICAgKiBjcmVhdGVzIGEgcmVmIGNhbGxiYWNrIGZvciB0aGUgQnV0dG9uIGluIGEgU3BlZWREaWFsQWN0aW9uXG4gICAqIElzIGNhbGxlZCBiZWZvcmUgdGhlIG9yaWdpbmFsIHJlZiBjYWxsYmFjayBmb3IgQnV0dG9uIHRoYXQgd2FzIHNldCBpbiBidXR0b25Qcm9wc1xuICAgKlxuICAgKiBAcGFyYW0gZGlhbEFjdGlvbkluZGV4IHtudW1iZXJ9XG4gICAqIEBwYXJhbSBvcmlnQnV0dG9uUmVmIHtSZWFjdC5SZWZPYmplY3Q/fVxuICAgKi9cbiAgY29uc3QgY3JlYXRlSGFuZGxlU3BlZWREaWFsQWN0aW9uQnV0dG9uUmVmID0gKGRpYWxBY3Rpb25JbmRleCwgb3JpZ0J1dHRvblJlZikgPT4ge1xuICAgIHJldHVybiBidXR0b25SZWYgPT4ge1xuICAgICAgYWN0aW9ucy5jdXJyZW50W2RpYWxBY3Rpb25JbmRleCArIDFdID0gYnV0dG9uUmVmO1xuICAgICAgaWYgKG9yaWdCdXR0b25SZWYpIHtcbiAgICAgICAgb3JpZ0J1dHRvblJlZihidXR0b25SZWYpO1xuICAgICAgfVxuICAgIH07XG4gIH07XG4gIGNvbnN0IGhhbmRsZUtleURvd24gPSBldmVudCA9PiB7XG4gICAgaWYgKG9uS2V5RG93bikge1xuICAgICAgb25LZXlEb3duKGV2ZW50KTtcbiAgICB9XG4gICAgY29uc3Qga2V5ID0gZXZlbnQua2V5LnJlcGxhY2UoJ0Fycm93JywgJycpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudDogbmV4dEl0ZW1BcnJvd0tleUN1cnJlbnQgPSBrZXlcbiAgICB9ID0gbmV4dEl0ZW1BcnJvd0tleTtcbiAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgc2V0T3BlblN0YXRlKGZhbHNlKTtcbiAgICAgIGFjdGlvbnMuY3VycmVudFswXS5mb2N1cygpO1xuICAgICAgaWYgKG9uQ2xvc2UpIHtcbiAgICAgICAgb25DbG9zZShldmVudCwgJ2VzY2FwZUtleURvd24nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGdldE9yaWVudGF0aW9uKGtleSkgPT09IGdldE9yaWVudGF0aW9uKG5leHRJdGVtQXJyb3dLZXlDdXJyZW50KSAmJiBnZXRPcmllbnRhdGlvbihrZXkpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjb25zdCBhY3Rpb25TdGVwID0ga2V5ID09PSBuZXh0SXRlbUFycm93S2V5Q3VycmVudCA/IDEgOiAtMTtcblxuICAgICAgLy8gc3RheSB3aXRoaW4gYXJyYXkgaW5kaWNlc1xuICAgICAgY29uc3QgbmV4dEFjdGlvbiA9IGNsYW1wKGZvY3VzZWRBY3Rpb24uY3VycmVudCArIGFjdGlvblN0ZXAsIDAsIGFjdGlvbnMuY3VycmVudC5sZW5ndGggLSAxKTtcbiAgICAgIGFjdGlvbnMuY3VycmVudFtuZXh0QWN0aW9uXS5mb2N1cygpO1xuICAgICAgZm9jdXNlZEFjdGlvbi5jdXJyZW50ID0gbmV4dEFjdGlvbjtcbiAgICAgIG5leHRJdGVtQXJyb3dLZXkuY3VycmVudCA9IG5leHRJdGVtQXJyb3dLZXlDdXJyZW50O1xuICAgIH1cbiAgfTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBhY3Rpb25zIHdlcmUgY2xvc2VkIHdoaWxlIG5hdmlnYXRpb24gc3RhdGUgd2FzIG5vdCByZXNldFxuICAgIGlmICghb3Blbikge1xuICAgICAgZm9jdXNlZEFjdGlvbi5jdXJyZW50ID0gMDtcbiAgICAgIG5leHRJdGVtQXJyb3dLZXkuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sIFtvcGVuXSk7XG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC50eXBlID09PSAnbW91c2VsZWF2ZScgJiYgb25Nb3VzZUxlYXZlKSB7XG4gICAgICBvbk1vdXNlTGVhdmUoZXZlbnQpO1xuICAgIH1cbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ2JsdXInICYmIG9uQmx1cikge1xuICAgICAgb25CbHVyKGV2ZW50KTtcbiAgICB9XG4gICAgY2xlYXJUaW1lb3V0KGV2ZW50VGltZXIuY3VycmVudCk7XG4gICAgaWYgKGV2ZW50LnR5cGUgPT09ICdibHVyJykge1xuICAgICAgZXZlbnRUaW1lci5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldE9wZW5TdGF0ZShmYWxzZSk7XG4gICAgICAgIGlmIChvbkNsb3NlKSB7XG4gICAgICAgICAgb25DbG9zZShldmVudCwgJ2JsdXInKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE9wZW5TdGF0ZShmYWxzZSk7XG4gICAgICBpZiAob25DbG9zZSkge1xuICAgICAgICBvbkNsb3NlKGV2ZW50LCAnbW91c2VMZWF2ZScpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSBldmVudCA9PiB7XG4gICAgaWYgKEZhYlByb3BzLm9uQ2xpY2spIHtcbiAgICAgIEZhYlByb3BzLm9uQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgICBjbGVhclRpbWVvdXQoZXZlbnRUaW1lci5jdXJyZW50KTtcbiAgICBpZiAob3Blbikge1xuICAgICAgc2V0T3BlblN0YXRlKGZhbHNlKTtcbiAgICAgIGlmIChvbkNsb3NlKSB7XG4gICAgICAgIG9uQ2xvc2UoZXZlbnQsICd0b2dnbGUnKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3BlblN0YXRlKHRydWUpO1xuICAgICAgaWYgKG9uT3Blbikge1xuICAgICAgICBvbk9wZW4oZXZlbnQsICd0b2dnbGUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIGNvbnN0IGhhbmRsZU9wZW4gPSBldmVudCA9PiB7XG4gICAgaWYgKGV2ZW50LnR5cGUgPT09ICdtb3VzZWVudGVyJyAmJiBvbk1vdXNlRW50ZXIpIHtcbiAgICAgIG9uTW91c2VFbnRlcihldmVudCk7XG4gICAgfVxuICAgIGlmIChldmVudC50eXBlID09PSAnZm9jdXMnICYmIG9uRm9jdXMpIHtcbiAgICAgIG9uRm9jdXMoZXZlbnQpO1xuICAgIH1cblxuICAgIC8vIFdoZW4gbW92aW5nIHRoZSBmb2N1cyBiZXR3ZWVuIHR3byBpdGVtcyxcbiAgICAvLyBhIGNoYWluIGlmIGJsdXIgYW5kIGZvY3VzIGV2ZW50IGlzIHRyaWdnZXJlZC5cbiAgICAvLyBXZSBvbmx5IGhhbmRsZSB0aGUgbGFzdCBldmVudC5cbiAgICBjbGVhclRpbWVvdXQoZXZlbnRUaW1lci5jdXJyZW50KTtcbiAgICBpZiAoIW9wZW4pIHtcbiAgICAgIC8vIFdhaXQgZm9yIGEgZnV0dXJlIGZvY3VzIG9yIGNsaWNrIGV2ZW50XG4gICAgICBldmVudFRpbWVyLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0T3BlblN0YXRlKHRydWUpO1xuICAgICAgICBpZiAob25PcGVuKSB7XG4gICAgICAgICAgY29uc3QgZXZlbnRNYXAgPSB7XG4gICAgICAgICAgICBmb2N1czogJ2ZvY3VzJyxcbiAgICAgICAgICAgIG1vdXNlZW50ZXI6ICdtb3VzZUVudGVyJ1xuICAgICAgICAgIH07XG4gICAgICAgICAgb25PcGVuKGV2ZW50LCBldmVudE1hcFtldmVudC50eXBlXSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICAvLyBGaWx0ZXIgdGhlIGxhYmVsIGZvciB2YWxpZCBpZCBjaGFyYWN0ZXJzLlxuICBjb25zdCBpZCA9IGFyaWFMYWJlbC5yZXBsYWNlKC9eW15hLXpdK3xbXlxcdzouLV0rL2dpLCAnJyk7XG4gIGNvbnN0IGFsbEl0ZW1zID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlblByb3ApLmZpbHRlcihjaGlsZCA9PiB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChpc0ZyYWdtZW50KGNoaWxkKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtcIk1VSTogVGhlIFNwZWVkRGlhbCBjb21wb25lbnQgZG9lc24ndCBhY2NlcHQgYSBGcmFnbWVudCBhcyBhIGNoaWxkLlwiLCAnQ29uc2lkZXIgcHJvdmlkaW5nIGFuIGFycmF5IGluc3RlYWQuJ10uam9pbignXFxuJykpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKTtcbiAgfSk7XG4gIGNvbnN0IGNoaWxkcmVuID0gYWxsSXRlbXMubWFwKChjaGlsZCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBfY2hpbGQkcHJvcHMgPSBjaGlsZC5wcm9wcyxcbiAgICAgIHtcbiAgICAgICAgRmFiUHJvcHM6IHtcbiAgICAgICAgICByZWY6IG9yaWdCdXR0b25SZWZcbiAgICAgICAgfSA9IHt9LFxuICAgICAgICB0b29sdGlwUGxhY2VtZW50OiB0b29sdGlwUGxhY2VtZW50UHJvcFxuICAgICAgfSA9IF9jaGlsZCRwcm9wcyxcbiAgICAgIENoaWxkRmFiUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfY2hpbGQkcHJvcHMuRmFiUHJvcHMsIF9leGNsdWRlZDMpO1xuICAgIGNvbnN0IHRvb2x0aXBQbGFjZW1lbnQgPSB0b29sdGlwUGxhY2VtZW50UHJvcCB8fCAoZ2V0T3JpZW50YXRpb24oZGlyZWN0aW9uKSA9PT0gJ3ZlcnRpY2FsJyA/ICdsZWZ0JyA6ICd0b3AnKTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgRmFiUHJvcHM6IF9leHRlbmRzKHt9LCBDaGlsZEZhYlByb3BzLCB7XG4gICAgICAgIHJlZjogY3JlYXRlSGFuZGxlU3BlZWREaWFsQWN0aW9uQnV0dG9uUmVmKGluZGV4LCBvcmlnQnV0dG9uUmVmKVxuICAgICAgfSksXG4gICAgICBkZWxheTogMzAgKiAob3BlbiA/IGluZGV4IDogYWxsSXRlbXMubGVuZ3RoIC0gaW5kZXgpLFxuICAgICAgb3BlbixcbiAgICAgIHRvb2x0aXBQbGFjZW1lbnQsXG4gICAgICBpZDogYCR7aWR9LWFjdGlvbi0ke2luZGV4fWBcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoU3BlZWREaWFsUm9vdCwgX2V4dGVuZHMoe1xuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiByZWYsXG4gICAgcm9sZTogXCJwcmVzZW50YXRpb25cIixcbiAgICBvbktleURvd246IGhhbmRsZUtleURvd24sXG4gICAgb25CbHVyOiBoYW5kbGVDbG9zZSxcbiAgICBvbkZvY3VzOiBoYW5kbGVPcGVuLFxuICAgIG9uTW91c2VFbnRlcjogaGFuZGxlT3BlbixcbiAgICBvbk1vdXNlTGVhdmU6IGhhbmRsZUNsb3NlLFxuICAgIG93bmVyU3RhdGU6IG93bmVyU3RhdGVcbiAgfSwgb3RoZXIsIHtcbiAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KFRyYW5zaXRpb25Db21wb25lbnQsIF9leHRlbmRzKHtcbiAgICAgIGluOiAhaGlkZGVuLFxuICAgICAgdGltZW91dDogdHJhbnNpdGlvbkR1cmF0aW9uLFxuICAgICAgdW5tb3VudE9uRXhpdDogdHJ1ZVxuICAgIH0sIFRyYW5zaXRpb25Qcm9wcywge1xuICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFNwZWVkRGlhbEZhYiwgX2V4dGVuZHMoe1xuICAgICAgICBjb2xvcjogXCJwcmltYXJ5XCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBhcmlhTGFiZWwsXG4gICAgICAgIFwiYXJpYS1oYXNwb3B1cFwiOiBcInRydWVcIixcbiAgICAgICAgXCJhcmlhLWV4cGFuZGVkXCI6IG9wZW4sXG4gICAgICAgIFwiYXJpYS1jb250cm9sc1wiOiBgJHtpZH0tYWN0aW9uc2BcbiAgICAgIH0sIEZhYlByb3BzLCB7XG4gICAgICAgIG9uQ2xpY2s6IGhhbmRsZUNsaWNrLFxuICAgICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5mYWIsIEZhYlByb3BzLmNsYXNzTmFtZSksXG4gICAgICAgIHJlZjogaGFuZGxlRmFiUmVmLFxuICAgICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGljb24pICYmIGlzTXVpRWxlbWVudChpY29uLCBbJ1NwZWVkRGlhbEljb24nXSkgPyAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGljb24sIHtcbiAgICAgICAgICBvcGVuXG4gICAgICAgIH0pIDogaWNvblxuICAgICAgfSkpXG4gICAgfSkpLCAvKiNfX1BVUkVfXyovX2pzeChTcGVlZERpYWxBY3Rpb25zLCB7XG4gICAgICBpZDogYCR7aWR9LWFjdGlvbnNgLFxuICAgICAgcm9sZTogXCJtZW51XCIsXG4gICAgICBcImFyaWEtb3JpZW50YXRpb25cIjogZ2V0T3JpZW50YXRpb24oZGlyZWN0aW9uKSxcbiAgICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLmFjdGlvbnMsICFvcGVuICYmIGNsYXNzZXMuYWN0aW9uc0Nsb3NlZCksXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgfSldXG4gIH0pKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3BlZWREaWFsLnByb3BUeXBlcyAvKiByZW1vdmUtcHJvcHR5cGVzICovID0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIFRoZSBhcmlhLWxhYmVsIG9mIHRoZSBidXR0b24gZWxlbWVudC5cbiAgICogQWxzbyB1c2VkIHRvIHByb3ZpZGUgdGhlIGBpZGAgZm9yIHRoZSBgU3BlZWREaWFsYCBlbGVtZW50IGFuZCBpdHMgY2hpbGRyZW4uXG4gICAqL1xuICBhcmlhTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgLyoqXG4gICAqIFNwZWVkRGlhbEFjdGlvbnMgdG8gZGlzcGxheSB3aGVuIHRoZSBTcGVlZERpYWwgaXMgYG9wZW5gLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIFRoZSBkaXJlY3Rpb24gdGhlIGFjdGlvbnMgb3BlbiByZWxhdGl2ZSB0byB0aGUgZmxvYXRpbmcgYWN0aW9uIGJ1dHRvbi5cbiAgICogQGRlZmF1bHQgJ3VwJ1xuICAgKi9cbiAgZGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoWydkb3duJywgJ2xlZnQnLCAncmlnaHQnLCAndXAnXSksXG4gIC8qKlxuICAgKiBQcm9wcyBhcHBsaWVkIHRvIHRoZSBbYEZhYmBdKC9tYXRlcmlhbC11aS9hcGkvZmFiLykgZWxlbWVudC5cbiAgICogQGRlZmF1bHQge31cbiAgICovXG4gIEZhYlByb3BzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgU3BlZWREaWFsIGlzIGhpZGRlbi5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGhpZGRlbjogUHJvcFR5cGVzLmJvb2wsXG4gIC8qKlxuICAgKiBUaGUgaWNvbiB0byBkaXNwbGF5IGluIHRoZSBTcGVlZERpYWwgRmFiLiBUaGUgYFNwZWVkRGlhbEljb25gIGNvbXBvbmVudFxuICAgKiBwcm92aWRlcyBhIGRlZmF1bHQgSWNvbiB3aXRoIGFuaW1hdGlvbi5cbiAgICovXG4gIGljb246IFByb3BUeXBlcy5ub2RlLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGNvbXBvbmVudCByZXF1ZXN0cyB0byBiZSBjbG9zZWQuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCBUaGUgZXZlbnQgc291cmNlIG9mIHRoZSBjYWxsYmFjay5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHJlYXNvbiBDYW4gYmU6IGBcInRvZ2dsZVwiYCwgYFwiYmx1clwiYCwgYFwibW91c2VMZWF2ZVwiYCwgYFwiZXNjYXBlS2V5RG93blwiYC5cbiAgICovXG4gIG9uQ2xvc2U6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbktleURvd246IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgb25Nb3VzZUVudGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uTW91c2VMZWF2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBjb21wb25lbnQgcmVxdWVzdHMgdG8gYmUgb3Blbi5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhc29uIENhbiBiZTogYFwidG9nZ2xlXCJgLCBgXCJmb2N1c1wiYCwgYFwibW91c2VFbnRlclwiYC5cbiAgICovXG4gIG9uT3BlbjogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaXMgc2hvd24uXG4gICAqL1xuICBvcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIFRoZSBpY29uIHRvIGRpc3BsYXkgaW4gdGhlIFNwZWVkRGlhbCBGYWIgd2hlbiB0aGUgU3BlZWREaWFsIGlzIG9wZW4uXG4gICAqL1xuICBvcGVuSWNvbjogUHJvcFR5cGVzLm5vZGUsXG4gIC8qKlxuICAgKiBUaGUgc3lzdGVtIHByb3AgdGhhdCBhbGxvd3MgZGVmaW5pbmcgc3lzdGVtIG92ZXJyaWRlcyBhcyB3ZWxsIGFzIGFkZGl0aW9uYWwgQ1NTIHN0eWxlcy5cbiAgICovXG4gIHN4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmJvb2xdKSksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSB0cmFuc2l0aW9uLlxuICAgKiBbRm9sbG93IHRoaXMgZ3VpZGVdKC9tYXRlcmlhbC11aS90cmFuc2l0aW9ucy8jdHJhbnNpdGlvbmNvbXBvbmVudC1wcm9wKSB0byBsZWFybiBtb3JlIGFib3V0IHRoZSByZXF1aXJlbWVudHMgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKiBAZGVmYXVsdCBab29tXG4gICAqL1xuICBUcmFuc2l0aW9uQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gZm9yIHRoZSB0cmFuc2l0aW9uLCBpbiBtaWxsaXNlY29uZHMuXG4gICAqIFlvdSBtYXkgc3BlY2lmeSBhIHNpbmdsZSB0aW1lb3V0IGZvciBhbGwgdHJhbnNpdGlvbnMsIG9yIGluZGl2aWR1YWxseSB3aXRoIGFuIG9iamVjdC5cbiAgICogQGRlZmF1bHQge1xuICAgKiAgIGVudGVyOiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5lbnRlcmluZ1NjcmVlbixcbiAgICogICBleGl0OiB0aGVtZS50cmFuc2l0aW9ucy5kdXJhdGlvbi5sZWF2aW5nU2NyZWVuLFxuICAgKiB9XG4gICAqL1xuICB0cmFuc2l0aW9uRHVyYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXBwZWFyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGVudGVyOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGV4aXQ6IFByb3BUeXBlcy5udW1iZXJcbiAgfSldKSxcbiAgLyoqXG4gICAqIFByb3BzIGFwcGxpZWQgdG8gdGhlIHRyYW5zaXRpb24gZWxlbWVudC5cbiAgICogQnkgZGVmYXVsdCwgdGhlIGVsZW1lbnQgaXMgYmFzZWQgb24gdGhpcyBbYFRyYW5zaXRpb25gXShodHRwOi8vcmVhY3Rjb21tdW5pdHkub3JnL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdHJhbnNpdGlvbi8pIGNvbXBvbmVudC5cbiAgICovXG4gIFRyYW5zaXRpb25Qcm9wczogUHJvcFR5cGVzLm9iamVjdFxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IFNwZWVkRGlhbDsiXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsImV4cG9ydHMiLCJfY3JlYXRlU3ZnSWNvbiIsIl9qc3hSdW50aW1lIiwiX2RlZmF1bHQiLCJjcmVhdGVTdmdJY29uIiwiZ2V0U3BlZWREaWFsSWNvblV0aWxpdHlDbGFzcyIsInNsb3QiLCJnZW5lcmF0ZVV0aWxpdHlDbGFzcyIsImdlbmVyYXRlVXRpbGl0eUNsYXNzZXMiLCJfZXhjbHVkZWQiLCJ1c2VVdGlsaXR5Q2xhc3NlcyIsIm93bmVyU3RhdGUiLCJjbGFzc2VzIiwib3BlbiIsIm9wZW5JY29uIiwic2xvdHMiLCJjb21wb3NlQ2xhc3NlcyIsIlNwZWVkRGlhbEljb25Sb290Iiwic3R5bGVkIiwicHJvcHMiLCJzdHlsZXMiLCJ0aGVtZSIsIlNwZWVkRGlhbEljb24iLCJpblByb3BzIiwicmVmIiwidXNlVGhlbWVQcm9wcyIsImNsYXNzTmFtZSIsImljb25Qcm9wIiwib3Blbkljb25Qcm9wIiwib3RoZXIiLCJmb3JtYXRJY29uIiwiaWNvbiIsIm5ld0NsYXNzTmFtZSIsIkFkZCIsInVzZVRoZW1lIiwiZGVmYXVsdFRpbWVvdXQiLCJhZGRFbmRMaXN0ZW5lciIsImFwcGVhciIsImNoaWxkcmVuIiwiZWFzaW5nIiwiaW5Qcm9wIiwib25FbnRlciIsIm9uRW50ZXJlZCIsIm9uRW50ZXJpbmciLCJvbkV4aXQiLCJvbkV4aXRlZCIsIm9uRXhpdGluZyIsInN0eWxlIiwidGltZW91dCIsIlRyYW5zaXRpb25Db21wb25lbnQiLCJUcmFuc2l0aW9uIiwibm9kZVJlZiIsImhhbmRsZVJlZiIsInVzZUZvcmtSZWYiLCJub3JtYWxpemVkVHJhbnNpdGlvbkNhbGxiYWNrIiwiY2FsbGJhY2siLCJtYXliZUlzQXBwZWFyaW5nIiwibm9kZSIsImhhbmRsZUVudGVyaW5nIiwiaGFuZGxlRW50ZXIiLCJpc0FwcGVhcmluZyIsInRyYW5zaXRpb25Qcm9wcyIsImhhbmRsZUVudGVyZWQiLCJoYW5kbGVFeGl0aW5nIiwiaGFuZGxlRXhpdCIsImhhbmRsZUV4aXRlZCIsImhhbmRsZUFkZEVuZExpc3RlbmVyIiwibmV4dCIsInN0YXRlIiwiY2hpbGRQcm9wcyIsImdldEZhYlV0aWxpdHlDbGFzcyIsImNvbG9yIiwidmFyaWFudCIsInNpemUiLCJjYXBpdGFsaXplIiwiY29tcG9zZWRDbGFzc2VzIiwiRmFiUm9vdCIsIkJ1dHRvbkJhc2UiLCJwcm9wIiwiX3RoZW1lJHBhbGV0dGUkZ2V0Q29uIiwiX3RoZW1lJHBhbGV0dGUiLCJjb21wb25lbnQiLCJkaXNhYmxlZCIsImRpc2FibGVGb2N1c1JpcHBsZSIsImZvY3VzVmlzaWJsZUNsYXNzTmFtZSIsImdldFNwZWVkRGlhbFV0aWxpdHlDbGFzcyIsIl9leGNsdWRlZDIiLCJfZXhjbHVkZWQzIiwiZGlyZWN0aW9uIiwiZ2V0T3JpZW50YXRpb24iLCJjbGFtcCIsInZhbHVlIiwibWluIiwibWF4IiwiZGlhbFJhZGl1cyIsInNwYWNpbmdBY3Rpb25zIiwiU3BlZWREaWFsUm9vdCIsIlNwZWVkRGlhbEZhYiIsIlNwZWVkRGlhbEFjdGlvbnMiLCJkZWZhdWx0VHJhbnNpdGlvbkR1cmF0aW9uIiwiYXJpYUxhYmVsIiwib3JpZ0RpYWxCdXR0b25SZWYiLCJjaGlsZHJlblByb3AiLCJoaWRkZW4iLCJvbkJsdXIiLCJvbkNsb3NlIiwib25Gb2N1cyIsIm9uS2V5RG93biIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsIm9uT3BlbiIsIm9wZW5Qcm9wIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiVHJhbnNpdGlvblByb3BzIiwiRmFiUHJvcHMiLCJzZXRPcGVuU3RhdGUiLCJ1c2VDb250cm9sbGVkIiwiZXZlbnRUaW1lciIsImZvY3VzZWRBY3Rpb24iLCJuZXh0SXRlbUFycm93S2V5IiwiYWN0aW9ucyIsImhhbmRsZU93bkZhYlJlZiIsImZhYkZlZiIsImhhbmRsZUZhYlJlZiIsImNyZWF0ZUhhbmRsZVNwZWVkRGlhbEFjdGlvbkJ1dHRvblJlZiIsImRpYWxBY3Rpb25JbmRleCIsIm9yaWdCdXR0b25SZWYiLCJidXR0b25SZWYiLCJoYW5kbGVLZXlEb3duIiwiZXZlbnQiLCJrZXkiLCJuZXh0SXRlbUFycm93S2V5Q3VycmVudCIsImFjdGlvblN0ZXAiLCJuZXh0QWN0aW9uIiwiaGFuZGxlQ2xvc2UiLCJoYW5kbGVDbGljayIsImhhbmRsZU9wZW4iLCJpZCIsImFsbEl0ZW1zIiwiY2hpbGQiLCJpbmRleCIsIl9jaGlsZCRwcm9wcyIsInRvb2x0aXBQbGFjZW1lbnRQcm9wIiwiQ2hpbGRGYWJQcm9wcyIsInRvb2x0aXBQbGFjZW1lbnQiLCJpc011aUVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9