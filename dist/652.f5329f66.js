"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[652],{4340:(Rt,H,c)=>{c.d(H,{Z:()=>et});var b=c(1674),B=c.n(b),N=c(9245),rt=c.n(N),at=c(8859),dt=c.n(at),st=new URL(c(1251),c.b),U=rt()(B()),tt=dt()(st);U.push([Rt.id,`@media (prefers-color-scheme: dark) {
  .JTIzpWAWzFszir0t9BAM {
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #c9d1d9;
    --color-fg-muted: #8b949e;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110, 118, 129, 0.4);
    --color-accent-fg: #58a6ff;
    --color-accent-emphasis: #1f6feb;
    --color-attention-subtle: rgba(187, 128, 9, 0.15);
    --color-danger-fg: #f85149;
  }
}
@media (prefers-color-scheme: light) {
  .JTIzpWAWzFszir0t9BAM {
    color-scheme: light;
    --color-prettylights-syntax-comment: #6e7781;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #8250df;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #24292f;
    --color-fg-muted: #57606a;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsl(210, 18%, 87%);
    --color-neutral-muted: rgba(175, 184, 193, 0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #cf222e;
  }
}
.JTIzpWAWzFszir0t9BAM {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}
.JTIzpWAWzFszir0t9BAM .ZtsvEhcDSF51AlNAw5bX {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}
.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,
.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,
.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,
.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,
.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before,
.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url(${tt});
  mask-image: url(${tt});
}
.JTIzpWAWzFszir0t9BAM details,
.JTIzpWAWzFszir0t9BAM figcaption,
.JTIzpWAWzFszir0t9BAM figure {
  display: block;
}
.JTIzpWAWzFszir0t9BAM summary {
  display: list-item;
}
.JTIzpWAWzFszir0t9BAM [hidden] {
  display: none !important;
}
.JTIzpWAWzFszir0t9BAM a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}
.JTIzpWAWzFszir0t9BAM abbr[title] {
  border-bottom: none;
  text-decoration: underline dotted;
}
.JTIzpWAWzFszir0t9BAM b,
.JTIzpWAWzFszir0t9BAM strong {
  font-weight: var(--base-text-weight-semibold, 600);
}
.JTIzpWAWzFszir0t9BAM dfn {
  font-style: italic;
}
.JTIzpWAWzFszir0t9BAM h1 {
  margin: 0.67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}
.JTIzpWAWzFszir0t9BAM mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}
.JTIzpWAWzFszir0t9BAM small {
  font-size: 90%;
}
.JTIzpWAWzFszir0t9BAM sub,
.JTIzpWAWzFszir0t9BAM sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.JTIzpWAWzFszir0t9BAM sub {
  bottom: -0.25em;
}
.JTIzpWAWzFszir0t9BAM sup {
  top: -0.5em;
}
.JTIzpWAWzFszir0t9BAM img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}
.JTIzpWAWzFszir0t9BAM code,
.JTIzpWAWzFszir0t9BAM kbd,
.JTIzpWAWzFszir0t9BAM pre,
.JTIzpWAWzFszir0t9BAM samp {
  font-family: monospace;
  font-size: 1em;
}
.JTIzpWAWzFszir0t9BAM figure {
  margin: 1em 40px;
}
.JTIzpWAWzFszir0t9BAM hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: 0.25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}
.JTIzpWAWzFszir0t9BAM input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
.JTIzpWAWzFszir0t9BAM [type=button],
.JTIzpWAWzFszir0t9BAM [type=reset],
.JTIzpWAWzFszir0t9BAM [type=submit] {
  -webkit-appearance: button;
}
.JTIzpWAWzFszir0t9BAM [type=checkbox],
.JTIzpWAWzFszir0t9BAM [type=radio] {
  box-sizing: border-box;
  padding: 0;
}
.JTIzpWAWzFszir0t9BAM [type=number]::-webkit-inner-spin-button,
.JTIzpWAWzFszir0t9BAM [type=number]::-webkit-outer-spin-button {
  height: auto;
}
.JTIzpWAWzFszir0t9BAM [type=search]::-webkit-search-cancel-button,
.JTIzpWAWzFszir0t9BAM [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}
.JTIzpWAWzFszir0t9BAM ::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
.JTIzpWAWzFszir0t9BAM ::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
.JTIzpWAWzFszir0t9BAM a:hover {
  text-decoration: underline;
}
.JTIzpWAWzFszir0t9BAM ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}
.JTIzpWAWzFszir0t9BAM hr::before {
  display: table;
  content: "";
}
.JTIzpWAWzFszir0t9BAM hr::after {
  display: table;
  clear: both;
  content: "";
}
.JTIzpWAWzFszir0t9BAM table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}
.JTIzpWAWzFszir0t9BAM td,
.JTIzpWAWzFszir0t9BAM th {
  padding: 0;
}
.JTIzpWAWzFszir0t9BAM details summary {
  cursor: pointer;
}
.JTIzpWAWzFszir0t9BAM details:not([open]) > *:not(summary) {
  display: none !important;
}
.JTIzpWAWzFszir0t9BAM a:focus,
.JTIzpWAWzFszir0t9BAM [role=button]:focus,
.JTIzpWAWzFszir0t9BAM input[type=radio]:focus,
.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.JTIzpWAWzFszir0t9BAM a:focus:not(:focus-visible),
.JTIzpWAWzFszir0t9BAM [role=button]:focus:not(:focus-visible),
.JTIzpWAWzFszir0t9BAM input[type=radio]:focus:not(:focus-visible),
.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}
.JTIzpWAWzFszir0t9BAM a:focus-visible,
.JTIzpWAWzFszir0t9BAM [role=button]:focus-visible,
.JTIzpWAWzFszir0t9BAM input[type=radio]:focus-visible,
.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.JTIzpWAWzFszir0t9BAM a:not([class]):focus,
.JTIzpWAWzFszir0t9BAM a:not([class]):focus-visible,
.JTIzpWAWzFszir0t9BAM input[type=radio]:focus,
.JTIzpWAWzFszir0t9BAM input[type=radio]:focus-visible,
.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus,
.JTIzpWAWzFszir0t9BAM input[type=checkbox]:focus-visible {
  outline-offset: 0;
}
.JTIzpWAWzFszir0t9BAM kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}
.JTIzpWAWzFszir0t9BAM h1,
.JTIzpWAWzFszir0t9BAM h2,
.JTIzpWAWzFszir0t9BAM h3,
.JTIzpWAWzFszir0t9BAM h4,
.JTIzpWAWzFszir0t9BAM h5,
.JTIzpWAWzFszir0t9BAM h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}
.JTIzpWAWzFszir0t9BAM h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}
.JTIzpWAWzFszir0t9BAM h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}
.JTIzpWAWzFszir0t9BAM h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}
.JTIzpWAWzFszir0t9BAM h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.875em;
}
.JTIzpWAWzFszir0t9BAM h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.85em;
  color: var(--color-fg-muted);
}
.JTIzpWAWzFszir0t9BAM p {
  margin-top: 0;
  margin-bottom: 10px;
}
.JTIzpWAWzFszir0t9BAM blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: 0.25em solid var(--color-border-default);
}
.JTIzpWAWzFszir0t9BAM ul,
.JTIzpWAWzFszir0t9BAM ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}
.JTIzpWAWzFszir0t9BAM ol ol,
.JTIzpWAWzFszir0t9BAM ul ol {
  list-style-type: lower-roman;
}
.JTIzpWAWzFszir0t9BAM ul ul ol,
.JTIzpWAWzFszir0t9BAM ul ol ol,
.JTIzpWAWzFszir0t9BAM ol ul ol,
.JTIzpWAWzFszir0t9BAM ol ol ol {
  list-style-type: lower-alpha;
}
.JTIzpWAWzFszir0t9BAM dd {
  margin-left: 0;
}
.JTIzpWAWzFszir0t9BAM tt,
.JTIzpWAWzFszir0t9BAM code,
.JTIzpWAWzFszir0t9BAM samp {
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
}
.JTIzpWAWzFszir0t9BAM pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
  word-wrap: normal;
}
.JTIzpWAWzFszir0t9BAM .ZtsvEhcDSF51AlNAw5bX {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}
.JTIzpWAWzFszir0t9BAM input::-webkit-outer-spin-button,
.JTIzpWAWzFszir0t9BAM input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}
.JTIzpWAWzFszir0t9BAM::before {
  display: table;
  content: "";
}
.JTIzpWAWzFszir0t9BAM::after {
  display: table;
  clear: both;
  content: "";
}
.JTIzpWAWzFszir0t9BAM > *:first-child {
  margin-top: 0 !important;
}
.JTIzpWAWzFszir0t9BAM > *:last-child {
  margin-bottom: 0 !important;
}
.JTIzpWAWzFszir0t9BAM a:not([href]) {
  color: inherit;
  text-decoration: none;
}
.JTIzpWAWzFszir0t9BAM .IA6SgHbm0Y7OBhOVhkTA {
  color: var(--color-danger-fg);
}
.JTIzpWAWzFszir0t9BAM .XGxKfA1eh75FuEQvL6pd {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}
.JTIzpWAWzFszir0t9BAM .XGxKfA1eh75FuEQvL6pd:focus {
  outline: none;
}
.JTIzpWAWzFszir0t9BAM p,
.JTIzpWAWzFszir0t9BAM blockquote,
.JTIzpWAWzFszir0t9BAM ul,
.JTIzpWAWzFszir0t9BAM ol,
.JTIzpWAWzFszir0t9BAM dl,
.JTIzpWAWzFszir0t9BAM table,
.JTIzpWAWzFszir0t9BAM pre,
.JTIzpWAWzFszir0t9BAM details {
  margin-top: 0;
  margin-bottom: 16px;
}
.JTIzpWAWzFszir0t9BAM blockquote > :first-child {
  margin-top: 0;
}
.JTIzpWAWzFszir0t9BAM blockquote > :last-child {
  margin-bottom: 0;
}
.JTIzpWAWzFszir0t9BAM h1 .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h2 .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h3 .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h4 .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h5 .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h6 .dWtgNrd2FLAIgXW_saQM {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}
.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd {
  text-decoration: none;
}
.JTIzpWAWzFszir0t9BAM h1:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h2:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h3:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h4:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h5:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM,
.JTIzpWAWzFszir0t9BAM h6:hover .XGxKfA1eh75FuEQvL6pd .dWtgNrd2FLAIgXW_saQM {
  visibility: visible;
}
.JTIzpWAWzFszir0t9BAM h1 tt,
.JTIzpWAWzFszir0t9BAM h1 code,
.JTIzpWAWzFszir0t9BAM h2 tt,
.JTIzpWAWzFszir0t9BAM h2 code,
.JTIzpWAWzFszir0t9BAM h3 tt,
.JTIzpWAWzFszir0t9BAM h3 code,
.JTIzpWAWzFszir0t9BAM h4 tt,
.JTIzpWAWzFszir0t9BAM h4 code,
.JTIzpWAWzFszir0t9BAM h5 tt,
.JTIzpWAWzFszir0t9BAM h5 code,
.JTIzpWAWzFszir0t9BAM h6 tt,
.JTIzpWAWzFszir0t9BAM h6 code {
  padding: 0 0.2em;
  font-size: inherit;
}
.JTIzpWAWzFszir0t9BAM summary h1,
.JTIzpWAWzFszir0t9BAM summary h2,
.JTIzpWAWzFszir0t9BAM summary h3,
.JTIzpWAWzFszir0t9BAM summary h4,
.JTIzpWAWzFszir0t9BAM summary h5,
.JTIzpWAWzFszir0t9BAM summary h6 {
  display: inline-block;
}
.JTIzpWAWzFszir0t9BAM summary h1 .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM summary h2 .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM summary h3 .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM summary h4 .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM summary h5 .XGxKfA1eh75FuEQvL6pd,
.JTIzpWAWzFszir0t9BAM summary h6 .XGxKfA1eh75FuEQvL6pd {
  margin-left: -40px;
}
.JTIzpWAWzFszir0t9BAM summary h1,
.JTIzpWAWzFszir0t9BAM summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}
.JTIzpWAWzFszir0t9BAM ul.Ah464Xli3hvh5g0FxDU6,
.JTIzpWAWzFszir0t9BAM ol.Ah464Xli3hvh5g0FxDU6 {
  padding: 0;
  list-style-type: none;
}
.JTIzpWAWzFszir0t9BAM ol[type=a] {
  list-style-type: lower-alpha;
}
.JTIzpWAWzFszir0t9BAM ol[type=A] {
  list-style-type: upper-alpha;
}
.JTIzpWAWzFszir0t9BAM ol[type=i] {
  list-style-type: lower-roman;
}
.JTIzpWAWzFszir0t9BAM ol[type=I] {
  list-style-type: upper-roman;
}
.JTIzpWAWzFszir0t9BAM ol[type="1"] {
  list-style-type: decimal;
}
.JTIzpWAWzFszir0t9BAM div > ol:not([type]) {
  list-style-type: decimal;
}
.JTIzpWAWzFszir0t9BAM ul ul,
.JTIzpWAWzFszir0t9BAM ul ol,
.JTIzpWAWzFszir0t9BAM ol ol,
.JTIzpWAWzFszir0t9BAM ol ul {
  margin-top: 0;
  margin-bottom: 0;
}
.JTIzpWAWzFszir0t9BAM li > p {
  margin-top: 16px;
}
.JTIzpWAWzFszir0t9BAM li + li {
  margin-top: 0.25em;
}
.JTIzpWAWzFszir0t9BAM dl {
  padding: 0;
}
.JTIzpWAWzFszir0t9BAM dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}
.JTIzpWAWzFszir0t9BAM dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}
.JTIzpWAWzFszir0t9BAM table th {
  font-weight: var(--base-text-weight-semibold, 600);
}
.JTIzpWAWzFszir0t9BAM table th,
.JTIzpWAWzFszir0t9BAM table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}
.JTIzpWAWzFszir0t9BAM table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}
.JTIzpWAWzFszir0t9BAM table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}
.JTIzpWAWzFszir0t9BAM table img {
  background-color: transparent;
}
.JTIzpWAWzFszir0t9BAM img[align=right] {
  padding-left: 20px;
}
.JTIzpWAWzFszir0t9BAM img[align=left] {
  padding-right: 20px;
}
.JTIzpWAWzFszir0t9BAM .ZS4ACM_E97QtVXIrTh0v {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}
.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML {
  display: block;
  overflow: hidden;
}
.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML > span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}
.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML span img {
  display: block;
  float: left;
}
.JTIzpWAWzFszir0t9BAM span.lDnbOZAfGYELmWGezfML span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}
.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw {
  display: block;
  overflow: hidden;
  clear: both;
}
.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}
.JTIzpWAWzFszir0t9BAM span.eu2h77uDdxK5MXdfeTZw span img {
  margin: 0 auto;
  text-align: center;
}
.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ {
  display: block;
  overflow: hidden;
  clear: both;
}
.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ > span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}
.JTIzpWAWzFszir0t9BAM span.JTSEVjrxW64bL21abrdJ span img {
  margin: 0;
  text-align: right;
}
.JTIzpWAWzFszir0t9BAM span.ZfcdU4S5q9EFQYTDAokN {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}
.JTIzpWAWzFszir0t9BAM span.ZfcdU4S5q9EFQYTDAokN span {
  margin: 13px 0 0;
}
.JTIzpWAWzFszir0t9BAM span.RobxFGLXur1Y7UKmUbGc {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}
.JTIzpWAWzFszir0t9BAM span.RobxFGLXur1Y7UKmUbGc > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}
.JTIzpWAWzFszir0t9BAM code,
.JTIzpWAWzFszir0t9BAM tt {
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}
.JTIzpWAWzFszir0t9BAM code br,
.JTIzpWAWzFszir0t9BAM tt br {
  display: none;
}
.JTIzpWAWzFszir0t9BAM del code {
  text-decoration: inherit;
}
.JTIzpWAWzFszir0t9BAM samp {
  font-size: 85%;
}
.JTIzpWAWzFszir0t9BAM pre code {
  font-size: 100%;
}
.JTIzpWAWzFszir0t9BAM pre > code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}
.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 {
  margin-bottom: 16px;
}
.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 pre {
  margin-bottom: 0;
  word-break: normal;
}
.JTIzpWAWzFszir0t9BAM .VdUq4nEhjxaTJ35ZWZj3 pre,
.JTIzpWAWzFszir0t9BAM pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}
.JTIzpWAWzFszir0t9BAM pre code,
.JTIzpWAWzFszir0t9BAM pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}
.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE td,
.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}
.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE .uoPcs60bZ4EnaQf87ive {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}
.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE tr {
  border-top: 0;
}
.JTIzpWAWzFszir0t9BAM .qJTkIFPsS1XetkWVe1wE th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}
.JTIzpWAWzFszir0t9BAM [data-footnote-ref]::before {
  content: "[";
}
.JTIzpWAWzFszir0t9BAM [data-footnote-ref]::after {
  content: "]";
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w ol {
  padding-left: 16px;
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li {
  position: relative;
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w li:target {
  color: var(--color-fg-default);
}
.JTIzpWAWzFszir0t9BAM ._Pddb2RnH2cX9eUvgC3w .W1_qPHD_fO94HaufTQLQ g-emoji {
  font-family: monospace;
}
.JTIzpWAWzFszir0t9BAM .P76fKaPowM9cpiHuRGin {
  color: var(--color-prettylights-syntax-comment);
}
.JTIzpWAWzFszir0t9BAM .jCt3gvtc9gsxyL04trRl,
.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .tPRYQQCLRp36BnHeYwTD {
  color: var(--color-prettylights-syntax-constant);
}
.JTIzpWAWzFszir0t9BAM .mS7Czrsi8R4w6uIk9uyV,
.JTIzpWAWzFszir0t9BAM .fEXlqGWpT9EQeh66CyUA {
  color: var(--color-prettylights-syntax-entity);
}
.JTIzpWAWzFszir0t9BAM .KYRbXZ3_oqIQD_jYmmss,
.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .Onf1xGhm1CyIKCUqv6Vt {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}
.JTIzpWAWzFszir0t9BAM .bML4Cf9GLbf5q17kpKv6 {
  color: var(--color-prettylights-syntax-entity-tag);
}
.JTIzpWAWzFszir0t9BAM .D3WGOCVXjgPFkMdT5njO {
  color: var(--color-prettylights-syntax-keyword);
}
.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ,
.JTIzpWAWzFszir0t9BAM .qqPwBDvIt9NfS3oysOeg,
.JTIzpWAWzFszir0t9BAM .zuy7DTbEbDxX3x9iJjsQ .ngxODS0dsF3_9UYML_jK .Onf1xGhm1CyIKCUqv6Vt,
.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq,
.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .alqCJ_RmYevYOsGV2npQ,
.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq ._JjkFZbcwE5FrjyToawY,
.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .rpODeGZWpCHdQeJ9iNFh {
  color: var(--color-prettylights-syntax-string);
}
.JTIzpWAWzFszir0t9BAM .tPRYQQCLRp36BnHeYwTD,
.JTIzpWAWzFszir0t9BAM .UwBKloNe0dpM10LYc9gH {
  color: var(--color-prettylights-syntax-variable);
}
.JTIzpWAWzFszir0t9BAM .YwnHPpSzGb2oO4ckgFiE {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}
.JTIzpWAWzFszir0t9BAM .xG7JZyGUso7EejDEcqPj {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}
.JTIzpWAWzFszir0t9BAM .HsozdGaRrbnEFskf5GM5 {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}
.JTIzpWAWzFszir0t9BAM .zCzAZcbA0HMroij1e7Zq .alqCJ_RmYevYOsGV2npQ {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}
.JTIzpWAWzFszir0t9BAM .QCudWQ_NcGbMAjWek5zw {
  color: var(--color-prettylights-syntax-markup-list);
}
.JTIzpWAWzFszir0t9BAM .vtRO86GQ58WMpNkZmEFb,
.JTIzpWAWzFszir0t9BAM .vtRO86GQ58WMpNkZmEFb .fEXlqGWpT9EQeh66CyUA,
.JTIzpWAWzFszir0t9BAM .MOLUJS3ucw2wi08L8owu {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}
.JTIzpWAWzFszir0t9BAM .aGEFAwvkd7f_tpL163Xx {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}
.JTIzpWAWzFszir0t9BAM .jKazAlPq8JmjMct4bPxN {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}
.JTIzpWAWzFszir0t9BAM .BvEH7VV6fJeHNG6aIv7M {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}
.JTIzpWAWzFszir0t9BAM .t1DHu4D7tHFAdaNdZexf {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}
.JTIzpWAWzFszir0t9BAM .wgJicwrtajeTkYba3WJS {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}
.JTIzpWAWzFszir0t9BAM .nsuM7TFfymO8yvr95F3_ {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}
.JTIzpWAWzFszir0t9BAM .jPrZaddoZ0MPWaaLf9Hg {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}
.JTIzpWAWzFszir0t9BAM .jkygUO3hOR0HgWl8Vu3I {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}
.JTIzpWAWzFszir0t9BAM ._R72N5SC88lk68CWAN9g {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}
.JTIzpWAWzFszir0t9BAM .HqCHQQDtoZGYCY_Aiuby {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}
.JTIzpWAWzFszir0t9BAM g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}
.JTIzpWAWzFszir0t9BAM g-emoji img {
  width: 1em;
  height: 1em;
}
.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku {
  list-style-type: none;
}
.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku label {
  font-weight: var(--base-text-weight-normal, 400);
}
.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku.juEHlr9g1BeZBlNEC_bS label {
  cursor: pointer;
}
.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku + .z8yi6slqhr75T9wpK_ku {
  margin-top: 4px;
}
.JTIzpWAWzFszir0t9BAM .z8yi6slqhr75T9wpK_ku .JXsFqSdSlkBLe8YHtVHc {
  display: none;
}
.JTIzpWAWzFszir0t9BAM .J6bqF00Yji6efKXcYLqA {
  margin: 0 0.2em 0.25em -1.4em;
  vertical-align: middle;
}
.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:dir(rtl) .J6bqF00Yji6efKXcYLqA {
  margin: 0 -1.6em 0.25em 0.2em;
}
.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3 {
  position: relative;
}
.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:hover .EcA5MpPXXIr0gpYjQhxV,
.JTIzpWAWzFszir0t9BAM .tpfsYJHavqwf9F0ociP3:focus-within .EcA5MpPXXIr0gpYjQhxV {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}
.JTIzpWAWzFszir0t9BAM ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}
`,"",{version:3,sources:["webpack://./node_modules/.pnpm/github-markdown-css@5.2.0/node_modules/github-markdown-css/github-markdown.css"],names:[],mappings:"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",sourcesContent:[`@media (prefers-color-scheme: dark) {
  .markdown-body {
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #c9d1d9;
    --color-fg-muted: #8b949e;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110,118,129,0.4);
    --color-accent-fg: #58a6ff;
    --color-accent-emphasis: #1f6feb;
    --color-attention-subtle: rgba(187,128,9,0.15);
    --color-danger-fg: #f85149;
  }
}

@media (prefers-color-scheme: light) {
  .markdown-body {
    color-scheme: light;
    --color-prettylights-syntax-comment: #6e7781;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #8250df;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #24292f;
    --color-fg-muted: #57606a;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsla(210,18%,87%,1);
    --color-neutral-muted: rgba(175,184,193,0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #cf222e;
  }
}

.markdown-body {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}

.markdown-body .octicon {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}

.markdown-body h1:hover .anchor .octicon-link:before,
.markdown-body h2:hover .anchor .octicon-link:before,
.markdown-body h3:hover .anchor .octicon-link:before,
.markdown-body h4:hover .anchor .octicon-link:before,
.markdown-body h5:hover .anchor .octicon-link:before,
.markdown-body h6:hover .anchor .octicon-link:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
  mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
}

.markdown-body details,
.markdown-body figcaption,
.markdown-body figure {
  display: block;
}

.markdown-body summary {
  display: list-item;
}

.markdown-body [hidden] {
  display: none !important;
}

.markdown-body a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}

.markdown-body abbr[title] {
  border-bottom: none;
  text-decoration: underline dotted;
}

.markdown-body b,
.markdown-body strong {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dfn {
  font-style: italic;
}

.markdown-body h1 {
  margin: .67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}

.markdown-body small {
  font-size: 90%;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body sup {
  top: -0.5em;
}

.markdown-body img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace;
  font-size: 1em;
}

.markdown-body figure {
  margin: 1em 40px;
}

.markdown-body hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: .25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}

.markdown-body input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.markdown-body [type=button],
.markdown-body [type=reset],
.markdown-body [type=submit] {
  -webkit-appearance: button;
}

.markdown-body [type=checkbox],
.markdown-body [type=radio] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body [type=number]::-webkit-inner-spin-button,
.markdown-body [type=number]::-webkit-outer-spin-button {
  height: auto;
}

.markdown-body [type=search]::-webkit-search-cancel-button,
.markdown-body [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.markdown-body ::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

.markdown-body ::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

.markdown-body a:hover {
  text-decoration: underline;
}

.markdown-body ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}

.markdown-body hr::before {
  display: table;
  content: "";
}

.markdown-body hr::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body details summary {
  cursor: pointer;
}

.markdown-body details:not([open])>*:not(summary) {
  display: none !important;
}

.markdown-body a:focus,
.markdown-body [role=button]:focus,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:focus:not(:focus-visible),
.markdown-body [role=button]:focus:not(:focus-visible),
.markdown-body input[type=radio]:focus:not(:focus-visible),
.markdown-body input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}

.markdown-body a:focus-visible,
.markdown-body [role=button]:focus-visible,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:not([class]):focus,
.markdown-body a:not([class]):focus-visible,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus,
.markdown-body input[type=checkbox]:focus-visible {
  outline-offset: 0;
}

.markdown-body kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}

.markdown-body h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}

.markdown-body h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}

.markdown-body h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .875em;
}

.markdown-body h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .85em;
  color: var(--color-fg-muted);
}

.markdown-body p {
  margin-top: 0;
  margin-bottom: 10px;
}

.markdown-body blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: .25em solid var(--color-border-default);
}

.markdown-body ul,
.markdown-body ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body tt,
.markdown-body code,
.markdown-body samp {
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
  word-wrap: normal;
}

.markdown-body .octicon {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}

.markdown-body input::-webkit-outer-spin-button,
.markdown-body input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}

.markdown-body::before {
  display: table;
  content: "";
}

.markdown-body::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body>*:first-child {
  margin-top: 0 !important;
}

.markdown-body>*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body a:not([href]) {
  color: inherit;
  text-decoration: none;
}

.markdown-body .absent {
  color: var(--color-danger-fg);
}

.markdown-body .anchor {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}

.markdown-body .anchor:focus {
  outline: none;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body details {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body blockquote>:first-child {
  margin-top: 0;
}

.markdown-body blockquote>:last-child {
  margin-bottom: 0;
}

.markdown-body h1 .octicon-link,
.markdown-body h2 .octicon-link,
.markdown-body h3 .octicon-link,
.markdown-body h4 .octicon-link,
.markdown-body h5 .octicon-link,
.markdown-body h6 .octicon-link {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}

.markdown-body h1:hover .anchor,
.markdown-body h2:hover .anchor,
.markdown-body h3:hover .anchor,
.markdown-body h4:hover .anchor,
.markdown-body h5:hover .anchor,
.markdown-body h6:hover .anchor {
  text-decoration: none;
}

.markdown-body h1:hover .anchor .octicon-link,
.markdown-body h2:hover .anchor .octicon-link,
.markdown-body h3:hover .anchor .octicon-link,
.markdown-body h4:hover .anchor .octicon-link,
.markdown-body h5:hover .anchor .octicon-link,
.markdown-body h6:hover .anchor .octicon-link {
  visibility: visible;
}

.markdown-body h1 tt,
.markdown-body h1 code,
.markdown-body h2 tt,
.markdown-body h2 code,
.markdown-body h3 tt,
.markdown-body h3 code,
.markdown-body h4 tt,
.markdown-body h4 code,
.markdown-body h5 tt,
.markdown-body h5 code,
.markdown-body h6 tt,
.markdown-body h6 code {
  padding: 0 .2em;
  font-size: inherit;
}

.markdown-body summary h1,
.markdown-body summary h2,
.markdown-body summary h3,
.markdown-body summary h4,
.markdown-body summary h5,
.markdown-body summary h6 {
  display: inline-block;
}

.markdown-body summary h1 .anchor,
.markdown-body summary h2 .anchor,
.markdown-body summary h3 .anchor,
.markdown-body summary h4 .anchor,
.markdown-body summary h5 .anchor,
.markdown-body summary h6 .anchor {
  margin-left: -40px;
}

.markdown-body summary h1,
.markdown-body summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}

.markdown-body ul.no-list,
.markdown-body ol.no-list {
  padding: 0;
  list-style-type: none;
}

.markdown-body ol[type=a] {
  list-style-type: lower-alpha;
}

.markdown-body ol[type=A] {
  list-style-type: upper-alpha;
}

.markdown-body ol[type=i] {
  list-style-type: lower-roman;
}

.markdown-body ol[type=I] {
  list-style-type: upper-roman;
}

.markdown-body ol[type="1"] {
  list-style-type: decimal;
}

.markdown-body div>ol:not([type]) {
  list-style-type: decimal;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li>p {
  margin-top: 16px;
}

.markdown-body li+li {
  margin-top: .25em;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body table th {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}

.markdown-body table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}

.markdown-body table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}

.markdown-body table img {
  background-color: transparent;
}

.markdown-body img[align=right] {
  padding-left: 20px;
}

.markdown-body img[align=left] {
  padding-right: 20px;
}

.markdown-body .emoji {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}

.markdown-body span.frame {
  display: block;
  overflow: hidden;
}

.markdown-body span.frame>span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}

.markdown-body span.frame span img {
  display: block;
  float: left;
}

.markdown-body span.frame span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}

.markdown-body span.align-center {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-center>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}

.markdown-body span.align-center span img {
  margin: 0 auto;
  text-align: center;
}

.markdown-body span.align-right {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-right>span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body span.align-right span img {
  margin: 0;
  text-align: right;
}

.markdown-body span.float-left {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}

.markdown-body span.float-left span {
  margin: 13px 0 0;
}

.markdown-body span.float-right {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}

.markdown-body span.float-right>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body code,
.markdown-body tt {
  padding: .2em .4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}

.markdown-body code br,
.markdown-body tt br {
  display: none;
}

.markdown-body del code {
  text-decoration: inherit;
}

.markdown-body samp {
  font-size: 85%;
}

.markdown-body pre code {
  font-size: 100%;
}

.markdown-body pre>code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .highlight {
  margin-bottom: 16px;
}

.markdown-body .highlight pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body .highlight pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}

.markdown-body pre code,
.markdown-body pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body .csv-data td,
.markdown-body .csv-data th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}

.markdown-body .csv-data .blob-num {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}

.markdown-body .csv-data tr {
  border-top: 0;
}

.markdown-body .csv-data th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}

.markdown-body [data-footnote-ref]::before {
  content: "[";
}

.markdown-body [data-footnote-ref]::after {
  content: "]";
}

.markdown-body .footnotes {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}

.markdown-body .footnotes ol {
  padding-left: 16px;
}

.markdown-body .footnotes ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}

.markdown-body .footnotes li {
  position: relative;
}

.markdown-body .footnotes li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}

.markdown-body .footnotes li:target {
  color: var(--color-fg-default);
}

.markdown-body .footnotes .data-footnote-backref g-emoji {
  font-family: monospace;
}

.markdown-body .pl-c {
  color: var(--color-prettylights-syntax-comment);
}

.markdown-body .pl-c1,
.markdown-body .pl-s .pl-v {
  color: var(--color-prettylights-syntax-constant);
}

.markdown-body .pl-e,
.markdown-body .pl-en {
  color: var(--color-prettylights-syntax-entity);
}

.markdown-body .pl-smi,
.markdown-body .pl-s .pl-s1 {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}

.markdown-body .pl-ent {
  color: var(--color-prettylights-syntax-entity-tag);
}

.markdown-body .pl-k {
  color: var(--color-prettylights-syntax-keyword);
}

.markdown-body .pl-s,
.markdown-body .pl-pds,
.markdown-body .pl-s .pl-pse .pl-s1,
.markdown-body .pl-sr,
.markdown-body .pl-sr .pl-cce,
.markdown-body .pl-sr .pl-sre,
.markdown-body .pl-sr .pl-sra {
  color: var(--color-prettylights-syntax-string);
}

.markdown-body .pl-v,
.markdown-body .pl-smw {
  color: var(--color-prettylights-syntax-variable);
}

.markdown-body .pl-bu {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}

.markdown-body .pl-ii {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}

.markdown-body .pl-c2 {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}

.markdown-body .pl-sr .pl-cce {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}

.markdown-body .pl-ml {
  color: var(--color-prettylights-syntax-markup-list);
}

.markdown-body .pl-mh,
.markdown-body .pl-mh .pl-en,
.markdown-body .pl-ms {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}

.markdown-body .pl-mi {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}

.markdown-body .pl-mb {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}

.markdown-body .pl-md {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}

.markdown-body .pl-mi1 {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}

.markdown-body .pl-mc {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}

.markdown-body .pl-mi2 {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}

.markdown-body .pl-mdr {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}

.markdown-body .pl-ba {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}

.markdown-body .pl-sg {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}

.markdown-body .pl-corl {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}

.markdown-body g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}

.markdown-body g-emoji img {
  width: 1em;
  height: 1em;
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item label {
  font-weight: var(--base-text-weight-normal, 400);
}

.markdown-body .task-list-item.enabled label {
  cursor: pointer;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 4px;
}

.markdown-body .task-list-item .handle {
  display: none;
}

.markdown-body .task-list-item-checkbox {
  margin: 0 .2em .25em -1.4em;
  vertical-align: middle;
}

.markdown-body .contains-task-list:dir(rtl) .task-list-item-checkbox {
  margin: 0 -1.6em .25em .2em;
}

.markdown-body .contains-task-list {
  position: relative;
}

.markdown-body .contains-task-list:hover .task-list-item-convert-container,
.markdown-body .contains-task-list:focus-within .task-list-item-convert-container {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}

.markdown-body ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}
`],sourceRoot:""}]),U.locals={"markdown-body":"JTIzpWAWzFszir0t9BAM",octicon:"ZtsvEhcDSF51AlNAw5bX",anchor:"XGxKfA1eh75FuEQvL6pd","octicon-link":"dWtgNrd2FLAIgXW_saQM",absent:"IA6SgHbm0Y7OBhOVhkTA","no-list":"Ah464Xli3hvh5g0FxDU6",emoji:"ZS4ACM_E97QtVXIrTh0v",frame:"lDnbOZAfGYELmWGezfML","align-center":"eu2h77uDdxK5MXdfeTZw","align-right":"JTSEVjrxW64bL21abrdJ","float-left":"ZfcdU4S5q9EFQYTDAokN","float-right":"RobxFGLXur1Y7UKmUbGc",highlight:"VdUq4nEhjxaTJ35ZWZj3","csv-data":"qJTkIFPsS1XetkWVe1wE","blob-num":"uoPcs60bZ4EnaQf87ive",footnotes:"_Pddb2RnH2cX9eUvgC3w","data-footnote-backref":"W1_qPHD_fO94HaufTQLQ","pl-c":"P76fKaPowM9cpiHuRGin","pl-c1":"jCt3gvtc9gsxyL04trRl","pl-s":"zuy7DTbEbDxX3x9iJjsQ","pl-v":"tPRYQQCLRp36BnHeYwTD","pl-e":"mS7Czrsi8R4w6uIk9uyV","pl-en":"fEXlqGWpT9EQeh66CyUA","pl-smi":"KYRbXZ3_oqIQD_jYmmss","pl-s1":"Onf1xGhm1CyIKCUqv6Vt","pl-ent":"bML4Cf9GLbf5q17kpKv6","pl-k":"D3WGOCVXjgPFkMdT5njO","pl-pds":"qqPwBDvIt9NfS3oysOeg","pl-pse":"ngxODS0dsF3_9UYML_jK","pl-sr":"zCzAZcbA0HMroij1e7Zq","pl-cce":"alqCJ_RmYevYOsGV2npQ","pl-sre":"_JjkFZbcwE5FrjyToawY","pl-sra":"rpODeGZWpCHdQeJ9iNFh","pl-smw":"UwBKloNe0dpM10LYc9gH","pl-bu":"YwnHPpSzGb2oO4ckgFiE","pl-ii":"xG7JZyGUso7EejDEcqPj","pl-c2":"HsozdGaRrbnEFskf5GM5","pl-ml":"QCudWQ_NcGbMAjWek5zw","pl-mh":"vtRO86GQ58WMpNkZmEFb","pl-ms":"MOLUJS3ucw2wi08L8owu","pl-mi":"aGEFAwvkd7f_tpL163Xx","pl-mb":"jKazAlPq8JmjMct4bPxN","pl-md":"BvEH7VV6fJeHNG6aIv7M","pl-mi1":"t1DHu4D7tHFAdaNdZexf","pl-mc":"wgJicwrtajeTkYba3WJS","pl-mi2":"nsuM7TFfymO8yvr95F3_","pl-mdr":"jPrZaddoZ0MPWaaLf9Hg","pl-ba":"jkygUO3hOR0HgWl8Vu3I","pl-sg":"_R72N5SC88lk68CWAN9g","pl-corl":"HqCHQQDtoZGYCY_Aiuby","task-list-item":"z8yi6slqhr75T9wpK_ku",enabled:"juEHlr9g1BeZBlNEC_bS",handle:"JXsFqSdSlkBLe8YHtVHc","task-list-item-checkbox":"J6bqF00Yji6efKXcYLqA","contains-task-list":"tpfsYJHavqwf9F0ociP3","task-list-item-convert-container":"EcA5MpPXXIr0gpYjQhxV"};const et=U},5948:(Rt,H,c)=>{var b,B=c(4158);b={value:!0},H.Z=void 0;var N=B(c(9635)),rt=c(8385),at=(0,N.default)((0,rt.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete");H.Z=at},5119:(Rt,H,c)=>{var b,B=c(4158);b={value:!0},H.Z=void 0;var N=B(c(9635)),rt=c(8385),at=(0,N.default)((0,rt.jsx)("path",{d:"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"}),"Inbox");H.Z=at},4529:(Rt,H,c)=>{c.d(H,{Z:()=>yt});var b=c(617),B=c(8348),N=c(4075),rt=c(8252),at=c(1430);function dt(p,y){const x=(0,at.Z)({},y);return Object.keys(p).forEach(M=>{if(M.toString().match(/^(components|slots)$/))x[M]=(0,at.Z)({},p[M],x[M]);else if(M.toString().match(/^(componentsProps|slotProps)$/)){const j=p[M]||{},Q=y[M];x[M]={},!Q||!Object.keys(Q)?x[M]=j:!j||!Object.keys(j)?x[M]=Q:(x[M]=(0,at.Z)({},Q),Object.keys(j).forEach(it=>{x[M][it]=dt(j[it],Q[it])}))}else x[M]===void 0&&(x[M]=p[M])}),x}var st=c(3621),U=c(8154),tt=c(345),et=c(1488),ct=c(6335),V=c(9390),It=c(8026),pt=c(2041);function ft(p){return(0,pt.Z)("MuiButton",p)}const ht=(0,It.Z)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]),xt=N.createContext({});var G=c(8385);const mt=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],J=p=>{const{color:y,disableElevation:x,fullWidth:M,size:j,variant:Q,classes:it}=p,Bt={root:["root",Q,`${Q}${(0,V.Z)(y)}`,`size${(0,V.Z)(j)}`,`${Q}Size${(0,V.Z)(j)}`,y==="inherit"&&"colorInherit",x&&"disableElevation",M&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,V.Z)(j)}`],endIcon:["endIcon",`iconSize${(0,V.Z)(j)}`]},Tt=(0,st.Z)(Bt,ft,it);return(0,B.Z)({},it,Tt)},O=p=>(0,B.Z)({},p.size==="small"&&{"& > *:nth-of-type(1)":{fontSize:18}},p.size==="medium"&&{"& > *:nth-of-type(1)":{fontSize:20}},p.size==="large"&&{"& > *:nth-of-type(1)":{fontSize:22}}),I=(0,tt.ZP)(ct.Z,{shouldForwardProp:p=>(0,tt.FO)(p)||p==="classes",name:"MuiButton",slot:"Root",overridesResolver:(p,y)=>{const{ownerState:x}=p;return[y.root,y[x.variant],y[`${x.variant}${(0,V.Z)(x.color)}`],y[`size${(0,V.Z)(x.size)}`],y[`${x.variant}Size${(0,V.Z)(x.size)}`],x.color==="inherit"&&y.colorInherit,x.disableElevation&&y.disableElevation,x.fullWidth&&y.fullWidth]}})(({theme:p,ownerState:y})=>{var x,M;const j=p.palette.mode==="light"?p.palette.grey[300]:p.palette.grey[800],Q=p.palette.mode==="light"?p.palette.grey.A100:p.palette.grey[700];return(0,B.Z)({},p.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(p.vars||p).shape.borderRadius,transition:p.transitions.create(["background-color","box-shadow","border-color","color"],{duration:p.transitions.duration.short}),"&:hover":(0,B.Z)({textDecoration:"none",backgroundColor:p.vars?`rgba(${p.vars.palette.text.primaryChannel} / ${p.vars.palette.action.hoverOpacity})`:(0,U.Fq)(p.palette.text.primary,p.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},y.variant==="text"&&y.color!=="inherit"&&{backgroundColor:p.vars?`rgba(${p.vars.palette[y.color].mainChannel} / ${p.vars.palette.action.hoverOpacity})`:(0,U.Fq)(p.palette[y.color].main,p.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},y.variant==="outlined"&&y.color!=="inherit"&&{border:`1px solid ${(p.vars||p).palette[y.color].main}`,backgroundColor:p.vars?`rgba(${p.vars.palette[y.color].mainChannel} / ${p.vars.palette.action.hoverOpacity})`:(0,U.Fq)(p.palette[y.color].main,p.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},y.variant==="contained"&&{backgroundColor:p.vars?p.vars.palette.Button.inheritContainedHoverBg:Q,boxShadow:(p.vars||p).shadows[4],"@media (hover: none)":{boxShadow:(p.vars||p).shadows[2],backgroundColor:(p.vars||p).palette.grey[300]}},y.variant==="contained"&&y.color!=="inherit"&&{backgroundColor:(p.vars||p).palette[y.color].dark,"@media (hover: none)":{backgroundColor:(p.vars||p).palette[y.color].main}}),"&:active":(0,B.Z)({},y.variant==="contained"&&{boxShadow:(p.vars||p).shadows[8]}),[`&.${ht.focusVisible}`]:(0,B.Z)({},y.variant==="contained"&&{boxShadow:(p.vars||p).shadows[6]}),[`&.${ht.disabled}`]:(0,B.Z)({color:(p.vars||p).palette.action.disabled},y.variant==="outlined"&&{border:`1px solid ${(p.vars||p).palette.action.disabledBackground}`},y.variant==="contained"&&{color:(p.vars||p).palette.action.disabled,boxShadow:(p.vars||p).shadows[0],backgroundColor:(p.vars||p).palette.action.disabledBackground})},y.variant==="text"&&{padding:"6px 8px"},y.variant==="text"&&y.color!=="inherit"&&{color:(p.vars||p).palette[y.color].main},y.variant==="outlined"&&{padding:"5px 15px",border:"1px solid currentColor"},y.variant==="outlined"&&y.color!=="inherit"&&{color:(p.vars||p).palette[y.color].main,border:p.vars?`1px solid rgba(${p.vars.palette[y.color].mainChannel} / 0.5)`:`1px solid ${(0,U.Fq)(p.palette[y.color].main,.5)}`},y.variant==="contained"&&{color:p.vars?p.vars.palette.text.primary:(x=(M=p.palette).getContrastText)==null?void 0:x.call(M,p.palette.grey[300]),backgroundColor:p.vars?p.vars.palette.Button.inheritContainedBg:j,boxShadow:(p.vars||p).shadows[2]},y.variant==="contained"&&y.color!=="inherit"&&{color:(p.vars||p).palette[y.color].contrastText,backgroundColor:(p.vars||p).palette[y.color].main},y.color==="inherit"&&{color:"inherit",borderColor:"currentColor"},y.size==="small"&&y.variant==="text"&&{padding:"4px 5px",fontSize:p.typography.pxToRem(13)},y.size==="large"&&y.variant==="text"&&{padding:"8px 11px",fontSize:p.typography.pxToRem(15)},y.size==="small"&&y.variant==="outlined"&&{padding:"3px 9px",fontSize:p.typography.pxToRem(13)},y.size==="large"&&y.variant==="outlined"&&{padding:"7px 21px",fontSize:p.typography.pxToRem(15)},y.size==="small"&&y.variant==="contained"&&{padding:"4px 10px",fontSize:p.typography.pxToRem(13)},y.size==="large"&&y.variant==="contained"&&{padding:"8px 22px",fontSize:p.typography.pxToRem(15)},y.fullWidth&&{width:"100%"})},({ownerState:p})=>p.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${ht.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${ht.disabled}`]:{boxShadow:"none"}}),_=(0,tt.ZP)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(p,y)=>{const{ownerState:x}=p;return[y.startIcon,y[`iconSize${(0,V.Z)(x.size)}`]]}})(({ownerState:p})=>(0,B.Z)({display:"inherit",marginRight:8,marginLeft:-4},p.size==="small"&&{marginLeft:-2},O(p))),Ft=(0,tt.ZP)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(p,y)=>{const{ownerState:x}=p;return[y.endIcon,y[`iconSize${(0,V.Z)(x.size)}`]]}})(({ownerState:p})=>(0,B.Z)({display:"inherit",marginRight:-4,marginLeft:8},p.size==="small"&&{marginRight:-2},O(p))),yt=N.forwardRef(function(y,x){const M=N.useContext(xt),j=dt(M,y),Q=(0,et.Z)({props:j,name:"MuiButton"}),{children:it,color:Bt="primary",component:Tt="button",className:E,disabled:Z=!1,disableElevation:Y=!1,disableFocusRipple:q=!1,endIcon:v,focusVisibleClassName:k,fullWidth:kt=!1,size:zt="medium",startIcon:At,type:wt,variant:Wt="text"}=Q,Pt=(0,b.Z)(Q,mt),vt=(0,B.Z)({},Q,{color:Bt,component:Tt,disabled:Z,disableElevation:Y,disableFocusRipple:q,fullWidth:kt,size:zt,type:wt,variant:Wt}),Dt=J(vt),qt=At&&(0,G.jsx)(_,{className:Dt.startIcon,ownerState:vt,children:At}),jt=v&&(0,G.jsx)(Ft,{className:Dt.endIcon,ownerState:vt,children:v});return(0,G.jsxs)(I,(0,B.Z)({ownerState:vt,className:(0,rt.Z)(M.className,Dt.root,E),component:Tt,disabled:Z,focusRipple:!q,focusVisibleClassName:(0,rt.Z)(Dt.focusVisible,k),ref:x,type:wt},Pt,{classes:Dt,children:[qt,it,jt]}))})},5292:(Rt,H,c)=>{c.d(H,{Z:()=>y});var b=c(617),B=c(8348),N=c(4075),rt=c(8252),at=c(3621),dt=c(9312),st=c(9390),U=c(1488),tt=c(345),et=c(8026),ct=c(2041);function V(x){return(0,ct.Z)("MuiCircularProgress",x)}const It=(0,et.Z)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]),pt=null;var ft=c(8385);const Mt=["className","color","disableShrink","size","style","thickness","value","variant"];let ht=x=>x,Zt,xt,G,mt;const J=44,O=(0,dt.F4)(Zt||(Zt=ht`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),I=(0,dt.F4)(xt||(xt=ht`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),_=x=>{const{classes:M,variant:j,color:Q,disableShrink:it}=x,Bt={root:["root",j,`color${(0,st.Z)(Q)}`],svg:["svg"],circle:["circle",`circle${(0,st.Z)(j)}`,it&&"circleDisableShrink"]};return(0,at.Z)(Bt,V,M)},Ft=(0,tt.ZP)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(x,M)=>{const{ownerState:j}=x;return[M.root,M[j.variant],M[`color${(0,st.Z)(j.color)}`]]}})(({ownerState:x,theme:M})=>(0,B.Z)({display:"inline-block"},x.variant==="determinate"&&{transition:M.transitions.create("transform")},x.color!=="inherit"&&{color:(M.vars||M).palette[x.color].main}),({ownerState:x})=>x.variant==="indeterminate"&&(0,dt.iv)(G||(G=ht`
      animation: ${0} 1.4s linear infinite;
    `),O)),bt=(0,tt.ZP)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(x,M)=>M.svg})({display:"block"}),yt=(0,tt.ZP)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(x,M)=>{const{ownerState:j}=x;return[M.circle,M[`circle${(0,st.Z)(j.variant)}`],j.disableShrink&&M.circleDisableShrink]}})(({ownerState:x,theme:M})=>(0,B.Z)({stroke:"currentColor"},x.variant==="determinate"&&{transition:M.transitions.create("stroke-dashoffset")},x.variant==="indeterminate"&&{strokeDasharray:"80px, 200px",strokeDashoffset:0}),({ownerState:x})=>x.variant==="indeterminate"&&!x.disableShrink&&(0,dt.iv)(mt||(mt=ht`
      animation: ${0} 1.4s ease-in-out infinite;
    `),I)),y=N.forwardRef(function(M,j){const Q=(0,U.Z)({props:M,name:"MuiCircularProgress"}),{className:it,color:Bt="primary",disableShrink:Tt=!1,size:E=40,style:Z,thickness:Y=3.6,value:q=0,variant:v="indeterminate"}=Q,k=(0,b.Z)(Q,Mt),kt=(0,B.Z)({},Q,{color:Bt,disableShrink:Tt,size:E,thickness:Y,value:q,variant:v}),zt=_(kt),At={},wt={},Wt={};if(v==="determinate"){const Pt=2*Math.PI*((J-Y)/2);At.strokeDasharray=Pt.toFixed(3),Wt["aria-valuenow"]=Math.round(q),At.strokeDashoffset=`${((100-q)/100*Pt).toFixed(3)}px`,wt.transform="rotate(-90deg)"}return(0,ft.jsx)(Ft,(0,B.Z)({className:(0,rt.Z)(zt.root,it),style:(0,B.Z)({width:E,height:E},wt,Z),ownerState:kt,ref:j,role:"progressbar"},Wt,k,{children:(0,ft.jsx)(bt,{className:zt.svg,ownerState:kt,viewBox:`${J/2} ${J/2} ${J} ${J}`,children:(0,ft.jsx)(yt,{className:zt.circle,style:At,ownerState:kt,cx:J,cy:J,r:(J-Y)/2,fill:"none",strokeWidth:Y})})}))})},5421:(Rt,H,c)=>{c.d(H,{Z:()=>mt});var b=c(617),B=c(8348),N=c(4075),rt=c(8252),at=c(3621),dt=c(8154),st=c(345),U=c(1488),tt=c(6335),et=c(9390),ct=c(8026),V=c(2041);function It(J){return(0,V.Z)("MuiIconButton",J)}const ft=(0,ct.Z)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var Mt=c(8385);const ht=["edge","children","className","color","disabled","disableFocusRipple","size"],Zt=J=>{const{classes:O,disabled:I,color:_,edge:Ft,size:bt}=J,yt={root:["root",I&&"disabled",_!=="default"&&`color${(0,et.Z)(_)}`,Ft&&`edge${(0,et.Z)(Ft)}`,`size${(0,et.Z)(bt)}`]};return(0,at.Z)(yt,It,O)},xt=(0,st.ZP)(tt.Z,{name:"MuiIconButton",slot:"Root",overridesResolver:(J,O)=>{const{ownerState:I}=J;return[O.root,I.color!=="default"&&O[`color${(0,et.Z)(I.color)}`],I.edge&&O[`edge${(0,et.Z)(I.edge)}`],O[`size${(0,et.Z)(I.size)}`]]}})(({theme:J,ownerState:O})=>(0,B.Z)({textAlign:"center",flex:"0 0 auto",fontSize:J.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(J.vars||J).palette.action.active,transition:J.transitions.create("background-color",{duration:J.transitions.duration.shortest})},!O.disableRipple&&{"&:hover":{backgroundColor:J.vars?`rgba(${J.vars.palette.action.activeChannel} / ${J.vars.palette.action.hoverOpacity})`:(0,dt.Fq)(J.palette.action.active,J.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},O.edge==="start"&&{marginLeft:O.size==="small"?-3:-12},O.edge==="end"&&{marginRight:O.size==="small"?-3:-12}),({theme:J,ownerState:O})=>{var I;const _=(I=(J.vars||J).palette)==null?void 0:I[O.color];return(0,B.Z)({},O.color==="inherit"&&{color:"inherit"},O.color!=="inherit"&&O.color!=="default"&&(0,B.Z)({color:_==null?void 0:_.main},!O.disableRipple&&{"&:hover":(0,B.Z)({},_&&{backgroundColor:J.vars?`rgba(${_.mainChannel} / ${J.vars.palette.action.hoverOpacity})`:(0,dt.Fq)(_.main,J.palette.action.hoverOpacity)},{"@media (hover: none)":{backgroundColor:"transparent"}})}),O.size==="small"&&{padding:5,fontSize:J.typography.pxToRem(18)},O.size==="large"&&{padding:12,fontSize:J.typography.pxToRem(28)},{[`&.${ft.disabled}`]:{backgroundColor:"transparent",color:(J.vars||J).palette.action.disabled}})}),mt=N.forwardRef(function(O,I){const _=(0,U.Z)({props:O,name:"MuiIconButton"}),{edge:Ft=!1,children:bt,className:yt,color:p="default",disabled:y=!1,disableFocusRipple:x=!1,size:M="medium"}=_,j=(0,b.Z)(_,ht),Q=(0,B.Z)({},_,{edge:Ft,color:p,disabled:y,disableFocusRipple:x,size:M}),it=Zt(Q);return(0,Mt.jsx)(xt,(0,B.Z)({className:(0,rt.Z)(it.root,yt),centerRipple:!0,focusRipple:!x,disabled:y,ref:I,ownerState:Q},j,{children:bt}))})},4017:(Rt,H,c)=>{c.d(H,{Z:()=>xt});var b=c(617),B=c(8348),N=c(4075),rt=c(8252),at=c(3621),dt=c(345),st=c(1488),U=c(8026),tt=c(2041);function et(G){return(0,tt.Z)("MuiListItemIcon",G)}const ct=(0,U.Z)("MuiListItemIcon",["root","alignItemsFlexStart"]),V=null;var It=c(8936),pt=c(8385);const ft=["className"],Mt=G=>{const{alignItems:mt,classes:J}=G,O={root:["root",mt==="flex-start"&&"alignItemsFlexStart"]};return(0,at.Z)(O,et,J)},ht=(0,dt.ZP)("div",{name:"MuiListItemIcon",slot:"Root",overridesResolver:(G,mt)=>{const{ownerState:J}=G;return[mt.root,J.alignItems==="flex-start"&&mt.alignItemsFlexStart]}})(({theme:G,ownerState:mt})=>(0,B.Z)({minWidth:56,color:(G.vars||G).palette.action.active,flexShrink:0,display:"inline-flex"},mt.alignItems==="flex-start"&&{marginTop:8})),xt=N.forwardRef(function(mt,J){const O=(0,st.Z)({props:mt,name:"MuiListItemIcon"}),{className:I}=O,_=(0,b.Z)(O,ft),Ft=N.useContext(It.Z),bt=(0,B.Z)({},O,{alignItems:Ft.alignItems}),yt=Mt(bt);return(0,pt.jsx)(ht,(0,B.Z)({className:(0,rt.Z)(yt.root,I),ownerState:bt,ref:J},_))})},2258:(Rt,H,c)=>{c.d(H,{ZP:()=>Tt});var b=c(617),B=c(8348),N=c(4075),rt=c(8252),at=c(3621),dt=c(2096),st=c(8154),U=c(345),tt=c(1488),et=c(6335),ct=c(9518),V=c(8266),It=c(6510),pt=c(8936),ft=c(8026),Mt=c(2041);function ht(E){return(0,Mt.Z)("MuiListItem",E)}const xt=(0,ft.Z)("MuiListItem",["root","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","padding","button","secondaryAction","selected"]);var G=c(6997);function mt(E){return(0,Mt.Z)("MuiListItemSecondaryAction",E)}const J=(0,ft.Z)("MuiListItemSecondaryAction",["root","disableGutters"]),O=null;var I=c(8385);const _=["className"],Ft=E=>{const{disableGutters:Z,classes:Y}=E,q={root:["root",Z&&"disableGutters"]};return(0,at.Z)(q,mt,Y)},bt=(0,U.ZP)("div",{name:"MuiListItemSecondaryAction",slot:"Root",overridesResolver:(E,Z)=>{const{ownerState:Y}=E;return[Z.root,Y.disableGutters&&Z.disableGutters]}})(({ownerState:E})=>(0,B.Z)({position:"absolute",right:16,top:"50%",transform:"translateY(-50%)"},E.disableGutters&&{right:0})),yt=N.forwardRef(function(Z,Y){const q=(0,tt.Z)({props:Z,name:"MuiListItemSecondaryAction"}),{className:v}=q,k=(0,b.Z)(q,_),kt=N.useContext(pt.Z),zt=(0,B.Z)({},q,{disableGutters:kt.disableGutters}),At=Ft(zt);return(0,I.jsx)(bt,(0,B.Z)({className:(0,rt.Z)(At.root,v),ownerState:zt,ref:Y},k))});yt.muiName="ListItemSecondaryAction";const p=yt,y=["className"],x=["alignItems","autoFocus","button","children","className","component","components","componentsProps","ContainerComponent","ContainerProps","dense","disabled","disableGutters","disablePadding","divider","focusVisibleClassName","secondaryAction","selected","slotProps","slots"],M=(E,Z)=>{const{ownerState:Y}=E;return[Z.root,Y.dense&&Z.dense,Y.alignItems==="flex-start"&&Z.alignItemsFlexStart,Y.divider&&Z.divider,!Y.disableGutters&&Z.gutters,!Y.disablePadding&&Z.padding,Y.button&&Z.button,Y.hasSecondaryAction&&Z.secondaryAction]},j=E=>{const{alignItems:Z,button:Y,classes:q,dense:v,disabled:k,disableGutters:kt,disablePadding:zt,divider:At,hasSecondaryAction:wt,selected:Wt}=E,Pt={root:["root",v&&"dense",!kt&&"gutters",!zt&&"padding",At&&"divider",k&&"disabled",Y&&"button",Z==="flex-start"&&"alignItemsFlexStart",wt&&"secondaryAction",Wt&&"selected"],container:["container"]};return(0,at.Z)(Pt,ht,q)},Q=(0,U.ZP)("div",{name:"MuiListItem",slot:"Root",overridesResolver:M})(({theme:E,ownerState:Z})=>(0,B.Z)({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left"},!Z.disablePadding&&(0,B.Z)({paddingTop:8,paddingBottom:8},Z.dense&&{paddingTop:4,paddingBottom:4},!Z.disableGutters&&{paddingLeft:16,paddingRight:16},!!Z.secondaryAction&&{paddingRight:48}),!!Z.secondaryAction&&{[`& > .${G.Z.root}`]:{paddingRight:48}},{[`&.${xt.focusVisible}`]:{backgroundColor:(E.vars||E).palette.action.focus},[`&.${xt.selected}`]:{backgroundColor:E.vars?`rgba(${E.vars.palette.primary.mainChannel} / ${E.vars.palette.action.selectedOpacity})`:(0,st.Fq)(E.palette.primary.main,E.palette.action.selectedOpacity),[`&.${xt.focusVisible}`]:{backgroundColor:E.vars?`rgba(${E.vars.palette.primary.mainChannel} / calc(${E.vars.palette.action.selectedOpacity} + ${E.vars.palette.action.focusOpacity}))`:(0,st.Fq)(E.palette.primary.main,E.palette.action.selectedOpacity+E.palette.action.focusOpacity)}},[`&.${xt.disabled}`]:{opacity:(E.vars||E).palette.action.disabledOpacity}},Z.alignItems==="flex-start"&&{alignItems:"flex-start"},Z.divider&&{borderBottom:`1px solid ${(E.vars||E).palette.divider}`,backgroundClip:"padding-box"},Z.button&&{transition:E.transitions.create("background-color",{duration:E.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(E.vars||E).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${xt.selected}:hover`]:{backgroundColor:E.vars?`rgba(${E.vars.palette.primary.mainChannel} / calc(${E.vars.palette.action.selectedOpacity} + ${E.vars.palette.action.hoverOpacity}))`:(0,st.Fq)(E.palette.primary.main,E.palette.action.selectedOpacity+E.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:E.vars?`rgba(${E.vars.palette.primary.mainChannel} / ${E.vars.palette.action.selectedOpacity})`:(0,st.Fq)(E.palette.primary.main,E.palette.action.selectedOpacity)}}},Z.hasSecondaryAction&&{paddingRight:48})),it=(0,U.ZP)("li",{name:"MuiListItem",slot:"Container",overridesResolver:(E,Z)=>Z.container})({position:"relative"}),Tt=N.forwardRef(function(Z,Y){const q=(0,tt.Z)({props:Z,name:"MuiListItem"}),{alignItems:v="center",autoFocus:k=!1,button:kt=!1,children:zt,className:At,component:wt,components:Wt={},componentsProps:Pt={},ContainerComponent:vt="li",ContainerProps:{className:Dt}={},dense:qt=!1,disabled:jt=!1,disableGutters:W=!1,disablePadding:te=!1,divider:re=!1,focusVisibleClassName:ie,secondaryAction:ne,selected:ae=!1,slotProps:se={},slots:Ut={}}=q,le=(0,b.Z)(q.ContainerProps,y),f=(0,b.Z)(q,x),n=N.useContext(pt.Z),e=N.useMemo(()=>({dense:qt||n.dense||!1,alignItems:v,disableGutters:W}),[v,n.dense,qt,W]),t=N.useRef(null);(0,V.Z)(()=>{k&&t.current&&t.current.focus()},[k]);const o=N.Children.toArray(zt),l=o.length&&(0,ct.Z)(o[o.length-1],["ListItemSecondaryAction"]),h=(0,B.Z)({},q,{alignItems:v,autoFocus:k,button:kt,dense:e.dense,disabled:jt,disableGutters:W,disablePadding:te,divider:re,hasSecondaryAction:l,selected:ae}),g=j(h),z=(0,It.Z)(t,Y),P=Ut.root||Wt.Root||Q,D=se.root||Pt.root||{},S=(0,B.Z)({className:(0,rt.Z)(g.root,D.className,At),disabled:jt},f);let L=wt||"li";return kt&&(S.component=wt||"div",S.focusVisibleClassName=(0,rt.Z)(xt.focusVisible,ie),L=et.Z),l?(L=!S.component&&!wt?"div":L,vt==="li"&&(L==="li"?L="div":S.component==="li"&&(S.component="div")),(0,I.jsx)(pt.Z.Provider,{value:e,children:(0,I.jsxs)(it,(0,B.Z)({as:vt,className:(0,rt.Z)(g.container,Dt),ref:z,ownerState:h},le,{children:[(0,I.jsx)(P,(0,B.Z)({},D,!(0,dt.Z)(P)&&{as:L,ownerState:(0,B.Z)({},h,D.ownerState)},S,{children:o})),o.pop()]}))})):(0,I.jsx)(pt.Z.Provider,{value:e,children:(0,I.jsxs)(P,(0,B.Z)({},D,{as:L,ref:z},!(0,dt.Z)(P)&&{ownerState:(0,B.Z)({},h,D.ownerState)},S,{children:[o,ne&&(0,I.jsx)(p,{children:ne})]}))})})},8859:Rt=>{Rt.exports=function(H,c){return c||(c={}),H&&(H=String(H.__esModule?H.default:H),/^['"].*['"]$/.test(H)&&(H=H.slice(1,-1)),c.hash&&(H+=c.hash),/["'() \t\n]|(%20)/.test(H)||c.needQuotes?'"'.concat(H.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):H)}},3593:(Rt,H,c)=>{c.d(H,{wT:()=>We,Ds:()=>Ie});var b=c(4075),B=c(5439),N=c(8252);let rt={data:""},at=a=>typeof window=="object"?((a?a.querySelector("#_goober"):window._goober)||Object.assign((a||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:a||rt,dt=a=>{let i=at(a),A=i.data;return i.data="",A},st=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,U=/\/\*[^]*?\*\/|  +/g,tt=/\n+/g,et=(a,i)=>{let A="",u="",r="";for(let s in a){let d=a[s];s[0]=="@"?s[1]=="i"?A=s+" "+d+";":u+=s[1]=="f"?et(d,s):s+"{"+et(d,s[1]=="k"?"":i)+"}":typeof d=="object"?u+=et(d,i?i.replace(/([^,])+/g,m=>s.replace(/(^:.*)|([^,])+/g,C=>/&/.test(C)?C.replace(/&/g,m):m?m+" "+C:C)):s):d!=null&&(s=/^--/.test(s)?s:s.replace(/[A-Z]/g,"-$&").toLowerCase(),r+=et.p?et.p(s,d):s+":"+d+";")}return A+(i&&r?i+"{"+r+"}":r)+u},ct={},V=a=>{if(typeof a=="object"){let i="";for(let A in a)i+=A+V(a[A]);return i}return a},It=(a,i,A,u,r)=>{let s=V(a),d=ct[s]||(ct[s]=(C=>{let F=0,T=11;for(;F<C.length;)T=101*T+C.charCodeAt(F++)>>>0;return"go"+T})(s));if(!ct[d]){let C=s!==a?a:(F=>{let T,$,X=[{}];for(;T=st.exec(F.replace(U,""));)T[4]?X.shift():T[3]?($=T[3].replace(tt," ").trim(),X.unshift(X[0][$]=X[0][$]||{})):X[0][T[1]]=T[2].replace(tt," ").trim();return X[0]})(a);ct[d]=et(r?{["@keyframes "+d]:C}:C,A?"":"."+d)}let m=A&&ct.g?ct.g:null;return A&&(ct.g=ct[d]),((C,F,T,$)=>{$?F.data=F.data.replace($,C):F.data.indexOf(C)===-1&&(F.data=T?C+F.data:F.data+C)})(ct[d],i,u,m),d},pt=(a,i,A)=>a.reduce((u,r,s)=>{let d=i[s];if(d&&d.call){let m=d(A),C=m&&m.props&&m.props.className||/^go/.test(m)&&m;d=C?"."+C:m&&typeof m=="object"?m.props?"":et(m,""):m===!1?"":m}return u+r+(d==null?"":d)},"");function ft(a){let i=this||{},A=a.call?a(i.p):a;return It(A.unshift?A.raw?pt(A,[].slice.call(arguments,1),i.p):A.reduce((u,r)=>Object.assign(u,r&&r.call?r(i.p):r),{}):A,at(i.target),i.g,i.o,i.k)}let Mt,ht,Zt,xt=ft.bind({g:1}),G=ft.bind({k:1});function mt(a,i,A,u){et.p=i,Mt=a,ht=A,Zt=u}function J(a,i){let A=this||{};return function(){let u=arguments;function r(s,d){let m=Object.assign({},s),C=m.className||r.className;A.p=Object.assign({theme:ht&&ht()},m),A.o=/ *go\d+/.test(C),m.className=ft.apply(A,u)+(C?" "+C:""),i&&(m.ref=d);let F=a;return a[0]&&(F=m.as||a,delete m.as),Zt&&F[0]&&Zt(m),Mt(F,m)}return i?i(r):r}}function O(a,i){for(var A=0;A<i.length;A++){var u=i[A];u.enumerable=u.enumerable||!1,u.configurable=!0,"value"in u&&(u.writable=!0),Object.defineProperty(a,u.key,u)}}function I(a,i,A){return i&&O(a.prototype,i),A&&O(a,A),a}function _(){return _=Object.assign||function(a){for(var i=1;i<arguments.length;i++){var A=arguments[i];for(var u in A)Object.prototype.hasOwnProperty.call(A,u)&&(a[u]=A[u])}return a},_.apply(this,arguments)}function Ft(a,i){a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.__proto__=i}function bt(a,i){if(a==null)return{};var A={},u=Object.keys(a),r,s;for(s=0;s<u.length;s++)r=u[s],!(i.indexOf(r)>=0)&&(A[r]=a[r]);return A}function yt(a){if(a===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}var p=function(){return""},y=b.createContext({enqueueSnackbar:p,closeSnackbar:p}),x={downXs:"@media (max-width:599.95px)",upSm:"@media (min-width:600px)"},M=function(i){return i.charAt(0).toUpperCase()+i.slice(1)},j=function(i){return""+M(i.vertical)+M(i.horizontal)},Q=function(i){return!!i||i===0},it="unmounted",Bt="exited",Tt="entering",E="entered",Z="exiting",Y=function(a){Ft(i,a);function i(u){var r;r=a.call(this,u)||this;var s=u.appear,d;return r.appearStatus=null,u.in?s?(d=Bt,r.appearStatus=Tt):d=E:u.unmountOnExit||u.mountOnEnter?d=it:d=Bt,r.state={status:d},r.nextCallback=null,r}i.getDerivedStateFromProps=function(r,s){var d=r.in;return d&&s.status===it?{status:Bt}:null};var A=i.prototype;return A.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},A.componentDidUpdate=function(r){var s=null;if(r!==this.props){var d=this.state.status;this.props.in?d!==Tt&&d!==E&&(s=Tt):(d===Tt||d===E)&&(s=Z)}this.updateStatus(!1,s)},A.componentWillUnmount=function(){this.cancelNextCallback()},A.getTimeouts=function(){var r=this.props.timeout,s=r,d=r;return r!=null&&typeof r!="number"&&typeof r!="string"&&(d=r.exit,s=r.enter),{exit:d,enter:s}},A.updateStatus=function(r,s){r===void 0&&(r=!1),s!==null?(this.cancelNextCallback(),s===Tt?this.performEnter(r):this.performExit()):this.props.unmountOnExit&&this.state.status===Bt&&this.setState({status:it})},A.performEnter=function(r){var s=this,d=this.props.enter,m=r,C=this.getTimeouts();if(!r&&!d){this.safeSetState({status:E},function(){s.props.onEntered&&s.props.onEntered(s.node,m)});return}this.props.onEnter&&this.props.onEnter(this.node,m),this.safeSetState({status:Tt},function(){s.props.onEntering&&s.props.onEntering(s.node,m),s.onTransitionEnd(C.enter,function(){s.safeSetState({status:E},function(){s.props.onEntered&&s.props.onEntered(s.node,m)})})})},A.performExit=function(){var r=this,s=this.props.exit,d=this.getTimeouts();if(!s){this.safeSetState({status:Bt},function(){r.props.onExited&&r.props.onExited(r.node)});return}this.props.onExit&&this.props.onExit(this.node),this.safeSetState({status:Z},function(){r.props.onExiting&&r.props.onExiting(r.node),r.onTransitionEnd(d.exit,function(){r.safeSetState({status:Bt},function(){r.props.onExited&&r.props.onExited(r.node)})})})},A.cancelNextCallback=function(){this.nextCallback!==null&&this.nextCallback.cancel&&(this.nextCallback.cancel(),this.nextCallback=null)},A.safeSetState=function(r,s){s=this.setNextCallback(s),this.setState(r,s)},A.setNextCallback=function(r){var s=this,d=!0;return this.nextCallback=function(){d&&(d=!1,s.nextCallback=null,r())},this.nextCallback.cancel=function(){d=!1},this.nextCallback},A.onTransitionEnd=function(r,s){this.setNextCallback(s);var d=r==null&&!this.props.addEndListener;if(!this.node||d){setTimeout(this.nextCallback,0);return}this.props.addEndListener&&this.props.addEndListener(this.node,this.nextCallback),r!=null&&setTimeout(this.nextCallback,r)},A.render=function(){var r=this.state.status;if(r===it)return null;var s=this.props,d=s.children,m=bt(s,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return d(r,m)},I(i,[{key:"node",get:function(){var r,s=(r=this.props.nodeRef)===null||r===void 0?void 0:r.current;if(!s)throw new Error("notistack - Custom snackbar is not refForwarding");return s}}]),i}(b.Component);function q(){}Y.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:q,onEntering:q,onEntered:q,onExit:q,onExiting:q,onExited:q};function v(a,i){typeof a=="function"?a(i):a&&(a.current=i)}function k(a,i){return(0,b.useMemo)(function(){return a==null&&i==null?null:function(A){v(a,A),v(i,A)}},[a,i])}function kt(a){var i=a.timeout,A=a.style,u=A===void 0?{}:A,r=a.mode;return{duration:typeof i=="object"?i[r]||0:i,easing:u.transitionTimingFunction,delay:u.transitionDelay}}var zt={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},At=function(i){i.scrollTop=i.scrollTop},wt=function(i){return Math.round(i)+"ms"};function Wt(a,i){a===void 0&&(a=["all"]);var A=i||{},u=A.duration,r=u===void 0?300:u,s=A.easing,d=s===void 0?zt.easeInOut:s,m=A.delay,C=m===void 0?0:m,F=Array.isArray(a)?a:[a];return F.map(function(T){var $=typeof r=="string"?r:wt(r),X=typeof C=="string"?C:wt(C);return T+" "+$+" "+d+" "+X}).join(",")}function Pt(a){return a&&a.ownerDocument||document}function vt(a){var i=Pt(a);return i.defaultView||window}function Dt(a,i){i===void 0&&(i=166);var A;function u(){for(var r=this,s=arguments.length,d=new Array(s),m=0;m<s;m++)d[m]=arguments[m];var C=function(){a.apply(r,d)};clearTimeout(A),A=setTimeout(C,i)}return u.clear=function(){clearTimeout(A)},u}function qt(a,i){var A=i.getBoundingClientRect(),u=vt(i),r;if(i.fakeTransform)r=i.fakeTransform;else{var s=u.getComputedStyle(i);r=s.getPropertyValue("-webkit-transform")||s.getPropertyValue("transform")}var d=0,m=0;if(r&&r!=="none"&&typeof r=="string"){var C=r.split("(")[1].split(")")[0].split(",");d=parseInt(C[4],10),m=parseInt(C[5],10)}switch(a){case"left":return"translateX("+(u.innerWidth+d-A.left)+"px)";case"right":return"translateX(-"+(A.left+A.width-d)+"px)";case"up":return"translateY("+(u.innerHeight+m-A.top)+"px)";default:return"translateY(-"+(A.top+A.height-m)+"px)"}}function jt(a,i){if(i){var A=qt(a,i);A&&(i.style.webkitTransform=A,i.style.transform=A)}}var W=(0,b.forwardRef)(function(a,i){var A=a.children,u=a.direction,r=u===void 0?"down":u,s=a.in,d=a.style,m=a.timeout,C=m===void 0?0:m,F=a.onEnter,T=a.onEntered,$=a.onExit,X=a.onExited,Jt=bt(a,["children","direction","in","style","timeout","onEnter","onEntered","onExit","onExited"]),R=(0,b.useRef)(null),K=k(A.ref,R),lt=k(K,i),gt=function(ot,Qt){jt(r,ot),At(ot),F&&F(ot,Qt)},Ct=function(ot){var Qt=(d==null?void 0:d.transitionTimingFunction)||zt.easeOut,Kt=kt({timeout:C,mode:"enter",style:_({},d,{transitionTimingFunction:Qt})});ot.style.webkitTransition=Wt("-webkit-transform",Kt),ot.style.transition=Wt("transform",Kt),ot.style.webkitTransform="none",ot.style.transform="none"},ut=function(ot){var Qt=(d==null?void 0:d.transitionTimingFunction)||zt.sharp,Kt=kt({timeout:C,mode:"exit",style:_({},d,{transitionTimingFunction:Qt})});ot.style.webkitTransition=Wt("-webkit-transform",Kt),ot.style.transition=Wt("transform",Kt),jt(r,ot),$&&$(ot)},Xt=function(ot){ot.style.webkitTransition="",ot.style.transition="",X&&X(ot)},St=(0,b.useCallback)(function(){R.current&&jt(r,R.current)},[r]);return(0,b.useEffect)(function(){if(!(s||r==="down"||r==="right")){var Nt=Dt(function(){R.current&&jt(r,R.current)}),ot=vt(R.current);return ot.addEventListener("resize",Nt),function(){Nt.clear(),ot.removeEventListener("resize",Nt)}}},[r,s]),(0,b.useEffect)(function(){s||St()},[s,St]),(0,b.createElement)(Y,Object.assign({appear:!0,nodeRef:R,onEnter:gt,onEntered:T,onEntering:Ct,onExit:ut,onExited:Xt,in:s,timeout:C},Jt),function(Nt,ot){return(0,b.cloneElement)(A,_({ref:lt,style:_({visibility:Nt==="exited"&&!s?"hidden":void 0},d,{},A.props.style)},ot))})});W.displayName="Slide";var te=function(i){return b.createElement("svg",Object.assign({viewBox:"0 0 24 24",focusable:"false",style:{fontSize:20,marginInlineEnd:8,userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0}},i))},re=function(){return b.createElement(te,null,b.createElement("path",{d:`M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41
        10.59L10 14.17L17.59 6.58L19 8L10 17Z`}))},ie=function(){return b.createElement(te,null,b.createElement("path",{d:"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"}))},ne=function(){return b.createElement(te,null,b.createElement("path",{d:`M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,
        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,
        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z`}))},ae=function(){return b.createElement(te,null,b.createElement("path",{d:`M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,
        0 22,12A10,10 0 0,0 12,2Z`}))},se={default:void 0,success:b.createElement(re,null),warning:b.createElement(ie,null),error:b.createElement(ne,null),info:b.createElement(ae,null)},Ut={maxSnack:3,persist:!1,hideIconVariant:!1,disableWindowBlurListener:!1,variant:"default",autoHideDuration:5e3,iconVariant:se,anchorOrigin:{vertical:"bottom",horizontal:"left"},TransitionComponent:W,transitionDuration:{enter:225,exit:195}},le=function(i,A){var u=function(s){return typeof s=="number"||s===null};return u(i)?i:u(A)?A:Ut.autoHideDuration},f=function(i,A){var u=function(s,d){return d.some(function(m){return typeof s===m})};return u(i,["string","number"])?i:u(i,["object"])?_({},Ut.transitionDuration,{},u(A,["object"])&&A,{},i):u(A,["string","number"])?A:u(A,["object"])?_({},Ut.transitionDuration,{},A):Ut.transitionDuration},n=function(i,A){return function(u,r){return r===void 0&&(r=!1),r?_({},Ut[u],{},A[u],{},i[u]):u==="autoHideDuration"?le(i.autoHideDuration,A.autoHideDuration):u==="transitionDuration"?f(i.transitionDuration,A.transitionDuration):i[u]||A[u]||Ut[u]}};function e(a){return Object.entries(a).reduce(function(i,A){var u,r=A[0],s=A[1];return _({},i,(u={},u[r]=ft(s),u))},{})}var t={SnackbarContainer:"notistack-SnackbarContainer",Snackbar:"notistack-Snackbar",CollapseWrapper:"notistack-CollapseWrapper",MuiContent:"notistack-MuiContent",MuiContentVariant:function(i){return"notistack-MuiContent-"+i}},o=e({root:{height:0},entered:{height:"auto"}}),l="0px",h=175,g=(0,b.forwardRef)(function(a,i){var A=a.children,u=a.in,r=a.onExited,s=(0,b.useRef)(null),d=(0,b.useRef)(null),m=k(i,d),C=function(){return s.current?s.current.clientHeight:0},F=function(K){K.style.height=l},T=function(K){var lt=C(),gt=kt({timeout:h,mode:"enter"}),Ct=gt.duration,ut=gt.easing;K.style.transitionDuration=typeof Ct=="string"?Ct:Ct+"ms",K.style.height=lt+"px",K.style.transitionTimingFunction=ut||""},$=function(K){K.style.height="auto"},X=function(K){K.style.height=C()+"px"},Jt=function(K){At(K);var lt=kt({timeout:h,mode:"exit"}),gt=lt.duration,Ct=lt.easing;K.style.transitionDuration=typeof gt=="string"?gt:gt+"ms",K.style.height=l,K.style.transitionTimingFunction=Ct||""};return(0,b.createElement)(Y,{in:u,unmountOnExit:!0,onEnter:F,onEntered:$,onEntering:T,onExit:X,onExited:r,onExiting:Jt,nodeRef:d,timeout:h},function(R,K){return(0,b.createElement)("div",Object.assign({ref:m,className:(0,N.Z)(o.root,R==="entered"&&o.entered),style:_({pointerEvents:"all",overflow:"hidden",minHeight:l,transition:Wt("height")},R==="entered"&&{overflow:"visible"},{},R==="exited"&&!u&&{visibility:"hidden"})},K),(0,b.createElement)("div",{ref:s,className:t.CollapseWrapper,style:{display:"flex",width:"100%"}},A))})});g.displayName="Collapse";var z={right:"left",left:"right",bottom:"up",top:"down"},P=function(i){return i.horizontal!=="center"?z[i.horizontal]:z[i.vertical]},D=function(i){return"anchorOrigin"+j(i)},S=function(i){i===void 0&&(i={});var A={containerRoot:!0,containerAnchorOriginTopCenter:!0,containerAnchorOriginBottomCenter:!0,containerAnchorOriginTopRight:!0,containerAnchorOriginBottomRight:!0,containerAnchorOriginTopLeft:!0,containerAnchorOriginBottomLeft:!0};return Object.keys(i).filter(function(u){return!A[u]}).reduce(function(u,r){var s;return _({},u,(s={},s[r]=i[r],s))},{})},L=function(){};function w(a,i){return a.reduce(function(A,u){return u==null?A:function(){for(var s=arguments.length,d=new Array(s),m=0;m<s;m++)d[m]=arguments[m];var C=[].concat(d);i&&C.indexOf(i)===-1&&C.push(i),A.apply(this,C),u.apply(this,C)}},L)}var Gt=typeof window!="undefined"?b.useLayoutEffect:b.useEffect;function Lt(a){var i=(0,b.useRef)(a);return Gt(function(){i.current=a}),(0,b.useCallback)(function(){return i.current.apply(void 0,arguments)},[])}var Ht=(0,b.forwardRef)(function(a,i){var A=a.children,u=a.className,r=a.autoHideDuration,s=a.disableWindowBlurListener,d=s===void 0?!1:s,m=a.onClose,C=a.id,F=a.open,T=a.SnackbarProps,$=T===void 0?{}:T,X=(0,b.useRef)(),Jt=Lt(function(){m&&m.apply(void 0,arguments)}),R=Lt(function(ut){!m||ut==null||(X.current&&clearTimeout(X.current),X.current=setTimeout(function(){Jt(null,"timeout",C)},ut))});(0,b.useEffect)(function(){return F&&R(r),function(){X.current&&clearTimeout(X.current)}},[F,r,R]);var K=function(){X.current&&clearTimeout(X.current)},lt=(0,b.useCallback)(function(){r!=null&&R(r*.5)},[r,R]),gt=function(Xt){$.onMouseEnter&&$.onMouseEnter(Xt),K()},Ct=function(Xt){$.onMouseLeave&&$.onMouseLeave(Xt),lt()};return(0,b.useEffect)(function(){if(!d&&F)return window.addEventListener("focus",lt),window.addEventListener("blur",K),function(){window.removeEventListener("focus",lt),window.removeEventListener("blur",K)}},[d,lt,F]),(0,b.createElement)("div",Object.assign({ref:i},$,{className:(0,N.Z)(t.Snackbar,u),onMouseEnter:gt,onMouseLeave:Ct}),A)});Ht.displayName="Snackbar";var nt,Et=e({root:(nt={display:"flex",flexWrap:"wrap",flexGrow:1},nt[x.upSm]={flexGrow:"initial",minWidth:"288px"},nt)}),Vt=(0,b.forwardRef)(function(a,i){var A=a.className,u=bt(a,["className"]);return b.createElement("div",Object.assign({ref:i,className:(0,N.Z)(Et.root,A)},u))});Vt.displayName="SnackbarContent";var _t=e({root:{backgroundColor:"#313131",fontSize:"0.875rem",lineHeight:1.43,letterSpacing:"0.01071em",color:"#fff",alignItems:"center",padding:"6px 16px",borderRadius:"4px",boxShadow:"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)"},lessPadding:{paddingLeft:8*2.5+"px"},default:{backgroundColor:"#313131"},success:{backgroundColor:"#43a047"},error:{backgroundColor:"#d32f2f"},warning:{backgroundColor:"#ff9800"},info:{backgroundColor:"#2196f3"},message:{display:"flex",alignItems:"center",padding:"8px 0"},action:{display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:"16px",marginRight:"-8px"}}),$t="notistack-snackbar",Ot=(0,b.forwardRef)(function(a,i){var A=a.id,u=a.message,r=a.action,s=a.iconVariant,d=a.variant,m=a.hideIconVariant,C=a.style,F=a.className,T=s[d],$=r;return typeof $=="function"&&($=$(A)),b.createElement(Vt,{ref:i,role:"alert","aria-describedby":$t,style:C,className:(0,N.Z)(t.MuiContent,t.MuiContentVariant(d),_t.root,_t[d],F,!m&&T&&_t.lessPadding)},b.createElement("div",{id:$t,className:_t.message},m?null:T,u),$&&b.createElement("div",{className:_t.action},$))});Ot.displayName="MaterialDesignContent";var ee=(0,b.memo)(Ot),Ae=e({wrappedRoot:{width:"100%",position:"relative",transform:"translateX(0)",top:0,right:0,bottom:0,left:0,minWidth:"288px"}}),ke=function(i){var A=(0,b.useRef)(),u=(0,b.useState)(!0),r=u[0],s=u[1],d=w([i.snack.onClose,i.onClose]),m=function(){i.snack.requestClose&&d(null,"instructed",i.snack.id)},C=(0,b.useCallback)(function(){A.current=setTimeout(function(){s(function(Kt){return!Kt})},125)},[]);(0,b.useEffect)(function(){return function(){A.current&&clearTimeout(A.current)}},[]);var F=i.snack,T=i.classes,$=i.Component,X=$===void 0?ee:$,Jt=(0,b.useMemo)(function(){return S(T)},[T]),R=F.open,K=F.SnackbarProps,lt=F.TransitionComponent,gt=F.TransitionProps,Ct=F.transitionDuration,ut=F.disableWindowBlurListener,Xt=F.content,St=bt(F,["open","SnackbarProps","TransitionComponent","TransitionProps","transitionDuration","disableWindowBlurListener","content","entered","requestClose","onEnter","onEntered","onExit","onExited"]),Nt=_({direction:P(St.anchorOrigin),timeout:Ct},gt),ot=Xt;typeof ot=="function"&&(ot=ot(St.id,St.message));var Qt=["onEnter","onEntered","onExit","onExited"].reduce(function(Kt,fe){var me;return _({},Kt,(me={},me[fe]=w([i.snack[fe],i[fe]],St.id),me))},{});return b.createElement(g,{in:r,onExited:Qt.onExited},b.createElement(Ht,{open:R,id:St.id,disableWindowBlurListener:ut,autoHideDuration:St.autoHideDuration,className:(0,N.Z)(Ae.wrappedRoot,Jt.root,Jt[D(St.anchorOrigin)]),SnackbarProps:K,onClose:d},b.createElement(lt,Object.assign({},Nt,{appear:!0,in:R,onExit:Qt.onExit,onExited:C,onEnter:Qt.onEnter,onEntered:w([Qt.onEntered,m],St.id)}),ot||b.createElement(X,Object.assign({},St)))))},oe,ue,ce,de,he,Yt={view:{default:20,dense:4},snackbar:{default:6,dense:2}},be="."+t.CollapseWrapper,ge=16,pe=e({root:(oe={boxSizing:"border-box",display:"flex",maxHeight:"100%",position:"fixed",zIndex:1400,height:"auto",width:"auto",transition:Wt(["top","right","bottom","left","max-width"],{duration:300,easing:"ease"}),pointerEvents:"none"},oe[be]={padding:Yt.snackbar.default+"px 0px",transition:"padding 300ms ease 0ms"},oe.maxWidth="calc(100% - "+Yt.view.default*2+"px)",oe[x.downXs]={width:"100%",maxWidth:"calc(100% - "+ge*2+"px)"},oe),rootDense:(ue={},ue[be]={padding:Yt.snackbar.dense+"px 0px"},ue),top:{top:Yt.view.default-Yt.snackbar.default+"px",flexDirection:"column"},bottom:{bottom:Yt.view.default-Yt.snackbar.default+"px",flexDirection:"column-reverse"},left:(ce={left:Yt.view.default+"px"},ce[x.upSm]={alignItems:"flex-start"},ce[x.downXs]={left:ge+"px"},ce),right:(de={right:Yt.view.default+"px"},de[x.upSm]={alignItems:"flex-end"},de[x.downXs]={right:ge+"px"},de),center:(he={left:"50%",transform:"translateX(-50%)"},he[x.upSm]={alignItems:"center"},he)}),xe=function(i){var A=i.classes,u=A===void 0?{}:A,r=i.anchorOrigin,s=i.dense,d=i.children,m=(0,N.Z)(t.SnackbarContainer,pe[r.vertical],pe[r.horizontal],pe.root,u.containerRoot,u["containerAnchorOrigin"+j(r)],s&&pe.rootDense);return b.createElement("div",{className:m},d)},ze=(0,b.memo)(xe),ve=null,Ee={NO_PERSIST_ALL:"Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented."},Fe=function(a){if(ve){var i=Ee[a];typeof console!="undefined"&&console.error("WARNING - notistack: "+i);try{throw new Error(i)}catch(A){}}},ye=function(i){var A=typeof i=="string"||(0,b.isValidElement)(i);return!A},Ce,we,We=function(a){Ft(i,a);function i(u){var r;return r=a.call(this,u)||this,r.enqueueSnackbar=function(s,d){if(d===void 0&&(d={}),s==null)throw new Error("enqueueSnackbar called with invalid argument");var m=ye(s)?s:d,C=ye(s)?s.message:s,F=m.key,T=m.preventDuplicate,$=bt(m,["key","preventDuplicate"]),X=Q(F),Jt=X?F:new Date().getTime()+Math.random(),R=n($,r.props),K=_({id:Jt},$,{message:C,open:!0,entered:!1,requestClose:!1,persist:R("persist"),action:R("action"),content:R("content"),variant:R("variant"),anchorOrigin:R("anchorOrigin"),disableWindowBlurListener:R("disableWindowBlurListener"),autoHideDuration:R("autoHideDuration"),hideIconVariant:R("hideIconVariant"),TransitionComponent:R("TransitionComponent"),transitionDuration:R("transitionDuration"),TransitionProps:R("TransitionProps",!0),iconVariant:R("iconVariant",!0),style:R("style",!0),SnackbarProps:R("SnackbarProps",!0),className:(0,N.Z)(r.props.className,$.className)});return K.persist&&(K.autoHideDuration=void 0),r.setState(function(lt){if(T===void 0&&r.props.preventDuplicate||T){var gt=function(St){return X?St.id===Jt:St.message===C},Ct=lt.queue.findIndex(gt)>-1,ut=lt.snacks.findIndex(gt)>-1;if(Ct||ut)return lt}return r.handleDisplaySnack(_({},lt,{queue:[].concat(lt.queue,[K])}))}),Jt},r.handleDisplaySnack=function(s){var d=s.snacks;return d.length>=r.maxSnack?r.handleDismissOldest(s):r.processQueue(s)},r.processQueue=function(s){var d=s.queue,m=s.snacks;return d.length>0?_({},s,{snacks:[].concat(m,[d[0]]),queue:d.slice(1,d.length)}):s},r.handleDismissOldest=function(s){if(s.snacks.some(function(T){return!T.open||T.requestClose}))return s;var d=!1,m=!1,C=s.snacks.reduce(function(T,$){return T+($.open&&$.persist?1:0)},0);C===r.maxSnack&&(m=!0);var F=s.snacks.map(function(T){return!d&&(!T.persist||m)?(d=!0,T.entered?(T.onClose&&T.onClose(null,"maxsnack",T.id),r.props.onClose&&r.props.onClose(null,"maxsnack",T.id),_({},T,{open:!1})):_({},T,{requestClose:!0})):_({},T)});return _({},s,{snacks:F})},r.handleEnteredSnack=function(s,d,m){if(!Q(m))throw new Error("handleEnteredSnack Cannot be called with undefined key");r.setState(function(C){var F=C.snacks;return{snacks:F.map(function(T){return T.id===m?_({},T,{entered:!0}):_({},T)})}})},r.handleCloseSnack=function(s,d,m){r.props.onClose&&r.props.onClose(s,d,m);var C=m===void 0;r.setState(function(F){var T=F.snacks,$=F.queue;return{snacks:T.map(function(X){return!C&&X.id!==m?_({},X):X.entered?_({},X,{open:!1}):_({},X,{requestClose:!0})}),queue:$.filter(function(X){return X.id!==m})}})},r.closeSnackbar=function(s){var d=r.state.snacks.find(function(m){return m.id===s});Q(s)&&d&&d.onClose&&d.onClose(null,"instructed",s),r.handleCloseSnack(null,"instructed",s)},r.handleExitedSnack=function(s,d){if(!Q(d))throw new Error("handleExitedSnack Cannot be called with undefined key");r.setState(function(m){var C=r.processQueue(_({},m,{snacks:m.snacks.filter(function(F){return F.id!==d})}));return C.queue.length===0?C:r.handleDismissOldest(C)})},Ce=r.enqueueSnackbar,we=r.closeSnackbar,r.state={snacks:[],queue:[],contextValue:{enqueueSnackbar:r.enqueueSnackbar.bind(yt(r)),closeSnackbar:r.closeSnackbar.bind(yt(r))}},r}var A=i.prototype;return A.render=function(){var r=this,s=this.state.contextValue,d=this.props,m=d.domRoot,C=d.children,F=d.dense,T=F===void 0?!1:F,$=d.Components,X=$===void 0?{}:$,Jt=d.classes,R=this.state.snacks.reduce(function(lt,gt){var Ct,ut=j(gt.anchorOrigin),Xt=lt[ut]||[];return _({},lt,(Ct={},Ct[ut]=[].concat(Xt,[gt]),Ct))},{}),K=Object.keys(R).map(function(lt){var gt=R[lt],Ct=gt[0];return b.createElement(ze,{key:lt,dense:T,anchorOrigin:Ct.anchorOrigin,classes:Jt},gt.map(function(ut){return b.createElement(ke,{key:ut.id,snack:ut,classes:Jt,Component:X[ut.variant],onClose:r.handleCloseSnack,onEnter:r.props.onEnter,onExit:r.props.onExit,onExited:w([r.handleExitedSnack,r.props.onExited],ut.id),onEntered:w([r.handleEnteredSnack,r.props.onEntered],ut.id)})}))});return b.createElement(y.Provider,{value:s},C,m?(0,B.createPortal)(K,m):K)},I(i,[{key:"maxSnack",get:function(){return this.props.maxSnack||Ut.maxSnack}}]),i}(b.Component),Ie=function(){return(0,b.useContext)(y)}},698:(Rt,H,c)=>{var b=c(3072),B=c.n(b),N=c(2298),rt=c.n(N),at=c(7976),dt=c.n(at),st=c(5147),U=c.n(st),tt=c(566),et=c.n(tt),ct=c(9396),V=c.n(ct),It=c(4340),pt={};pt.styleTagTransform=V(),pt.setAttributes=U(),pt.insert=dt().bind(null,"head"),pt.domAPI=rt(),pt.insertStyleElement=et();var ft=B()(It.Z,pt),Mt=It.Z&&It.Z.locals?It.Z.locals:void 0},5848:(Rt,H,c)=>{c.d(H,{TU:()=>W});var b=Object.defineProperty,B=Object.defineProperties,N=Object.getOwnPropertyDescriptors,rt=Object.getOwnPropertySymbols,at=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable,st=(f,n,e)=>n in f?b(f,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):f[n]=e,U=(f,n)=>{for(var e in n||(n={}))at.call(n,e)&&st(f,e,n[e]);if(rt)for(var e of rt(n))dt.call(n,e)&&st(f,e,n[e]);return f},tt=(f,n)=>B(f,N(n)),et=(f,n,e)=>(st(f,typeof n!="symbol"?n+"":n,e),e);function ct(){return{async:!1,baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,hooks:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}let V=ct();function It(f){V=f}const pt=/[&<>"']/,ft=new RegExp(pt.source,"g"),Mt=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,ht=new RegExp(Mt.source,"g"),Zt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},xt=f=>Zt[f];function G(f,n){if(n){if(pt.test(f))return f.replace(ft,xt)}else if(Mt.test(f))return f.replace(ht,xt);return f}const mt=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function J(f){return f.replace(mt,(n,e)=>(e=e.toLowerCase(),e==="colon"?":":e.charAt(0)==="#"?e.charAt(1)==="x"?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""))}const O=/(^|[^\[])\^/g;function I(f,n){f=typeof f=="string"?f:f.source,n=n||"";const e={replace:(t,o)=>(o=o.source||o,o=o.replace(O,"$1"),f=f.replace(t,o),e),getRegex:()=>new RegExp(f,n)};return e}const _=/[^\w:]/g,Ft=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function bt(f,n,e){if(f){let t;try{t=decodeURIComponent(J(e)).replace(_,"").toLowerCase()}catch(o){return null}if(t.indexOf("javascript:")===0||t.indexOf("vbscript:")===0||t.indexOf("data:")===0)return null}n&&!Ft.test(e)&&(e=M(n,e));try{e=encodeURI(e).replace(/%25/g,"%")}catch(t){return null}return e}const yt={},p=/^[^:]+:\/*[^/]*$/,y=/^([^:]+:)[\s\S]*$/,x=/^([^:]+:\/*[^/]*)[\s\S]*$/;function M(f,n){yt[" "+f]||(p.test(f)?yt[" "+f]=f+"/":yt[" "+f]=it(f,"/",!0)),f=yt[" "+f];const e=f.indexOf(":")===-1;return n.substring(0,2)==="//"?e?n:f.replace(y,"$1")+n:n.charAt(0)==="/"?e?n:f.replace(x,"$1")+n:f+n}const j={exec:function(){}};function Q(f,n){const e=f.replace(/\|/g,(l,h,g)=>{let z=!1,P=h;for(;--P>=0&&g[P]==="\\";)z=!z;return z?"|":" |"}),t=e.split(/ \|/);let o=0;if(t[0].trim()||t.shift(),t.length>0&&!t[t.length-1].trim()&&t.pop(),t.length>n)t.splice(n);else for(;t.length<n;)t.push("");for(;o<t.length;o++)t[o]=t[o].trim().replace(/\\\|/g,"|");return t}function it(f,n,e){const t=f.length;if(t===0)return"";let o=0;for(;o<t;){const l=f.charAt(t-o-1);if(l===n&&!e)o++;else if(l!==n&&e)o++;else break}return f.slice(0,t-o)}function Bt(f,n){if(f.indexOf(n[1])===-1)return-1;const e=f.length;let t=0,o=0;for(;o<e;o++)if(f[o]==="\\")o++;else if(f[o]===n[0])t++;else if(f[o]===n[1]&&(t--,t<0))return o;return-1}function Tt(f){f&&f.sanitize&&!f.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function E(f,n){if(n<1)return"";let e="";for(;n>1;)n&1&&(e+=f),n>>=1,f+=f;return e+f}function Z(f,n,e,t){const o=n.href,l=n.title?G(n.title):null,h=f[1].replace(/\\([\[\]])/g,"$1");if(f[0].charAt(0)!=="!"){t.state.inLink=!0;const g={type:"link",raw:e,href:o,title:l,text:h,tokens:t.inlineTokens(h)};return t.state.inLink=!1,g}return{type:"image",raw:e,href:o,title:l,text:G(h)}}function Y(f,n){const e=f.match(/^(\s+)(?:```)/);if(e===null)return n;const t=e[1];return n.split(`
`).map(o=>{const l=o.match(/^\s+/);if(l===null)return o;const[h]=l;return h.length>=t.length?o.slice(t.length):o}).join(`
`)}class q{constructor(n){this.options=n||V}space(n){const e=this.rules.block.newline.exec(n);if(e&&e[0].length>0)return{type:"space",raw:e[0]}}code(n){const e=this.rules.block.code.exec(n);if(e){const t=e[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:e[0],codeBlockStyle:"indented",text:this.options.pedantic?t:it(t,`
`)}}}fences(n){const e=this.rules.block.fences.exec(n);if(e){const t=e[0],o=Y(t,e[3]||"");return{type:"code",raw:t,lang:e[2]?e[2].trim().replace(this.rules.inline._escapes,"$1"):e[2],text:o}}}heading(n){const e=this.rules.block.heading.exec(n);if(e){let t=e[2].trim();if(/#$/.test(t)){const o=it(t,"#");(this.options.pedantic||!o||/ $/.test(o))&&(t=o.trim())}return{type:"heading",raw:e[0],depth:e[1].length,text:t,tokens:this.lexer.inline(t)}}}hr(n){const e=this.rules.block.hr.exec(n);if(e)return{type:"hr",raw:e[0]}}blockquote(n){const e=this.rules.block.blockquote.exec(n);if(e){const t=e[0].replace(/^ *>[ \t]?/gm,""),o=this.lexer.state.top;this.lexer.state.top=!0;const l=this.lexer.blockTokens(t);return this.lexer.state.top=o,{type:"blockquote",raw:e[0],tokens:l,text:t}}}list(n){let e=this.rules.block.list.exec(n);if(e){let t,o,l,h,g,z,P,D,S,L,w,Gt,Lt=e[1].trim();const Ht=Lt.length>1,nt={type:"list",raw:"",ordered:Ht,start:Ht?+Lt.slice(0,-1):"",loose:!1,items:[]};Lt=Ht?`\\d{1,9}\\${Lt.slice(-1)}`:`\\${Lt}`,this.options.pedantic&&(Lt=Ht?Lt:"[*+-]");const Et=new RegExp(`^( {0,3}${Lt})((?:[	 ][^\\n]*)?(?:\\n|$))`);for(;n&&(Gt=!1,!(!(e=Et.exec(n))||this.rules.block.hr.test(n)));){if(t=e[0],n=n.substring(t.length),D=e[2].split(`
`,1)[0].replace(/^\t+/,_t=>" ".repeat(3*_t.length)),S=n.split(`
`,1)[0],this.options.pedantic?(h=2,w=D.trimLeft()):(h=e[2].search(/[^ ]/),h=h>4?1:h,w=D.slice(h),h+=e[1].length),z=!1,!D&&/^ *$/.test(S)&&(t+=S+`
`,n=n.substring(S.length+1),Gt=!0),!Gt){const _t=new RegExp(`^ {0,${Math.min(3,h-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),$t=new RegExp(`^ {0,${Math.min(3,h-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),Ot=new RegExp(`^ {0,${Math.min(3,h-1)}}(?:\`\`\`|~~~)`),ee=new RegExp(`^ {0,${Math.min(3,h-1)}}#`);for(;n&&(L=n.split(`
`,1)[0],S=L,this.options.pedantic&&(S=S.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!(Ot.test(S)||ee.test(S)||_t.test(S)||$t.test(n)));){if(S.search(/[^ ]/)>=h||!S.trim())w+=`
`+S.slice(h);else{if(z||D.search(/[^ ]/)>=4||Ot.test(D)||ee.test(D)||$t.test(D))break;w+=`
`+S}!z&&!S.trim()&&(z=!0),t+=L+`
`,n=n.substring(L.length+1),D=S.slice(h)}}nt.loose||(P?nt.loose=!0:/\n *\n *$/.test(t)&&(P=!0)),this.options.gfm&&(o=/^\[[ xX]\] /.exec(w),o&&(l=o[0]!=="[ ] ",w=w.replace(/^\[[ xX]\] +/,""))),nt.items.push({type:"list_item",raw:t,task:!!o,checked:l,loose:!1,text:w}),nt.raw+=t}nt.items[nt.items.length-1].raw=t.trimRight(),nt.items[nt.items.length-1].text=w.trimRight(),nt.raw=nt.raw.trimRight();const Vt=nt.items.length;for(g=0;g<Vt;g++)if(this.lexer.state.top=!1,nt.items[g].tokens=this.lexer.blockTokens(nt.items[g].text,[]),!nt.loose){const _t=nt.items[g].tokens.filter(Ot=>Ot.type==="space"),$t=_t.length>0&&_t.some(Ot=>/\n.*\n/.test(Ot.raw));nt.loose=$t}if(nt.loose)for(g=0;g<Vt;g++)nt.items[g].loose=!0;return nt}}html(n){const e=this.rules.block.html.exec(n);if(e){const t={type:"html",raw:e[0],pre:!this.options.sanitizer&&(e[1]==="pre"||e[1]==="script"||e[1]==="style"),text:e[0]};if(this.options.sanitize){const o=this.options.sanitizer?this.options.sanitizer(e[0]):G(e[0]);t.type="paragraph",t.text=o,t.tokens=this.lexer.inline(o)}return t}}def(n){const e=this.rules.block.def.exec(n);if(e){const t=e[1].toLowerCase().replace(/\s+/g," "),o=e[2]?e[2].replace(/^<(.*)>$/,"$1").replace(this.rules.inline._escapes,"$1"):"",l=e[3]?e[3].substring(1,e[3].length-1).replace(this.rules.inline._escapes,"$1"):e[3];return{type:"def",tag:t,raw:e[0],href:o,title:l}}}table(n){const e=this.rules.block.table.exec(n);if(e){const t={type:"table",header:Q(e[1]).map(o=>({text:o})),align:e[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:e[3]&&e[3].trim()?e[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(t.header.length===t.align.length){t.raw=e[0];let o=t.align.length,l,h,g,z;for(l=0;l<o;l++)/^ *-+: *$/.test(t.align[l])?t.align[l]="right":/^ *:-+: *$/.test(t.align[l])?t.align[l]="center":/^ *:-+ *$/.test(t.align[l])?t.align[l]="left":t.align[l]=null;for(o=t.rows.length,l=0;l<o;l++)t.rows[l]=Q(t.rows[l],t.header.length).map(P=>({text:P}));for(o=t.header.length,h=0;h<o;h++)t.header[h].tokens=this.lexer.inline(t.header[h].text);for(o=t.rows.length,h=0;h<o;h++)for(z=t.rows[h],g=0;g<z.length;g++)z[g].tokens=this.lexer.inline(z[g].text);return t}}}lheading(n){const e=this.rules.block.lheading.exec(n);if(e)return{type:"heading",raw:e[0],depth:e[2].charAt(0)==="="?1:2,text:e[1],tokens:this.lexer.inline(e[1])}}paragraph(n){const e=this.rules.block.paragraph.exec(n);if(e){const t=e[1].charAt(e[1].length-1)===`
`?e[1].slice(0,-1):e[1];return{type:"paragraph",raw:e[0],text:t,tokens:this.lexer.inline(t)}}}text(n){const e=this.rules.block.text.exec(n);if(e)return{type:"text",raw:e[0],text:e[0],tokens:this.lexer.inline(e[0])}}escape(n){const e=this.rules.inline.escape.exec(n);if(e)return{type:"escape",raw:e[0],text:G(e[1])}}tag(n){const e=this.rules.inline.tag.exec(n);if(e)return!this.lexer.state.inLink&&/^<a /i.test(e[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(e[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(e[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(e[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:e[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(e[0]):G(e[0]):e[0]}}link(n){const e=this.rules.inline.link.exec(n);if(e){const t=e[2].trim();if(!this.options.pedantic&&/^</.test(t)){if(!/>$/.test(t))return;const h=it(t.slice(0,-1),"\\");if((t.length-h.length)%2===0)return}else{const h=Bt(e[2],"()");if(h>-1){const z=(e[0].indexOf("!")===0?5:4)+e[1].length+h;e[2]=e[2].substring(0,h),e[0]=e[0].substring(0,z).trim(),e[3]=""}}let o=e[2],l="";if(this.options.pedantic){const h=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o);h&&(o=h[1],l=h[3])}else l=e[3]?e[3].slice(1,-1):"";return o=o.trim(),/^</.test(o)&&(this.options.pedantic&&!/>$/.test(t)?o=o.slice(1):o=o.slice(1,-1)),Z(e,{href:o&&o.replace(this.rules.inline._escapes,"$1"),title:l&&l.replace(this.rules.inline._escapes,"$1")},e[0],this.lexer)}}reflink(n,e){let t;if((t=this.rules.inline.reflink.exec(n))||(t=this.rules.inline.nolink.exec(n))){let o=(t[2]||t[1]).replace(/\s+/g," ");if(o=e[o.toLowerCase()],!o){const l=t[0].charAt(0);return{type:"text",raw:l,text:l}}return Z(t,o,t[0],this.lexer)}}emStrong(n,e,t=""){let o=this.rules.inline.emStrong.lDelim.exec(n);if(!o||o[3]&&t.match(/[\p{L}\p{N}]/u))return;const l=o[1]||o[2]||"";if(!l||l&&(t===""||this.rules.inline.punctuation.exec(t))){const h=o[0].length-1;let g,z,P=h,D=0;const S=o[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(S.lastIndex=0,e=e.slice(-1*n.length+h);(o=S.exec(e))!=null;){if(g=o[1]||o[2]||o[3]||o[4]||o[5]||o[6],!g)continue;if(z=g.length,o[3]||o[4]){P+=z;continue}else if((o[5]||o[6])&&h%3&&!((h+z)%3)){D+=z;continue}if(P-=z,P>0)continue;z=Math.min(z,z+P+D);const L=n.slice(0,h+o.index+(o[0].length-g.length)+z);if(Math.min(h,z)%2){const Gt=L.slice(1,-1);return{type:"em",raw:L,text:Gt,tokens:this.lexer.inlineTokens(Gt)}}const w=L.slice(2,-2);return{type:"strong",raw:L,text:w,tokens:this.lexer.inlineTokens(w)}}}}codespan(n){const e=this.rules.inline.code.exec(n);if(e){let t=e[2].replace(/\n/g," ");const o=/[^ ]/.test(t),l=/^ /.test(t)&&/ $/.test(t);return o&&l&&(t=t.substring(1,t.length-1)),t=G(t,!0),{type:"codespan",raw:e[0],text:t}}}br(n){const e=this.rules.inline.br.exec(n);if(e)return{type:"br",raw:e[0]}}del(n){const e=this.rules.inline.del.exec(n);if(e)return{type:"del",raw:e[0],text:e[2],tokens:this.lexer.inlineTokens(e[2])}}autolink(n,e){const t=this.rules.inline.autolink.exec(n);if(t){let o,l;return t[2]==="@"?(o=G(this.options.mangle?e(t[1]):t[1]),l="mailto:"+o):(o=G(t[1]),l=o),{type:"link",raw:t[0],text:o,href:l,tokens:[{type:"text",raw:o,text:o}]}}}url(n,e){let t;if(t=this.rules.inline.url.exec(n)){let o,l;if(t[2]==="@")o=G(this.options.mangle?e(t[0]):t[0]),l="mailto:"+o;else{let h;do h=t[0],t[0]=this.rules.inline._backpedal.exec(t[0])[0];while(h!==t[0]);o=G(t[0]),t[1]==="www."?l="http://"+t[0]:l=t[0]}return{type:"link",raw:t[0],text:o,href:l,tokens:[{type:"text",raw:o,text:o}]}}}inlineText(n,e){const t=this.rules.inline.text.exec(n);if(t){let o;return this.lexer.state.inRawBlock?o=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):G(t[0]):t[0]:o=G(this.options.smartypants?e(t[0]):t[0]),{type:"text",raw:t[0],text:o}}}}const v={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:j,lheading:/^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};v._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,v._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,v.def=I(v.def).replace("label",v._label).replace("title",v._title).getRegex(),v.bullet=/(?:[*+-]|\d{1,9}[.)])/,v.listItemStart=I(/^( *)(bull) */).replace("bull",v.bullet).getRegex(),v.list=I(v.list).replace(/bull/g,v.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+v.def.source+")").getRegex(),v._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",v._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,v.html=I(v.html,"i").replace("comment",v._comment).replace("tag",v._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),v.paragraph=I(v._paragraph).replace("hr",v.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v._tag).getRegex(),v.blockquote=I(v.blockquote).replace("paragraph",v.paragraph).getRegex(),v.normal=U({},v),v.gfm=tt(U({},v.normal),{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),v.gfm.table=I(v.gfm.table).replace("hr",v.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v._tag).getRegex(),v.gfm.paragraph=I(v._paragraph).replace("hr",v.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",v.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v._tag).getRegex(),v.pedantic=tt(U({},v.normal),{html:I(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",v._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:j,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:I(v.normal._paragraph).replace("hr",v.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",v.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});const k={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:j,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,rDelimUnd:/^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:j,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};k._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",k.punctuation=I(k.punctuation).replace(/punctuation/g,k._punctuation).getRegex(),k.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,k.escapedEmSt=/(?:^|[^\\])(?:\\\\)*\\[*_]/g,k._comment=I(v._comment).replace("(?:-->|$)","-->").getRegex(),k.emStrong.lDelim=I(k.emStrong.lDelim).replace(/punct/g,k._punctuation).getRegex(),k.emStrong.rDelimAst=I(k.emStrong.rDelimAst,"g").replace(/punct/g,k._punctuation).getRegex(),k.emStrong.rDelimUnd=I(k.emStrong.rDelimUnd,"g").replace(/punct/g,k._punctuation).getRegex(),k._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,k._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,k._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,k.autolink=I(k.autolink).replace("scheme",k._scheme).replace("email",k._email).getRegex(),k._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,k.tag=I(k.tag).replace("comment",k._comment).replace("attribute",k._attribute).getRegex(),k._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,k._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,k._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,k.link=I(k.link).replace("label",k._label).replace("href",k._href).replace("title",k._title).getRegex(),k.reflink=I(k.reflink).replace("label",k._label).replace("ref",v._label).getRegex(),k.nolink=I(k.nolink).replace("ref",v._label).getRegex(),k.reflinkSearch=I(k.reflinkSearch,"g").replace("reflink",k.reflink).replace("nolink",k.nolink).getRegex(),k.normal=U({},k),k.pedantic=tt(U({},k.normal),{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:I(/^!?\[(label)\]\((.*?)\)/).replace("label",k._label).getRegex(),reflink:I(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",k._label).getRegex()}),k.gfm=tt(U({},k.normal),{escape:I(k.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),k.gfm.url=I(k.gfm.url,"i").replace("email",k.gfm._extended_email).getRegex(),k.breaks=tt(U({},k.gfm),{br:I(k.br).replace("{2,}","*").getRegex(),text:I(k.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function kt(f){return f.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function zt(f){let n="",e,t;const o=f.length;for(e=0;e<o;e++)t=f.charCodeAt(e),Math.random()>.5&&(t="x"+t.toString(16)),n+="&#"+t+";";return n}class At{constructor(n){this.tokens=[],this.tokens.links=Object.create(null),this.options=n||V,this.options.tokenizer=this.options.tokenizer||new q,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const e={block:v.normal,inline:k.normal};this.options.pedantic?(e.block=v.pedantic,e.inline=k.pedantic):this.options.gfm&&(e.block=v.gfm,this.options.breaks?e.inline=k.breaks:e.inline=k.gfm),this.tokenizer.rules=e}static get rules(){return{block:v,inline:k}}static lex(n,e){return new At(e).lex(n)}static lexInline(n,e){return new At(e).inlineTokens(n)}lex(n){n=n.replace(/\r\n|\r/g,`
`),this.blockTokens(n,this.tokens);let e;for(;e=this.inlineQueue.shift();)this.inlineTokens(e.src,e.tokens);return this.tokens}blockTokens(n,e=[]){this.options.pedantic?n=n.replace(/\t/g,"    ").replace(/^ +$/gm,""):n=n.replace(/^( *)(\t+)/gm,(g,z,P)=>z+"    ".repeat(P.length));let t,o,l,h;for(;n;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(g=>(t=g.call({lexer:this},n,e))?(n=n.substring(t.raw.length),e.push(t),!0):!1))){if(t=this.tokenizer.space(n)){n=n.substring(t.raw.length),t.raw.length===1&&e.length>0?e[e.length-1].raw+=`
`:e.push(t);continue}if(t=this.tokenizer.code(n)){n=n.substring(t.raw.length),o=e[e.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue[this.inlineQueue.length-1].src=o.text):e.push(t);continue}if(t=this.tokenizer.fences(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.heading(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.hr(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.blockquote(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.list(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.html(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.def(n)){n=n.substring(t.raw.length),o=e[e.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.raw,this.inlineQueue[this.inlineQueue.length-1].src=o.text):this.tokens.links[t.tag]||(this.tokens.links[t.tag]={href:t.href,title:t.title});continue}if(t=this.tokenizer.table(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.lheading(n)){n=n.substring(t.raw.length),e.push(t);continue}if(l=n,this.options.extensions&&this.options.extensions.startBlock){let g=1/0;const z=n.slice(1);let P;this.options.extensions.startBlock.forEach(function(D){P=D.call({lexer:this},z),typeof P=="number"&&P>=0&&(g=Math.min(g,P))}),g<1/0&&g>=0&&(l=n.substring(0,g+1))}if(this.state.top&&(t=this.tokenizer.paragraph(l))){o=e[e.length-1],h&&o.type==="paragraph"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):e.push(t),h=l.length!==n.length,n=n.substring(t.raw.length);continue}if(t=this.tokenizer.text(n)){n=n.substring(t.raw.length),o=e[e.length-1],o&&o.type==="text"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):e.push(t);continue}if(n){const g="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent){console.error(g);break}else throw new Error(g)}}return this.state.top=!0,e}inline(n,e=[]){return this.inlineQueue.push({src:n,tokens:e}),e}inlineTokens(n,e=[]){let t,o,l,h=n,g,z,P;if(this.tokens.links){const D=Object.keys(this.tokens.links);if(D.length>0)for(;(g=this.tokenizer.rules.inline.reflinkSearch.exec(h))!=null;)D.includes(g[0].slice(g[0].lastIndexOf("[")+1,-1))&&(h=h.slice(0,g.index)+"["+E("a",g[0].length-2)+"]"+h.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(g=this.tokenizer.rules.inline.blockSkip.exec(h))!=null;)h=h.slice(0,g.index)+"["+E("a",g[0].length-2)+"]"+h.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(g=this.tokenizer.rules.inline.escapedEmSt.exec(h))!=null;)h=h.slice(0,g.index+g[0].length-2)+"++"+h.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex),this.tokenizer.rules.inline.escapedEmSt.lastIndex--;for(;n;)if(z||(P=""),z=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(D=>(t=D.call({lexer:this},n,e))?(n=n.substring(t.raw.length),e.push(t),!0):!1))){if(t=this.tokenizer.escape(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.tag(n)){n=n.substring(t.raw.length),o=e[e.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):e.push(t);continue}if(t=this.tokenizer.link(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.reflink(n,this.tokens.links)){n=n.substring(t.raw.length),o=e[e.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):e.push(t);continue}if(t=this.tokenizer.emStrong(n,h,P)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.codespan(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.br(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.del(n)){n=n.substring(t.raw.length),e.push(t);continue}if(t=this.tokenizer.autolink(n,zt)){n=n.substring(t.raw.length),e.push(t);continue}if(!this.state.inLink&&(t=this.tokenizer.url(n,zt))){n=n.substring(t.raw.length),e.push(t);continue}if(l=n,this.options.extensions&&this.options.extensions.startInline){let D=1/0;const S=n.slice(1);let L;this.options.extensions.startInline.forEach(function(w){L=w.call({lexer:this},S),typeof L=="number"&&L>=0&&(D=Math.min(D,L))}),D<1/0&&D>=0&&(l=n.substring(0,D+1))}if(t=this.tokenizer.inlineText(l,kt)){n=n.substring(t.raw.length),t.raw.slice(-1)!=="_"&&(P=t.raw.slice(-1)),z=!0,o=e[e.length-1],o&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):e.push(t);continue}if(n){const D="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent){console.error(D);break}else throw new Error(D)}}return e}}class wt{constructor(n){this.options=n||V}code(n,e,t){const o=(e||"").match(/\S*/)[0];if(this.options.highlight){const l=this.options.highlight(n,o);l!=null&&l!==n&&(t=!0,n=l)}return n=n.replace(/\n$/,"")+`
`,o?'<pre><code class="'+this.options.langPrefix+G(o)+'">'+(t?n:G(n,!0))+`</code></pre>
`:"<pre><code>"+(t?n:G(n,!0))+`</code></pre>
`}blockquote(n){return`<blockquote>
${n}</blockquote>
`}html(n){return n}heading(n,e,t,o){if(this.options.headerIds){const l=this.options.headerPrefix+o.slug(t);return`<h${e} id="${l}">${n}</h${e}>
`}return`<h${e}>${n}</h${e}>
`}hr(){return this.options.xhtml?`<hr/>
`:`<hr>
`}list(n,e,t){const o=e?"ol":"ul",l=e&&t!==1?' start="'+t+'"':"";return"<"+o+l+`>
`+n+"</"+o+`>
`}listitem(n){return`<li>${n}</li>
`}checkbox(n){return"<input "+(n?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(n){return`<p>${n}</p>
`}table(n,e){return e&&(e=`<tbody>${e}</tbody>`),`<table>
<thead>
`+n+`</thead>
`+e+`</table>
`}tablerow(n){return`<tr>
${n}</tr>
`}tablecell(n,e){const t=e.header?"th":"td";return(e.align?`<${t} align="${e.align}">`:`<${t}>`)+n+`</${t}>
`}strong(n){return`<strong>${n}</strong>`}em(n){return`<em>${n}</em>`}codespan(n){return`<code>${n}</code>`}br(){return this.options.xhtml?"<br/>":"<br>"}del(n){return`<del>${n}</del>`}link(n,e,t){if(n=bt(this.options.sanitize,this.options.baseUrl,n),n===null)return t;let o='<a href="'+n+'"';return e&&(o+=' title="'+e+'"'),o+=">"+t+"</a>",o}image(n,e,t){if(n=bt(this.options.sanitize,this.options.baseUrl,n),n===null)return t;let o=`<img src="${n}" alt="${t}"`;return e&&(o+=` title="${e}"`),o+=this.options.xhtml?"/>":">",o}text(n){return n}}class Wt{strong(n){return n}em(n){return n}codespan(n){return n}del(n){return n}html(n){return n}text(n){return n}link(n,e,t){return""+t}image(n,e,t){return""+t}br(){return""}}class Pt{constructor(){this.seen={}}serialize(n){return n.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")}getNextSafeSlug(n,e){let t=n,o=0;if(this.seen.hasOwnProperty(t)){o=this.seen[n];do o++,t=n+"-"+o;while(this.seen.hasOwnProperty(t))}return e||(this.seen[n]=o,this.seen[t]=0),t}slug(n,e={}){const t=this.serialize(n);return this.getNextSafeSlug(t,e.dryrun)}}class vt{constructor(n){this.options=n||V,this.options.renderer=this.options.renderer||new wt,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new Wt,this.slugger=new Pt}static parse(n,e){return new vt(e).parse(n)}static parseInline(n,e){return new vt(e).parseInline(n)}parse(n,e=!0){let t="",o,l,h,g,z,P,D,S,L,w,Gt,Lt,Ht,nt,Et,Vt,_t,$t,Ot;const ee=n.length;for(o=0;o<ee;o++){if(w=n[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[w.type]&&(Ot=this.options.extensions.renderers[w.type].call({parser:this},w),Ot!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(w.type))){t+=Ot||"";continue}switch(w.type){case"space":continue;case"hr":{t+=this.renderer.hr();continue}case"heading":{t+=this.renderer.heading(this.parseInline(w.tokens),w.depth,J(this.parseInline(w.tokens,this.textRenderer)),this.slugger);continue}case"code":{t+=this.renderer.code(w.text,w.lang,w.escaped);continue}case"table":{for(S="",D="",g=w.header.length,l=0;l<g;l++)D+=this.renderer.tablecell(this.parseInline(w.header[l].tokens),{header:!0,align:w.align[l]});for(S+=this.renderer.tablerow(D),L="",g=w.rows.length,l=0;l<g;l++){for(P=w.rows[l],D="",z=P.length,h=0;h<z;h++)D+=this.renderer.tablecell(this.parseInline(P[h].tokens),{header:!1,align:w.align[h]});L+=this.renderer.tablerow(D)}t+=this.renderer.table(S,L);continue}case"blockquote":{L=this.parse(w.tokens),t+=this.renderer.blockquote(L);continue}case"list":{for(Gt=w.ordered,Lt=w.start,Ht=w.loose,g=w.items.length,L="",l=0;l<g;l++)Et=w.items[l],Vt=Et.checked,_t=Et.task,nt="",Et.task&&($t=this.renderer.checkbox(Vt),Ht?Et.tokens.length>0&&Et.tokens[0].type==="paragraph"?(Et.tokens[0].text=$t+" "+Et.tokens[0].text,Et.tokens[0].tokens&&Et.tokens[0].tokens.length>0&&Et.tokens[0].tokens[0].type==="text"&&(Et.tokens[0].tokens[0].text=$t+" "+Et.tokens[0].tokens[0].text)):Et.tokens.unshift({type:"text",text:$t}):nt+=$t),nt+=this.parse(Et.tokens,Ht),L+=this.renderer.listitem(nt,_t,Vt);t+=this.renderer.list(L,Gt,Lt);continue}case"html":{t+=this.renderer.html(w.text);continue}case"paragraph":{t+=this.renderer.paragraph(this.parseInline(w.tokens));continue}case"text":{for(L=w.tokens?this.parseInline(w.tokens):w.text;o+1<ee&&n[o+1].type==="text";)w=n[++o],L+=`
`+(w.tokens?this.parseInline(w.tokens):w.text);t+=e?this.renderer.paragraph(L):L;continue}default:{const Ae='Token with "'+w.type+'" type was not found.';if(this.options.silent){console.error(Ae);return}else throw new Error(Ae)}}}return t}parseInline(n,e){e=e||this.renderer;let t="",o,l,h;const g=n.length;for(o=0;o<g;o++){if(l=n[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[l.type]&&(h=this.options.extensions.renderers[l.type].call({parser:this},l),h!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(l.type))){t+=h||"";continue}switch(l.type){case"escape":{t+=e.text(l.text);break}case"html":{t+=e.html(l.text);break}case"link":{t+=e.link(l.href,l.title,this.parseInline(l.tokens,e));break}case"image":{t+=e.image(l.href,l.title,l.text);break}case"strong":{t+=e.strong(this.parseInline(l.tokens,e));break}case"em":{t+=e.em(this.parseInline(l.tokens,e));break}case"codespan":{t+=e.codespan(l.text);break}case"br":{t+=e.br();break}case"del":{t+=e.del(this.parseInline(l.tokens,e));break}case"text":{t+=e.text(l.text);break}default:{const z='Token with "'+l.type+'" type was not found.';if(this.options.silent){console.error(z);return}else throw new Error(z)}}}return t}}class Dt{constructor(n){this.options=n||V}preprocess(n){return n}postprocess(n){return n}}et(Dt,"passThroughHooks",new Set(["preprocess","postprocess"]));function qt(f,n,e){return t=>{if(t.message+=`
Please report this to https://github.com/markedjs/marked.`,f){const o="<p>An error occurred:</p><pre>"+G(t.message+"",!0)+"</pre>";if(n)return Promise.resolve(o);if(e){e(null,o);return}return o}if(n)return Promise.reject(t);if(e){e(t);return}throw t}}function jt(f,n){return(e,t,o)=>{typeof t=="function"&&(o=t,t=null);const l=U({},t);t=U(U({},W.defaults),l);const h=qt(t.silent,t.async,o);if(typeof e=="undefined"||e===null)return h(new Error("marked(): input parameter is undefined or null"));if(typeof e!="string")return h(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected"));if(Tt(t),t.hooks&&(t.hooks.options=t),o){const g=t.highlight;let z;try{t.hooks&&(e=t.hooks.preprocess(e)),z=f(e,t)}catch(S){return h(S)}const P=function(S){let L;if(!S)try{t.walkTokens&&W.walkTokens(z,t.walkTokens),L=n(z,t),t.hooks&&(L=t.hooks.postprocess(L))}catch(w){S=w}return t.highlight=g,S?h(S):o(null,L)};if(!g||g.length<3||(delete t.highlight,!z.length))return P();let D=0;W.walkTokens(z,function(S){S.type==="code"&&(D++,setTimeout(()=>{g(S.text,S.lang,function(L,w){if(L)return P(L);w!=null&&w!==S.text&&(S.text=w,S.escaped=!0),D--,D===0&&P()})},0))}),D===0&&P();return}if(t.async)return Promise.resolve(t.hooks?t.hooks.preprocess(e):e).then(g=>f(g,t)).then(g=>t.walkTokens?Promise.all(W.walkTokens(g,t.walkTokens)).then(()=>g):g).then(g=>n(g,t)).then(g=>t.hooks?t.hooks.postprocess(g):g).catch(h);try{t.hooks&&(e=t.hooks.preprocess(e));const g=f(e,t);t.walkTokens&&W.walkTokens(g,t.walkTokens);let z=n(g,t);return t.hooks&&(z=t.hooks.postprocess(z)),z}catch(g){return h(g)}}}function W(f,n,e){return jt(At.lex,vt.parse)(f,n,e)}W.options=W.setOptions=function(f){return W.defaults=U(U({},W.defaults),f),It(W.defaults),W},W.getDefaults=ct,W.defaults=V,W.use=function(...f){const n=W.defaults.extensions||{renderers:{},childTokens:{}};f.forEach(e=>{const t=U({},e);if(t.async=W.defaults.async||t.async||!1,e.extensions&&(e.extensions.forEach(o=>{if(!o.name)throw new Error("extension name required");if(o.renderer){const l=n.renderers[o.name];l?n.renderers[o.name]=function(...h){let g=o.renderer.apply(this,h);return g===!1&&(g=l.apply(this,h)),g}:n.renderers[o.name]=o.renderer}if(o.tokenizer){if(!o.level||o.level!=="block"&&o.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");n[o.level]?n[o.level].unshift(o.tokenizer):n[o.level]=[o.tokenizer],o.start&&(o.level==="block"?n.startBlock?n.startBlock.push(o.start):n.startBlock=[o.start]:o.level==="inline"&&(n.startInline?n.startInline.push(o.start):n.startInline=[o.start]))}o.childTokens&&(n.childTokens[o.name]=o.childTokens)}),t.extensions=n),e.renderer){const o=W.defaults.renderer||new wt;for(const l in e.renderer){const h=o[l];o[l]=(...g)=>{let z=e.renderer[l].apply(o,g);return z===!1&&(z=h.apply(o,g)),z}}t.renderer=o}if(e.tokenizer){const o=W.defaults.tokenizer||new q;for(const l in e.tokenizer){const h=o[l];o[l]=(...g)=>{let z=e.tokenizer[l].apply(o,g);return z===!1&&(z=h.apply(o,g)),z}}t.tokenizer=o}if(e.hooks){const o=W.defaults.hooks||new Dt;for(const l in e.hooks){const h=o[l];Dt.passThroughHooks.has(l)?o[l]=g=>{if(W.defaults.async)return Promise.resolve(e.hooks[l].call(o,g)).then(P=>h.call(o,P));const z=e.hooks[l].call(o,g);return h.call(o,z)}:o[l]=(...g)=>{let z=e.hooks[l].apply(o,g);return z===!1&&(z=h.apply(o,g)),z}}t.hooks=o}if(e.walkTokens){const o=W.defaults.walkTokens;t.walkTokens=function(l){let h=[];return h.push(e.walkTokens.call(this,l)),o&&(h=h.concat(o.call(this,l))),h}}W.setOptions(t)})},W.walkTokens=function(f,n){let e=[];for(const t of f)switch(e=e.concat(n.call(W,t)),t.type){case"table":{for(const o of t.header)e=e.concat(W.walkTokens(o.tokens,n));for(const o of t.rows)for(const l of o)e=e.concat(W.walkTokens(l.tokens,n));break}case"list":{e=e.concat(W.walkTokens(t.items,n));break}default:W.defaults.extensions&&W.defaults.extensions.childTokens&&W.defaults.extensions.childTokens[t.type]?W.defaults.extensions.childTokens[t.type].forEach(function(o){e=e.concat(W.walkTokens(t[o],n))}):t.tokens&&(e=e.concat(W.walkTokens(t.tokens,n)))}return e},W.parseInline=jt(At.lexInline,vt.parseInline),W.Parser=vt,W.parser=vt.parse,W.Renderer=wt,W.TextRenderer=Wt,W.Lexer=At,W.lexer=At.lex,W.Tokenizer=q,W.Slugger=Pt,W.Hooks=Dt,W.parse=W;const te=W.options,re=W.setOptions,ie=W.use,ne=W.walkTokens,ae=W.parseInline,se=null,Ut=vt.parse,le=At.lex}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,