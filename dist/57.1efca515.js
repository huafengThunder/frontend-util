"use strict";(()=>{(self.webpackChunkfrontend_util=self.webpackChunkfrontend_util||[]).push([[57],{2274:(Ot,L,r)=>{r.d(L,{A:()=>ut});var y=r(1003),v=r.n(y),I=r(2905),nt=r.n(I),ot=r(436),dt=r.n(ot),W=new URL(r(840),r.b),H=nt()(v()),q=dt()(W);H.push([Ot.id,`@media (prefers-color-scheme: dark) {
  .jhuERrGy2Ez_juioftPJ,
  [data-theme="dark"] {
    /*dark*/
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #e6edf3;
    --color-fg-muted: #848d97;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110, 118, 129, 0.4);
    --color-accent-fg: #2f81f7;
    --color-accent-emphasis: #1f6feb;
    --color-success-fg: #3fb950;
    --color-success-emphasis: #238636;
    --color-attention-fg: #d29922;
    --color-attention-emphasis: #9e6a03;
    --color-attention-subtle: rgba(187, 128, 9, 0.15);
    --color-danger-fg: #f85149;
    --color-danger-emphasis: #da3633;
    --color-done-fg: #a371f7;
    --color-done-emphasis: #8957e5;
  }
}
@media (prefers-color-scheme: light) {
  .jhuERrGy2Ez_juioftPJ,
  [data-theme="light"] {
    /*light*/
    color-scheme: light;
    --color-prettylights-syntax-comment: #57606a;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #6639ba;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #1F2328;
    --color-fg-muted: #656d76;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsl(210, 18%, 87%);
    --color-neutral-muted: rgba(175, 184, 193, 0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-success-fg: #1a7f37;
    --color-success-emphasis: #1f883d;
    --color-attention-fg: #9a6700;
    --color-attention-emphasis: #9a6700;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #d1242f;
    --color-danger-emphasis: #cf222e;
    --color-done-fg: #8250df;
    --color-done-emphasis: #8250df;
  }
}
.jhuERrGy2Ez_juioftPJ {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}
.jhuERrGy2Ez_juioftPJ .aqLz6oeiJK9QIlGLbUub {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url(${q});
  mask-image: url(${q});
}
.jhuERrGy2Ez_juioftPJ details,
.jhuERrGy2Ez_juioftPJ figcaption,
.jhuERrGy2Ez_juioftPJ figure {
  display: block;
}
.jhuERrGy2Ez_juioftPJ summary {
  display: list-item;
}
.jhuERrGy2Ez_juioftPJ [hidden] {
  display: none !important;
}
.jhuERrGy2Ez_juioftPJ a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ abbr[title] {
  border-bottom: none;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
.jhuERrGy2Ez_juioftPJ b,
.jhuERrGy2Ez_juioftPJ strong {
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ dfn {
  font-style: italic;
}
.jhuERrGy2Ez_juioftPJ h1 {
  margin: 0.67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ small {
  font-size: 90%;
}
.jhuERrGy2Ez_juioftPJ sub,
.jhuERrGy2Ez_juioftPJ sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.jhuERrGy2Ez_juioftPJ sub {
  bottom: -0.25em;
}
.jhuERrGy2Ez_juioftPJ sup {
  top: -0.5em;
}
.jhuERrGy2Ez_juioftPJ img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ kbd,
.jhuERrGy2Ez_juioftPJ pre,
.jhuERrGy2Ez_juioftPJ samp {
  font-family: monospace;
  font-size: 1em;
}
.jhuERrGy2Ez_juioftPJ figure {
  margin: 1em 40px;
}
.jhuERrGy2Ez_juioftPJ hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: 0.25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}
.jhuERrGy2Ez_juioftPJ input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
.jhuERrGy2Ez_juioftPJ [type=button],
.jhuERrGy2Ez_juioftPJ [type=reset],
.jhuERrGy2Ez_juioftPJ [type=submit] {
  -webkit-appearance: button;
  appearance: button;
}
.jhuERrGy2Ez_juioftPJ [type=checkbox],
.jhuERrGy2Ez_juioftPJ [type=radio] {
  box-sizing: border-box;
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ [type=number]::-webkit-inner-spin-button,
.jhuERrGy2Ez_juioftPJ [type=number]::-webkit-outer-spin-button {
  height: auto;
}
.jhuERrGy2Ez_juioftPJ [type=search]::-webkit-search-cancel-button,
.jhuERrGy2Ez_juioftPJ [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-file-upload-button {
  -webkit-appearance: button;
  appearance: button;
  font: inherit;
}
.jhuERrGy2Ez_juioftPJ a:hover {
  text-decoration: underline;
}
.jhuERrGy2Ez_juioftPJ ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}
.jhuERrGy2Ez_juioftPJ hr::before {
  display: table;
  content: "";
}
.jhuERrGy2Ez_juioftPJ hr::after {
  display: table;
  clear: both;
  content: "";
}
.jhuERrGy2Ez_juioftPJ table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}
.jhuERrGy2Ez_juioftPJ td,
.jhuERrGy2Ez_juioftPJ th {
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ details summary {
  cursor: pointer;
}
.jhuERrGy2Ez_juioftPJ details:not([open]) > *:not(summary) {
  display: none !important;
}
.jhuERrGy2Ez_juioftPJ a:focus,
.jhuERrGy2Ez_juioftPJ [role=button]:focus,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.jhuERrGy2Ez_juioftPJ a:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ [role=button]:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus:not(:focus-visible),
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}
.jhuERrGy2Ez_juioftPJ a:focus-visible,
.jhuERrGy2Ez_juioftPJ [role=button]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}
.jhuERrGy2Ez_juioftPJ a:not([class]):focus,
.jhuERrGy2Ez_juioftPJ a:not([class]):focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus,
.jhuERrGy2Ez_juioftPJ input[type=radio]:focus-visible,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus,
.jhuERrGy2Ez_juioftPJ input[type=checkbox]:focus-visible {
  outline-offset: 0;
}
.jhuERrGy2Ez_juioftPJ kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}
.jhuERrGy2Ez_juioftPJ h1,
.jhuERrGy2Ez_juioftPJ h2,
.jhuERrGy2Ez_juioftPJ h3,
.jhuERrGy2Ez_juioftPJ h4,
.jhuERrGy2Ez_juioftPJ h5,
.jhuERrGy2Ez_juioftPJ h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}
.jhuERrGy2Ez_juioftPJ h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: 0.3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}
.jhuERrGy2Ez_juioftPJ h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}
.jhuERrGy2Ez_juioftPJ h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.875em;
}
.jhuERrGy2Ez_juioftPJ h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 0.85em;
  color: var(--color-fg-muted);
}
.jhuERrGy2Ez_juioftPJ p {
  margin-top: 0;
  margin-bottom: 10px;
}
.jhuERrGy2Ez_juioftPJ blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: 0.25em solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ ul,
.jhuERrGy2Ez_juioftPJ ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}
.jhuERrGy2Ez_juioftPJ ol ol,
.jhuERrGy2Ez_juioftPJ ul ol {
  list-style-type: lower-roman;
}
.jhuERrGy2Ez_juioftPJ ul ul ol,
.jhuERrGy2Ez_juioftPJ ul ol ol,
.jhuERrGy2Ez_juioftPJ ol ul ol,
.jhuERrGy2Ez_juioftPJ ol ol ol {
  list-style-type: lower-alpha;
}
.jhuERrGy2Ez_juioftPJ dd {
  margin-left: 0;
}
.jhuERrGy2Ez_juioftPJ tt,
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ samp {
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
}
.jhuERrGy2Ez_juioftPJ pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
  font-size: 12px;
  word-wrap: normal;
}
.jhuERrGy2Ez_juioftPJ .aqLz6oeiJK9QIlGLbUub {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}
.jhuERrGy2Ez_juioftPJ input::-webkit-outer-spin-button,
.jhuERrGy2Ez_juioftPJ input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}
.jhuERrGy2Ez_juioftPJ .xx2xJAGzaNS8rhIWQR_D {
  margin-right: var(--base-size-8, 8px) !important;
}
.jhuERrGy2Ez_juioftPJ::before {
  display: table;
  content: "";
}
.jhuERrGy2Ez_juioftPJ::after {
  display: table;
  clear: both;
  content: "";
}
.jhuERrGy2Ez_juioftPJ > *:first-child {
  margin-top: 0 !important;
}
.jhuERrGy2Ez_juioftPJ > *:last-child {
  margin-bottom: 0 !important;
}
.jhuERrGy2Ez_juioftPJ a:not([href]) {
  color: inherit;
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ .y1a3snSdabAY7BJykM_a {
  color: var(--color-danger-fg);
}
.jhuERrGy2Ez_juioftPJ .Kr09SQ9Ha168wbwr2smk {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}
.jhuERrGy2Ez_juioftPJ .Kr09SQ9Ha168wbwr2smk:focus {
  outline: none;
}
.jhuERrGy2Ez_juioftPJ p,
.jhuERrGy2Ez_juioftPJ blockquote,
.jhuERrGy2Ez_juioftPJ ul,
.jhuERrGy2Ez_juioftPJ ol,
.jhuERrGy2Ez_juioftPJ dl,
.jhuERrGy2Ez_juioftPJ table,
.jhuERrGy2Ez_juioftPJ pre,
.jhuERrGy2Ez_juioftPJ details {
  margin-top: 0;
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ blockquote > :first-child {
  margin-top: 0;
}
.jhuERrGy2Ez_juioftPJ blockquote > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ h1 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h2 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h3 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h4 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h5 .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h6 .HHtUXtK67S7PUOICWKh8 {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk {
  text-decoration: none;
}
.jhuERrGy2Ez_juioftPJ h1:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h2:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h3:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h4:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h5:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8,
.jhuERrGy2Ez_juioftPJ h6:hover .Kr09SQ9Ha168wbwr2smk .HHtUXtK67S7PUOICWKh8 {
  visibility: visible;
}
.jhuERrGy2Ez_juioftPJ h1 tt,
.jhuERrGy2Ez_juioftPJ h1 code,
.jhuERrGy2Ez_juioftPJ h2 tt,
.jhuERrGy2Ez_juioftPJ h2 code,
.jhuERrGy2Ez_juioftPJ h3 tt,
.jhuERrGy2Ez_juioftPJ h3 code,
.jhuERrGy2Ez_juioftPJ h4 tt,
.jhuERrGy2Ez_juioftPJ h4 code,
.jhuERrGy2Ez_juioftPJ h5 tt,
.jhuERrGy2Ez_juioftPJ h5 code,
.jhuERrGy2Ez_juioftPJ h6 tt,
.jhuERrGy2Ez_juioftPJ h6 code {
  padding: 0 0.2em;
  font-size: inherit;
}
.jhuERrGy2Ez_juioftPJ summary h1,
.jhuERrGy2Ez_juioftPJ summary h2,
.jhuERrGy2Ez_juioftPJ summary h3,
.jhuERrGy2Ez_juioftPJ summary h4,
.jhuERrGy2Ez_juioftPJ summary h5,
.jhuERrGy2Ez_juioftPJ summary h6 {
  display: inline-block;
}
.jhuERrGy2Ez_juioftPJ summary h1 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h2 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h3 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h4 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h5 .Kr09SQ9Ha168wbwr2smk,
.jhuERrGy2Ez_juioftPJ summary h6 .Kr09SQ9Ha168wbwr2smk {
  margin-left: -40px;
}
.jhuERrGy2Ez_juioftPJ summary h1,
.jhuERrGy2Ez_juioftPJ summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ ul.l4BDvRDEZbMeFS3kKioU,
.jhuERrGy2Ez_juioftPJ ol.l4BDvRDEZbMeFS3kKioU {
  padding: 0;
  list-style-type: none;
}
.jhuERrGy2Ez_juioftPJ ol[type="a s"] {
  list-style-type: lower-alpha;
}
.jhuERrGy2Ez_juioftPJ ol[type="A s"] {
  list-style-type: upper-alpha;
}
.jhuERrGy2Ez_juioftPJ ol[type="i s"] {
  list-style-type: lower-roman;
}
.jhuERrGy2Ez_juioftPJ ol[type="I s"] {
  list-style-type: upper-roman;
}
.jhuERrGy2Ez_juioftPJ ol[type="1"] {
  list-style-type: decimal;
}
.jhuERrGy2Ez_juioftPJ div > ol:not([type]) {
  list-style-type: decimal;
}
.jhuERrGy2Ez_juioftPJ ul ul,
.jhuERrGy2Ez_juioftPJ ul ol,
.jhuERrGy2Ez_juioftPJ ol ol,
.jhuERrGy2Ez_juioftPJ ol ul {
  margin-top: 0;
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ li > p {
  margin-top: 16px;
}
.jhuERrGy2Ez_juioftPJ li + li {
  margin-top: 0.25em;
}
.jhuERrGy2Ez_juioftPJ dl {
  padding: 0;
}
.jhuERrGy2Ez_juioftPJ dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ table th {
  font-weight: var(--base-text-weight-semibold, 600);
}
.jhuERrGy2Ez_juioftPJ table th,
.jhuERrGy2Ez_juioftPJ table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ table td > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}
.jhuERrGy2Ez_juioftPJ table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}
.jhuERrGy2Ez_juioftPJ table img {
  background-color: transparent;
}
.jhuERrGy2Ez_juioftPJ img[align=right] {
  padding-left: 20px;
}
.jhuERrGy2Ez_juioftPJ img[align=left] {
  padding-right: 20px;
}
.jhuERrGy2Ez_juioftPJ .sVWZE1xPFG24WQAG7H8B {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA {
  display: block;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA > span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA span img {
  display: block;
  float: left;
}
.jhuERrGy2Ez_juioftPJ span.tsl_eAyXAZ6MKpaZK3dA span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y {
  display: block;
  overflow: hidden;
  clear: both;
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}
.jhuERrGy2Ez_juioftPJ span.eEA2sgiBEe6uUV5b9t2Y span img {
  margin: 0 auto;
  text-align: center;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n {
  display: block;
  overflow: hidden;
  clear: both;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n > span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ span.F_OMwli_eNu1HOaXE65n span img {
  margin: 0;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ span.Boj9O06hTbDYBq9dj9Ok {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.Boj9O06hTbDYBq9dj9Ok span {
  margin: 13px 0 0;
}
.jhuERrGy2Ez_juioftPJ span.drtlILfmA__6QxELjtQb {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}
.jhuERrGy2Ez_juioftPJ span.drtlILfmA__6QxELjtQb > span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}
.jhuERrGy2Ez_juioftPJ code,
.jhuERrGy2Ez_juioftPJ tt {
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ code br,
.jhuERrGy2Ez_juioftPJ tt br {
  display: none;
}
.jhuERrGy2Ez_juioftPJ del code {
  text-decoration: inherit;
}
.jhuERrGy2Ez_juioftPJ samp {
  font-size: 85%;
}
.jhuERrGy2Ez_juioftPJ pre code {
  font-size: 100%;
}
.jhuERrGy2Ez_juioftPJ pre > code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ {
  margin-bottom: 16px;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ pre {
  margin-bottom: 0;
  word-break: normal;
}
.jhuERrGy2Ez_juioftPJ .wEr838MNb8lUZUVrZ1EZ pre,
.jhuERrGy2Ez_juioftPJ pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ pre code,
.jhuERrGy2Ez_juioftPJ pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ td,
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ .CH7mpl5DsIO8kngyOT_0 {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ tr {
  border-top: 0;
}
.jhuERrGy2Ez_juioftPJ .IaL7FdKkF8ZOmpmRoi5_ th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}
.jhuERrGy2Ez_juioftPJ [data-footnote-ref]::before {
  content: "[";
}
.jhuERrGy2Ez_juioftPJ [data-footnote-ref]::after {
  content: "]";
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D ol {
  padding-left: 16px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li {
  position: relative;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D li:target {
  color: var(--color-fg-default);
}
.jhuERrGy2Ez_juioftPJ ._yYqs64w5pJiFM0tJU3D .jsS3oJKd8THYHZ0YhvDU g-emoji {
  font-family: monospace;
}
.jhuERrGy2Ez_juioftPJ .nT03WuQHZc_DdjBYsHNW {
  color: var(--color-prettylights-syntax-comment);
}
.jhuERrGy2Ez_juioftPJ .wpumo5OElg7R1CR1SiSj,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .cWEOY24yVsl_9bIiFyRB {
  color: var(--color-prettylights-syntax-constant);
}
.jhuERrGy2Ez_juioftPJ .Dis570V1oCSk6ba_Io3H,
.jhuERrGy2Ez_juioftPJ .El0iqzn5ScEmDwF7oXB6 {
  color: var(--color-prettylights-syntax-entity);
}
.jhuERrGy2Ez_juioftPJ .DC2ctdUwt80pNJ5K1dPD,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .HpE9p7F1THi2G0CUkYb6 {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}
.jhuERrGy2Ez_juioftPJ .SPZVFdMZpTpU8ZTV4hbM {
  color: var(--color-prettylights-syntax-entity-tag);
}
.jhuERrGy2Ez_juioftPJ .vXmgXAYABRbvyxmjNzYD {
  color: var(--color-prettylights-syntax-keyword);
}
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9,
.jhuERrGy2Ez_juioftPJ .XyKqkv_R3D6JBERjpYWp,
.jhuERrGy2Ez_juioftPJ .PZoXMrDFdCwY860nyAN9 .BNeIIJp52E_LYiITLNDq .HpE9p7F1THi2G0CUkYb6,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .TYcsoypvWWZiaRt0Nwjy,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .eXsy6SAzaRMpXzob1iFH,
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .GD2eKfSpvO2DVcgIKK71 {
  color: var(--color-prettylights-syntax-string);
}
.jhuERrGy2Ez_juioftPJ .cWEOY24yVsl_9bIiFyRB,
.jhuERrGy2Ez_juioftPJ .dsJYgUlXjCcPyfd4axor {
  color: var(--color-prettylights-syntax-variable);
}
.jhuERrGy2Ez_juioftPJ .h_PzNrLzv30upAVl1rZF {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}
.jhuERrGy2Ez_juioftPJ .VfjTbz5D7jm39fTdPFCQ {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}
.jhuERrGy2Ez_juioftPJ .D3NpdSN5juqUCugoYucO {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}
.jhuERrGy2Ez_juioftPJ .pRv3Yf2NpOstbVKGYMYf .TYcsoypvWWZiaRt0Nwjy {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}
.jhuERrGy2Ez_juioftPJ ._ijf5VQmw6C2bwb2rwy4 {
  color: var(--color-prettylights-syntax-markup-list);
}
.jhuERrGy2Ez_juioftPJ .IX7JD5tkZRXospBpkZXr,
.jhuERrGy2Ez_juioftPJ .IX7JD5tkZRXospBpkZXr .El0iqzn5ScEmDwF7oXB6,
.jhuERrGy2Ez_juioftPJ .o6Gb0EsPDKY6kbA2DlAE {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}
.jhuERrGy2Ez_juioftPJ .LEzWd62OuUtiJrJg0XvM {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}
.jhuERrGy2Ez_juioftPJ ._5EUReYja67HglRBg2JA {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}
.jhuERrGy2Ez_juioftPJ .mKmFuRRyXwBYiKjJmd7p {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}
.jhuERrGy2Ez_juioftPJ .SxwFwbOFPYvybSfzwsyg {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}
.jhuERrGy2Ez_juioftPJ .clUkIb_NmY8_4zOgRBpq {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}
.jhuERrGy2Ez_juioftPJ .bJx8m9TOsXYaSj0QNroa {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}
.jhuERrGy2Ez_juioftPJ .NkLdaDUcpWEzVt14gs43 {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}
.jhuERrGy2Ez_juioftPJ .KDigDNVZSYul2AdV7fP3 {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}
.jhuERrGy2Ez_juioftPJ .VlQnpUClE6XrfLw5XXQA {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}
.jhuERrGy2Ez_juioftPJ .Zepx3TDSe1C1A9DF_uP_ {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}
.jhuERrGy2Ez_juioftPJ g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}
.jhuERrGy2Ez_juioftPJ g-emoji img {
  width: 1em;
  height: 1em;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo {
  list-style-type: none;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo label {
  font-weight: var(--base-text-weight-normal, 400);
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo.Otlzp2pKl18SMjc5l2hF label {
  cursor: pointer;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo + .jcVTlnE6Vbh_fYvsOZAo {
  margin-top: 4px;
}
.jhuERrGy2Ez_juioftPJ .jcVTlnE6Vbh_fYvsOZAo ._TLWEE2zJKemwxc8gjCZ {
  display: none;
}
.jhuERrGy2Ez_juioftPJ .qGdDQDu6UE6bxenQs3yV {
  margin: 0 0.2em 0.25em -1.4em;
  vertical-align: middle;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:dir(rtl) .qGdDQDu6UE6bxenQs3yV {
  margin: 0 -1.6em 0.25em 0.2em;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6 {
  position: relative;
}
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:hover .enhJ8uVNQ0WvDsDyVX1q,
.jhuERrGy2Ez_juioftPJ .SOYmrwDootVCiozakpl6:focus-within .enhJ8uVNQ0WvDsDyVX1q {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}
.jhuERrGy2Ez_juioftPJ ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA {
  padding: var(--base-size-8) var(--base-size-16);
  margin-bottom: 16px;
  color: inherit;
  border-left: 0.25em solid var(--color-border-default);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA > :first-child {
  margin-top: 0;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA > :last-child {
  margin-bottom: 0;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA .QD4_kRkHBdhtEcf6CzgB {
  display: flex;
  font-weight: var(--base-text-weight-medium, 500);
  align-items: center;
  line-height: 1;
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eVCyuX5_NeNdMltdPz3i {
  border-left-color: var(--color-accent-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eVCyuX5_NeNdMltdPz3i .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-accent-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eOdjWaU7Kuu4lsg683wr {
  border-left-color: var(--color-done-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.eOdjWaU7Kuu4lsg683wr .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-done-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.DylO7Nzr98vtpzwwQqAZ {
  border-left-color: var(--color-attention-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.DylO7Nzr98vtpzwwQqAZ .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-attention-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.FEe4cfkpQ65Z4XBsgV38 {
  border-left-color: var(--color-success-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.FEe4cfkpQ65Z4XBsgV38 .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-success-fg);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.m_Mu0cpLObIuSFlB2wUe {
  border-left-color: var(--color-danger-emphasis);
}
.jhuERrGy2Ez_juioftPJ .GNKmGPHnJcvpzbDuo4KA.m_Mu0cpLObIuSFlB2wUe .QD4_kRkHBdhtEcf6CzgB {
  color: var(--color-danger-fg);
}
`,"",{version:3,sources:["webpack://./node_modules/github-markdown-css/github-markdown.css"],names:[],mappings:"AAAA;EACE;;IAEE,OAAO;IACP,kBAAA;IACA,4CAAA;IACA,6CAAA;IACA,2CAAA;IACA,4DAAA;IACA,+CAAA;IACA,4CAAA;IACA,2CAAA;IACA,6CAAA;IACA,iEAAA;IACA,yDAAA;IACA,uDAAA;IACA,yDAAA;IACA,uDAAA;IACA,kDAAA;IACA,gDAAA;IACA,mDAAA;IACA,kDAAA;IACA,gDAAA;IACA,wDAAA;IACA,sDAAA;IACA,yDAAA;IACA,uDAAA;IACA,wDAAA;IACA,sDAAA;IACA,wDAAA;IACA,sDAAA;IACA,oDAAA;IACA,6DAAA;IACA,8DAAA;IACA,kEAAA;IACA,2BAAA;IACA,yBAAA;IACA,0BAAA;IACA,+BAAA;IACA,8BAAA;IACA,+BAAA;IACA,6BAAA;IACA,+CAAA;IACA,0BAAA;IACA,gCAAA;IACA,2BAAA;IACA,iCAAA;IACA,6BAAA;IACA,mCAAA;IACA,iDAAA;IACA,0BAAA;IACA,gCAAA;IACA,wBAAA;IACA,8BAAA;EACF;AACF;AAEA;EACE;;IACE,QAAQ;IAER,mBAAA;IACA,4CAAA;IACA,6CAAA;IACA,2CAAA;IACA,4DAAA;IACA,+CAAA;IACA,4CAAA;IACA,2CAAA;IACA,6CAAA;IACA,iEAAA;IACA,yDAAA;IACA,uDAAA;IACA,yDAAA;IACA,uDAAA;IACA,kDAAA;IACA,gDAAA;IACA,mDAAA;IACA,kDAAA;IACA,gDAAA;IACA,wDAAA;IACA,sDAAA;IACA,yDAAA;IACA,uDAAA;IACA,wDAAA;IACA,sDAAA;IACA,wDAAA;IACA,sDAAA;IACA,oDAAA;IACA,6DAAA;IACA,8DAAA;IACA,kEAAA;IACA,2BAAA;IACA,yBAAA;IACA,0BAAA;IACA,+BAAA;IACA,8BAAA;IACA,+BAAA;IACA,wCAAA;IACA,+CAAA;IACA,0BAAA;IACA,gCAAA;IACA,2BAAA;IACA,iCAAA;IACA,6BAAA;IACA,mCAAA;IACA,iCAAA;IACA,0BAAA;IACA,gCAAA;IACA,wBAAA;IACA,8BAAA;EAAF;AACF;AAGA;EACE,0BAAA;EACA,8BAAA;EACA,SAAA;EACA,8BAAA;EACA,6CAAA;EACA,4IAAA;EACA,eAAA;EACA,gBAAA;EACA,qBAAA;AADF;AAIA;EACE,qBAAA;EACA,kBAAA;EACA,2BAAA;AAFF;AAKA;;;;;;EAME,WAAA;EACA,YAAA;EACA,YAAA;EACA,qBAAA;EACA,8BAAA;EACA,2DAAA;EACA,mDAAA;AAHF;AAMA;;;EAGE,cAAA;AAJF;AAOA;EACE,kBAAA;AALF;AAQA;EACE,wBAAA;AANF;AASA;EACE,6BAAA;EACA,6BAAA;EACA,qBAAA;AAPF;AAUA;EACE,mBAAA;EACA,yCAAA;EACA,iCAAA;AARF;AAWA;;EAEE,kDAAA;AATF;AAYA;EACE,kBAAA;AAVF;AAaA;EACE,gBAAA;EACA,kDAAA;EACA,qBAAA;EACA,cAAA;EACA,kDAAA;AAXF;AAcA;EACE,+CAAA;EACA,8BAAA;AAZF;AAeA;EACE,cAAA;AAbF;AAgBA;;EAEE,cAAA;EACA,cAAA;EACA,kBAAA;EACA,wBAAA;AAdF;AAiBA;EACE,eAAA;AAfF;AAkBA;EACE,WAAA;AAhBF;AAmBA;EACE,kBAAA;EACA,eAAA;EACA,uBAAA;EACA,6CAAA;AAjBF;AAoBA;;;;EAIE,sBAAA;EACA,cAAA;AAlBF;AAqBA;EACE,gBAAA;AAnBF;AAsBA;EACE,uBAAA;EACA,gBAAA;EACA,uBAAA;EACA,kDAAA;EACA,cAAA;EACA,UAAA;EACA,cAAA;EACA,6CAAA;EACA,SAAA;AApBF;AAuBA;EACE,aAAA;EACA,SAAA;EACA,iBAAA;EACA,oBAAA;EACA,kBAAA;EACA,oBAAA;AArBF;AAwBA;;;EAGE,0BAAA;EACA,kBAAA;AAtBF;AAyBA;;EAEE,sBAAA;EACA,UAAA;AAvBF;AA0BA;;EAEE,YAAA;AAxBF;AA2BA;;EAEE,wBAAA;EACA,gBAAA;AAzBF;AA4BA;EACE,cAAA;EACA,aAAA;AA1BF;AA6BA;EACE,0BAAA;EACA,kBAAA;EACA,aAAA;AA3BF;AA8BA;EACE,0BAAA;AA5BF;AA+BA;EACE,6BAAA;EACA,UAAA;AA7BF;AAgCA;EACE,cAAA;EACA,WAAA;AA9BF;AAiCA;EACE,cAAA;EACA,WAAA;EACA,WAAA;AA/BF;AAkCA;EACE,iBAAA;EACA,yBAAA;EACA,cAAA;EACA,kBAAA;EACA,eAAA;EACA,cAAA;AAhCF;AAmCA;;EAEE,UAAA;AAjCF;AAoCA;EACE,eAAA;AAlCF;AAqCA;EACE,wBAAA;AAnCF;AAsCA;;;;EAIE,yCAAA;EACA,oBAAA;EACA,gBAAA;AApCF;AAuCA;;;;EAIE,8BAAA;AArCF;AAwCA;;;;EAIE,yCAAA;EACA,oBAAA;EACA,gBAAA;AAtCF;AAyCA;;;;;;EAME,iBAAA;AAvCF;AA0CA;EACE,qBAAA;EACA,gBAAA;EACA,6FAAA;EACA,iBAAA;EACA,8BAAA;EACA,sBAAA;EACA,4CAAA;EACA,4CAAA;EACA,+CAAA;EACA,kBAAA;EACA,qDAAA;AAxCF;AA2CA;;;;;;EAME,gBAAA;EACA,mBAAA;EACA,kDAAA;EACA,iBAAA;AAzCF;AA4CA;EACE,kDAAA;EACA,qBAAA;EACA,gBAAA;EACA,kDAAA;AA1CF;AA6CA;EACE,kDAAA;EACA,iBAAA;AA3CF;AA8CA;EACE,kDAAA;EACA,cAAA;AA5CF;AA+CA;EACE,kDAAA;EACA,kBAAA;AA7CF;AAgDA;EACE,kDAAA;EACA,iBAAA;EACA,4BAAA;AA9CF;AAiDA;EACE,aAAA;EACA,mBAAA;AA/CF;AAkDA;EACE,SAAA;EACA,cAAA;EACA,4BAAA;EACA,qDAAA;AAhDF;AAmDA;;EAEE,aAAA;EACA,gBAAA;EACA,iBAAA;AAjDF;AAoDA;;EAEE,4BAAA;AAlDF;AAqDA;;;;EAIE,4BAAA;AAnDF;AAsDA;EACE,cAAA;AApDF;AAuDA;;;EAGE,+FAAA;EACA,eAAA;AArDF;AAwDA;EACE,aAAA;EACA,gBAAA;EACA,+FAAA;EACA,eAAA;EACA,iBAAA;AAtDF;AAyDA;EACE,qBAAA;EACA,4BAAA;EACA,2BAAA;EACA,kBAAA;AAvDF;AA0DA;;EAEE,SAAA;EACA,wBAAA;EACA,gBAAA;AAxDF;AA2DA;EACE,gDAAA;AAzDF;AA4DA;EACE,cAAA;EACA,WAAA;AA1DF;AA6DA;EACE,cAAA;EACA,WAAA;EACA,WAAA;AA3DF;AA8DA;EACE,wBAAA;AA5DF;AA+DA;EACE,2BAAA;AA7DF;AAgEA;EACE,cAAA;EACA,qBAAA;AA9DF;AAiEA;EACE,6BAAA;AA/DF;AAkEA;EACE,WAAA;EACA,kBAAA;EACA,kBAAA;EACA,cAAA;AAhEF;AAmEA;EACE,aAAA;AAjEF;AAoEA;;;;;;;;EAQE,aAAA;EACA,mBAAA;AAlEF;AAqEA;EACE,aAAA;AAnEF;AAsEA;EACE,gBAAA;AApEF;AAuEA;;;;;;EAME,8BAAA;EACA,sBAAA;EACA,kBAAA;AArEF;AAwEA;;;;;;EAME,qBAAA;AAtEF;AAyEA;;;;;;EAME,mBAAA;AAvEF;AA0EA;;;;;;;;;;;;EAYE,gBAAA;EACA,kBAAA;AAxEF;AA2EA;;;;;;EAME,qBAAA;AAzEF;AA4EA;;;;;;EAME,kBAAA;AA1EF;AA6EA;;EAEE,iBAAA;EACA,gBAAA;AA3EF;AA8EA;;EAEE,UAAA;EACA,qBAAA;AA5EF;AA+EA;EACE,4BAAA;AA7EF;AAgFA;EACE,4BAAA;AA9EF;AAiFA;EACE,4BAAA;AA/EF;AAkFA;EACE,4BAAA;AAhFF;AAmFA;EACE,wBAAA;AAjFF;AAoFA;EACE,wBAAA;AAlFF;AAqFA;;;;EAIE,aAAA;EACA,gBAAA;AAnFF;AAsFA;EACE,gBAAA;AApFF;AAuFA;EACE,kBAAA;AArFF;AAwFA;EACE,UAAA;AAtFF;AAyFA;EACE,UAAA;EACA,gBAAA;EACA,cAAA;EACA,kBAAA;EACA,kDAAA;AAvFF;AA0FA;EACE,eAAA;EACA,mBAAA;AAxFF;AA2FA;EACE,kDAAA;AAzFF;AA4FA;;EAEE,iBAAA;EACA,6CAAA;AA1FF;AA6FA;EACE,gBAAA;AA3FF;AA8FA;EACE,6CAAA;EACA,+CAAA;AA5FF;AA+FA;EACE,4CAAA;AA7FF;AAgGA;EACE,6BAAA;AA9FF;AAiGA;EACE,kBAAA;AA/FF;AAkGA;EACE,mBAAA;AAhGF;AAmGA;EACE,eAAA;EACA,wBAAA;EACA,6BAAA;AAjGF;AAoGA;EACE,cAAA;EACA,gBAAA;AAlGF;AAqGA;EACE,cAAA;EACA,WAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;EACA,gBAAA;EACA,6CAAA;AAnGF;AAsGA;EACE,cAAA;EACA,WAAA;AApGF;AAuGA;EACE,cAAA;EACA,gBAAA;EACA,WAAA;EACA,8BAAA;AArGF;AAwGA;EACE,cAAA;EACA,gBAAA;EACA,WAAA;AAtGF;AAyGA;EACE,cAAA;EACA,mBAAA;EACA,gBAAA;EACA,kBAAA;AAvGF;AA0GA;EACE,cAAA;EACA,kBAAA;AAxGF;AA2GA;EACE,cAAA;EACA,gBAAA;EACA,WAAA;AAzGF;AA4GA;EACE,cAAA;EACA,gBAAA;EACA,gBAAA;EACA,iBAAA;AA1GF;AA6GA;EACE,SAAA;EACA,iBAAA;AA3GF;AA8GA;EACE,cAAA;EACA,WAAA;EACA,kBAAA;EACA,gBAAA;AA5GF;AA+GA;EACE,gBAAA;AA7GF;AAgHA;EACE,cAAA;EACA,YAAA;EACA,iBAAA;EACA,gBAAA;AA9GF;AAiHA;EACE,cAAA;EACA,mBAAA;EACA,gBAAA;EACA,iBAAA;AA/GF;AAkHA;;EAEE,oBAAA;EACA,SAAA;EACA,cAAA;EACA,yBAAA;EACA,4CAAA;EACA,kBAAA;AAhHF;AAmHA;;EAEE,aAAA;AAjHF;AAoHA;EACE,wBAAA;AAlHF;AAqHA;EACE,cAAA;AAnHF;AAsHA;EACE,eAAA;AApHF;AAuHA;EACE,UAAA;EACA,SAAA;EACA,kBAAA;EACA,gBAAA;EACA,uBAAA;EACA,SAAA;AArHF;AAwHA;EACE,mBAAA;AAtHF;AAyHA;EACE,gBAAA;EACA,kBAAA;AAvHF;AA0HA;;EAEE,aAAA;EACA,cAAA;EACA,cAAA;EACA,iBAAA;EACA,8BAAA;EACA,4CAAA;EACA,kBAAA;AAxHF;AA2HA;;EAEE,eAAA;EACA,eAAA;EACA,UAAA;EACA,SAAA;EACA,iBAAA;EACA,oBAAA;EACA,iBAAA;EACA,6BAAA;EACA,SAAA;AAzHF;AA4HA;;EAEE,YAAA;EACA,gBAAA;EACA,eAAA;EACA,cAAA;EACA,gBAAA;EACA,mBAAA;AA1HF;AA6HA;EACE,qBAAA;EACA,iBAAA;EACA,uCAAA;EACA,SAAA;AA3HF;AA8HA;EACE,aAAA;AA5HF;AA+HA;EACE,kDAAA;EACA,sCAAA;EACA,aAAA;AA7HF;AAgIA;EACE,YAAA;AA9HF;AAiIA;EACE,YAAA;AA/HF;AAkIA;EACE,eAAA;EACA,4BAAA;EACA,iDAAA;AAhIF;AAmIA;EACE,kBAAA;AAjIF;AAoIA;EACE,qBAAA;EACA,kBAAA;EACA,gBAAA;AAlIF;AAqIA;EACE,kBAAA;AAnIF;AAsIA;EACE,kBAAA;EACA,SAAA;EACA,WAAA;EACA,YAAA;EACA,WAAA;EACA,oBAAA;EACA,WAAA;EACA,8CAAA;EACA,kBAAA;AApIF;AAuIA;EACE,8BAAA;AArIF;AAwIA;EACE,sBAAA;AAtIF;AAyIA;EACE,+CAAA;AAvIF;AA0IA;;EAEE,gDAAA;AAxIF;AA2IA;;EAEE,8CAAA;AAzIF;AA4IA;;EAEE,+DAAA;AA1IF;AA6IA;EACE,kDAAA;AA3IF;AA8IA;EACE,+CAAA;AA5IF;AA+IA;;;;;;;EAOE,8CAAA;AA7IF;AAgJA;;EAEE,gDAAA;AA9IF;AAiJA;EACE,oEAAA;AA/IF;AAkJA;EACE,4DAAA;EACA,qEAAA;AAhJF;AAmJA;EACE,4DAAA;EACA,qEAAA;AAjJF;AAoJA;EACE,iBAAA;EACA,qDAAA;AAlJF;AAqJA;EACE,mDAAA;AAnJF;AAsJA;;;EAGE,iBAAA;EACA,sDAAA;AApJF;AAuJA;EACE,kBAAA;EACA,qDAAA;AArJF;AAwJA;EACE,iBAAA;EACA,mDAAA;AAtJF;AAyJA;EACE,2DAAA;EACA,oEAAA;AAvJF;AA0JA;EACE,4DAAA;EACA,qEAAA;AAxJF;AA2JA;EACE,2DAAA;EACA,oEAAA;AAzJF;AA4JA;EACE,2DAAA;EACA,oEAAA;AA1JF;AA6JA;EACE,iBAAA;EACA,uDAAA;AA3JF;AA8JA;EACE,gEAAA;AA5JF;AA+JA;EACE,iEAAA;AA7JF;AAgKA;EACE,0BAAA;EACA,qEAAA;AA9JF;AAiKA;EACE,qBAAA;EACA,cAAA;EACA,qEAAA;EACA,cAAA;EACA,6BAAA;EACA,gDAAA;EACA,cAAA;EACA,wBAAA;AA/JF;AAkKA;EACE,UAAA;EACA,WAAA;AAhKF;AAmKA;EACE,qBAAA;AAjKF;AAoKA;EACE,gDAAA;AAlKF;AAqKA;EACE,eAAA;AAnKF;AAsKA;EACE,eAAA;AApKF;AAuKA;EACE,aAAA;AArKF;AAwKA;EACE,6BAAA;EACA,sBAAA;AAtKF;AAyKA;EACE,6BAAA;AAvKF;AA0KA;EACE,kBAAA;AAxKF;AA2KA;;EAEE,cAAA;EACA,WAAA;EACA,YAAA;EACA,iBAAA;EACA,UAAA;AAzKF;AA4KA;EACE,mBAAA;AA1KF;AA6KA;EACE,+CAAA;EACA,mBAAA;EACA,cAAA;EACA,qDAAA;AA3KF;AA8KA;EACE,aAAA;AA5KF;AA+KA;EACE,gBAAA;AA7KF;AAgLA;EACE,aAAA;EACA,gDAAA;EACA,mBAAA;EACA,cAAA;AA9KF;AAiLA;EACE,+CAAA;AA/KF;AAkLA;EACE,6BAAA;AAhLF;AAmLA;EACE,6CAAA;AAjLF;AAoLA;EACE,2BAAA;AAlLF;AAqLA;EACE,kDAAA;AAnLF;AAsLA;EACE,gCAAA;AApLF;AAuLA;EACE,gDAAA;AArLF;AAwLA;EACE,8BAAA;AAtLF;AAyLA;EACE,+CAAA;AAvLF;AA0LA;EACE,6BAAA;AAxLF",sourcesContent:[`@media (prefers-color-scheme: dark) {
  .markdown-body,
  [data-theme="dark"] {
    /*dark*/
    color-scheme: dark;
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
    --color-fg-default: #e6edf3;
    --color-fg-muted: #848d97;
    --color-fg-subtle: #6e7681;
    --color-canvas-default: #0d1117;
    --color-canvas-subtle: #161b22;
    --color-border-default: #30363d;
    --color-border-muted: #21262d;
    --color-neutral-muted: rgba(110,118,129,0.4);
    --color-accent-fg: #2f81f7;
    --color-accent-emphasis: #1f6feb;
    --color-success-fg: #3fb950;
    --color-success-emphasis: #238636;
    --color-attention-fg: #d29922;
    --color-attention-emphasis: #9e6a03;
    --color-attention-subtle: rgba(187,128,9,0.15);
    --color-danger-fg: #f85149;
    --color-danger-emphasis: #da3633;
    --color-done-fg: #a371f7;
    --color-done-emphasis: #8957e5;
  }
}

@media (prefers-color-scheme: light) {
  .markdown-body,
  [data-theme="light"] {
    /*light*/
    color-scheme: light;
    --color-prettylights-syntax-comment: #57606a;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #6639ba;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
    --color-fg-default: #1F2328;
    --color-fg-muted: #656d76;
    --color-fg-subtle: #6e7781;
    --color-canvas-default: #ffffff;
    --color-canvas-subtle: #f6f8fa;
    --color-border-default: #d0d7de;
    --color-border-muted: hsla(210,18%,87%,1);
    --color-neutral-muted: rgba(175,184,193,0.2);
    --color-accent-fg: #0969da;
    --color-accent-emphasis: #0969da;
    --color-success-fg: #1a7f37;
    --color-success-emphasis: #1f883d;
    --color-attention-fg: #9a6700;
    --color-attention-emphasis: #9a6700;
    --color-attention-subtle: #fff8c5;
    --color-danger-fg: #d1242f;
    --color-danger-emphasis: #cf222e;
    --color-done-fg: #8250df;
    --color-done-emphasis: #8250df;
  }
}

.markdown-body {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  margin: 0;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-default);
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}

.markdown-body .octicon {
  display: inline-block;
  fill: currentColor;
  vertical-align: text-bottom;
}

.markdown-body h1:hover .anchor .octicon-link:before,
.markdown-body h2:hover .anchor .octicon-link:before,
.markdown-body h3:hover .anchor .octicon-link:before,
.markdown-body h4:hover .anchor .octicon-link:before,
.markdown-body h5:hover .anchor .octicon-link:before,
.markdown-body h6:hover .anchor .octicon-link:before {
  width: 16px;
  height: 16px;
  content: ' ';
  display: inline-block;
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
  mask-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>");
}

.markdown-body details,
.markdown-body figcaption,
.markdown-body figure {
  display: block;
}

.markdown-body summary {
  display: list-item;
}

.markdown-body [hidden] {
  display: none !important;
}

.markdown-body a {
  background-color: transparent;
  color: var(--color-accent-fg);
  text-decoration: none;
}

.markdown-body abbr[title] {
  border-bottom: none;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

.markdown-body b,
.markdown-body strong {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dfn {
  font-style: italic;
}

.markdown-body h1 {
  margin: .67em 0;
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 2em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body mark {
  background-color: var(--color-attention-subtle);
  color: var(--color-fg-default);
}

.markdown-body small {
  font-size: 90%;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body sup {
  top: -0.5em;
}

.markdown-body img {
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
  background-color: var(--color-canvas-default);
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace;
  font-size: 1em;
}

.markdown-body figure {
  margin: 1em 40px;
}

.markdown-body hr {
  box-sizing: content-box;
  overflow: hidden;
  background: transparent;
  border-bottom: 1px solid var(--color-border-muted);
  height: .25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--color-border-default);
  border: 0;
}

.markdown-body input {
  font: inherit;
  margin: 0;
  overflow: visible;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.markdown-body [type=button],
.markdown-body [type=reset],
.markdown-body [type=submit] {
  -webkit-appearance: button;
  appearance: button;
}

.markdown-body [type=checkbox],
.markdown-body [type=radio] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body [type=number]::-webkit-inner-spin-button,
.markdown-body [type=number]::-webkit-outer-spin-button {
  height: auto;
}

.markdown-body [type=search]::-webkit-search-cancel-button,
.markdown-body [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}

.markdown-body ::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

.markdown-body ::-webkit-file-upload-button {
  -webkit-appearance: button;
  appearance: button;
  font: inherit;
}

.markdown-body a:hover {
  text-decoration: underline;
}

.markdown-body ::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}

.markdown-body hr::before {
  display: table;
  content: "";
}

.markdown-body hr::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body details summary {
  cursor: pointer;
}

.markdown-body details:not([open])>*:not(summary) {
  display: none !important;
}

.markdown-body a:focus,
.markdown-body [role=button]:focus,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=checkbox]:focus {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:focus:not(:focus-visible),
.markdown-body [role=button]:focus:not(:focus-visible),
.markdown-body input[type=radio]:focus:not(:focus-visible),
.markdown-body input[type=checkbox]:focus:not(:focus-visible) {
  outline: solid 1px transparent;
}

.markdown-body a:focus-visible,
.markdown-body [role=button]:focus-visible,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus-visible {
  outline: 2px solid var(--color-accent-fg);
  outline-offset: -2px;
  box-shadow: none;
}

.markdown-body a:not([class]):focus,
.markdown-body a:not([class]):focus-visible,
.markdown-body input[type=radio]:focus,
.markdown-body input[type=radio]:focus-visible,
.markdown-body input[type=checkbox]:focus,
.markdown-body input[type=checkbox]:focus-visible {
  outline-offset: 0;
}

.markdown-body kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  line-height: 10px;
  color: var(--color-fg-default);
  vertical-align: middle;
  background-color: var(--color-canvas-subtle);
  border: solid 1px var(--color-neutral-muted);
  border-bottom-color: var(--color-neutral-muted);
  border-radius: 6px;
  box-shadow: inset 0 -1px 0 var(--color-neutral-muted);
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: 1.25;
}

.markdown-body h2 {
  font-weight: var(--base-text-weight-semibold, 600);
  padding-bottom: .3em;
  font-size: 1.5em;
  border-bottom: 1px solid var(--color-border-muted);
}

.markdown-body h3 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1.25em;
}

.markdown-body h4 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: 1em;
}

.markdown-body h5 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .875em;
}

.markdown-body h6 {
  font-weight: var(--base-text-weight-semibold, 600);
  font-size: .85em;
  color: var(--color-fg-muted);
}

.markdown-body p {
  margin-top: 0;
  margin-bottom: 10px;
}

.markdown-body blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--color-fg-muted);
  border-left: .25em solid var(--color-border-default);
}

.markdown-body ul,
.markdown-body ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body tt,
.markdown-body code,
.markdown-body samp {
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 12px;
  word-wrap: normal;
}

.markdown-body .octicon {
  display: inline-block;
  overflow: visible !important;
  vertical-align: text-bottom;
  fill: currentColor;
}

.markdown-body input::-webkit-outer-spin-button,
.markdown-body input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}

.markdown-body .mr-2 {
  margin-right: var(--base-size-8, 8px) !important;
}

.markdown-body::before {
  display: table;
  content: "";
}

.markdown-body::after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body>*:first-child {
  margin-top: 0 !important;
}

.markdown-body>*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body a:not([href]) {
  color: inherit;
  text-decoration: none;
}

.markdown-body .absent {
  color: var(--color-danger-fg);
}

.markdown-body .anchor {
  float: left;
  padding-right: 4px;
  margin-left: -20px;
  line-height: 1;
}

.markdown-body .anchor:focus {
  outline: none;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body details {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body blockquote>:first-child {
  margin-top: 0;
}

.markdown-body blockquote>:last-child {
  margin-bottom: 0;
}

.markdown-body h1 .octicon-link,
.markdown-body h2 .octicon-link,
.markdown-body h3 .octicon-link,
.markdown-body h4 .octicon-link,
.markdown-body h5 .octicon-link,
.markdown-body h6 .octicon-link {
  color: var(--color-fg-default);
  vertical-align: middle;
  visibility: hidden;
}

.markdown-body h1:hover .anchor,
.markdown-body h2:hover .anchor,
.markdown-body h3:hover .anchor,
.markdown-body h4:hover .anchor,
.markdown-body h5:hover .anchor,
.markdown-body h6:hover .anchor {
  text-decoration: none;
}

.markdown-body h1:hover .anchor .octicon-link,
.markdown-body h2:hover .anchor .octicon-link,
.markdown-body h3:hover .anchor .octicon-link,
.markdown-body h4:hover .anchor .octicon-link,
.markdown-body h5:hover .anchor .octicon-link,
.markdown-body h6:hover .anchor .octicon-link {
  visibility: visible;
}

.markdown-body h1 tt,
.markdown-body h1 code,
.markdown-body h2 tt,
.markdown-body h2 code,
.markdown-body h3 tt,
.markdown-body h3 code,
.markdown-body h4 tt,
.markdown-body h4 code,
.markdown-body h5 tt,
.markdown-body h5 code,
.markdown-body h6 tt,
.markdown-body h6 code {
  padding: 0 .2em;
  font-size: inherit;
}

.markdown-body summary h1,
.markdown-body summary h2,
.markdown-body summary h3,
.markdown-body summary h4,
.markdown-body summary h5,
.markdown-body summary h6 {
  display: inline-block;
}

.markdown-body summary h1 .anchor,
.markdown-body summary h2 .anchor,
.markdown-body summary h3 .anchor,
.markdown-body summary h4 .anchor,
.markdown-body summary h5 .anchor,
.markdown-body summary h6 .anchor {
  margin-left: -40px;
}

.markdown-body summary h1,
.markdown-body summary h2 {
  padding-bottom: 0;
  border-bottom: 0;
}

.markdown-body ul.no-list,
.markdown-body ol.no-list {
  padding: 0;
  list-style-type: none;
}

.markdown-body ol[type="a s"] {
  list-style-type: lower-alpha;
}

.markdown-body ol[type="A s"] {
  list-style-type: upper-alpha;
}

.markdown-body ol[type="i s"] {
  list-style-type: lower-roman;
}

.markdown-body ol[type="I s"] {
  list-style-type: upper-roman;
}

.markdown-body ol[type="1"] {
  list-style-type: decimal;
}

.markdown-body div>ol:not([type]) {
  list-style-type: decimal;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li>p {
  margin-top: 16px;
}

.markdown-body li+li {
  margin-top: .25em;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body table th {
  font-weight: var(--base-text-weight-semibold, 600);
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}

.markdown-body table td>:last-child {
  margin-bottom: 0;
}

.markdown-body table tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}

.markdown-body table tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}

.markdown-body table img {
  background-color: transparent;
}

.markdown-body img[align=right] {
  padding-left: 20px;
}

.markdown-body img[align=left] {
  padding-right: 20px;
}

.markdown-body .emoji {
  max-width: none;
  vertical-align: text-top;
  background-color: transparent;
}

.markdown-body span.frame {
  display: block;
  overflow: hidden;
}

.markdown-body span.frame>span {
  display: block;
  float: left;
  width: auto;
  padding: 7px;
  margin: 13px 0 0;
  overflow: hidden;
  border: 1px solid var(--color-border-default);
}

.markdown-body span.frame span img {
  display: block;
  float: left;
}

.markdown-body span.frame span span {
  display: block;
  padding: 5px 0 0;
  clear: both;
  color: var(--color-fg-default);
}

.markdown-body span.align-center {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-center>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: center;
}

.markdown-body span.align-center span img {
  margin: 0 auto;
  text-align: center;
}

.markdown-body span.align-right {
  display: block;
  overflow: hidden;
  clear: both;
}

.markdown-body span.align-right>span {
  display: block;
  margin: 13px 0 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body span.align-right span img {
  margin: 0;
  text-align: right;
}

.markdown-body span.float-left {
  display: block;
  float: left;
  margin-right: 13px;
  overflow: hidden;
}

.markdown-body span.float-left span {
  margin: 13px 0 0;
}

.markdown-body span.float-right {
  display: block;
  float: right;
  margin-left: 13px;
  overflow: hidden;
}

.markdown-body span.float-right>span {
  display: block;
  margin: 13px auto 0;
  overflow: hidden;
  text-align: right;
}

.markdown-body code,
.markdown-body tt {
  padding: .2em .4em;
  margin: 0;
  font-size: 85%;
  white-space: break-spaces;
  background-color: var(--color-neutral-muted);
  border-radius: 6px;
}

.markdown-body code br,
.markdown-body tt br {
  display: none;
}

.markdown-body del code {
  text-decoration: inherit;
}

.markdown-body samp {
  font-size: 85%;
}

.markdown-body pre code {
  font-size: 100%;
}

.markdown-body pre>code {
  padding: 0;
  margin: 0;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .highlight {
  margin-bottom: 16px;
}

.markdown-body .highlight pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body .highlight pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  color: var(--color-fg-default);
  background-color: var(--color-canvas-subtle);
  border-radius: 6px;
}

.markdown-body pre code,
.markdown-body pre tt {
  display: inline;
  max-width: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body .csv-data td,
.markdown-body .csv-data th {
  padding: 5px;
  overflow: hidden;
  font-size: 12px;
  line-height: 1;
  text-align: left;
  white-space: nowrap;
}

.markdown-body .csv-data .blob-num {
  padding: 10px 8px 9px;
  text-align: right;
  background: var(--color-canvas-default);
  border: 0;
}

.markdown-body .csv-data tr {
  border-top: 0;
}

.markdown-body .csv-data th {
  font-weight: var(--base-text-weight-semibold, 600);
  background: var(--color-canvas-subtle);
  border-top: 0;
}

.markdown-body [data-footnote-ref]::before {
  content: "[";
}

.markdown-body [data-footnote-ref]::after {
  content: "]";
}

.markdown-body .footnotes {
  font-size: 12px;
  color: var(--color-fg-muted);
  border-top: 1px solid var(--color-border-default);
}

.markdown-body .footnotes ol {
  padding-left: 16px;
}

.markdown-body .footnotes ol ul {
  display: inline-block;
  padding-left: 16px;
  margin-top: 16px;
}

.markdown-body .footnotes li {
  position: relative;
}

.markdown-body .footnotes li:target::before {
  position: absolute;
  top: -8px;
  right: -8px;
  bottom: -8px;
  left: -24px;
  pointer-events: none;
  content: "";
  border: 2px solid var(--color-accent-emphasis);
  border-radius: 6px;
}

.markdown-body .footnotes li:target {
  color: var(--color-fg-default);
}

.markdown-body .footnotes .data-footnote-backref g-emoji {
  font-family: monospace;
}

.markdown-body .pl-c {
  color: var(--color-prettylights-syntax-comment);
}

.markdown-body .pl-c1,
.markdown-body .pl-s .pl-v {
  color: var(--color-prettylights-syntax-constant);
}

.markdown-body .pl-e,
.markdown-body .pl-en {
  color: var(--color-prettylights-syntax-entity);
}

.markdown-body .pl-smi,
.markdown-body .pl-s .pl-s1 {
  color: var(--color-prettylights-syntax-storage-modifier-import);
}

.markdown-body .pl-ent {
  color: var(--color-prettylights-syntax-entity-tag);
}

.markdown-body .pl-k {
  color: var(--color-prettylights-syntax-keyword);
}

.markdown-body .pl-s,
.markdown-body .pl-pds,
.markdown-body .pl-s .pl-pse .pl-s1,
.markdown-body .pl-sr,
.markdown-body .pl-sr .pl-cce,
.markdown-body .pl-sr .pl-sre,
.markdown-body .pl-sr .pl-sra {
  color: var(--color-prettylights-syntax-string);
}

.markdown-body .pl-v,
.markdown-body .pl-smw {
  color: var(--color-prettylights-syntax-variable);
}

.markdown-body .pl-bu {
  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);
}

.markdown-body .pl-ii {
  color: var(--color-prettylights-syntax-invalid-illegal-text);
  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);
}

.markdown-body .pl-c2 {
  color: var(--color-prettylights-syntax-carriage-return-text);
  background-color: var(--color-prettylights-syntax-carriage-return-bg);
}

.markdown-body .pl-sr .pl-cce {
  font-weight: bold;
  color: var(--color-prettylights-syntax-string-regexp);
}

.markdown-body .pl-ml {
  color: var(--color-prettylights-syntax-markup-list);
}

.markdown-body .pl-mh,
.markdown-body .pl-mh .pl-en,
.markdown-body .pl-ms {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-heading);
}

.markdown-body .pl-mi {
  font-style: italic;
  color: var(--color-prettylights-syntax-markup-italic);
}

.markdown-body .pl-mb {
  font-weight: bold;
  color: var(--color-prettylights-syntax-markup-bold);
}

.markdown-body .pl-md {
  color: var(--color-prettylights-syntax-markup-deleted-text);
  background-color: var(--color-prettylights-syntax-markup-deleted-bg);
}

.markdown-body .pl-mi1 {
  color: var(--color-prettylights-syntax-markup-inserted-text);
  background-color: var(--color-prettylights-syntax-markup-inserted-bg);
}

.markdown-body .pl-mc {
  color: var(--color-prettylights-syntax-markup-changed-text);
  background-color: var(--color-prettylights-syntax-markup-changed-bg);
}

.markdown-body .pl-mi2 {
  color: var(--color-prettylights-syntax-markup-ignored-text);
  background-color: var(--color-prettylights-syntax-markup-ignored-bg);
}

.markdown-body .pl-mdr {
  font-weight: bold;
  color: var(--color-prettylights-syntax-meta-diff-range);
}

.markdown-body .pl-ba {
  color: var(--color-prettylights-syntax-brackethighlighter-angle);
}

.markdown-body .pl-sg {
  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);
}

.markdown-body .pl-corl {
  text-decoration: underline;
  color: var(--color-prettylights-syntax-constant-other-reference-link);
}

.markdown-body g-emoji {
  display: inline-block;
  min-width: 1ch;
  font-family: "Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1em;
  font-style: normal !important;
  font-weight: var(--base-text-weight-normal, 400);
  line-height: 1;
  vertical-align: -0.075em;
}

.markdown-body g-emoji img {
  width: 1em;
  height: 1em;
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item label {
  font-weight: var(--base-text-weight-normal, 400);
}

.markdown-body .task-list-item.enabled label {
  cursor: pointer;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 4px;
}

.markdown-body .task-list-item .handle {
  display: none;
}

.markdown-body .task-list-item-checkbox {
  margin: 0 .2em .25em -1.4em;
  vertical-align: middle;
}

.markdown-body .contains-task-list:dir(rtl) .task-list-item-checkbox {
  margin: 0 -1.6em .25em .2em;
}

.markdown-body .contains-task-list {
  position: relative;
}

.markdown-body .contains-task-list:hover .task-list-item-convert-container,
.markdown-body .contains-task-list:focus-within .task-list-item-convert-container {
  display: block;
  width: auto;
  height: 24px;
  overflow: visible;
  clip: auto;
}

.markdown-body ::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}

.markdown-body .markdown-alert {
  padding: var(--base-size-8) var(--base-size-16);
  margin-bottom: 16px;
  color: inherit;
  border-left: .25em solid var(--color-border-default);
}

.markdown-body .markdown-alert>:first-child {
  margin-top: 0;
}

.markdown-body .markdown-alert>:last-child {
  margin-bottom: 0;
}

.markdown-body .markdown-alert .markdown-alert-title {
  display: flex;
  font-weight: var(--base-text-weight-medium, 500);
  align-items: center;
  line-height: 1;
}

.markdown-body .markdown-alert.markdown-alert-note {
  border-left-color: var(--color-accent-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-note .markdown-alert-title {
  color: var(--color-accent-fg);
}

.markdown-body .markdown-alert.markdown-alert-important {
  border-left-color: var(--color-done-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-important .markdown-alert-title {
  color: var(--color-done-fg);
}

.markdown-body .markdown-alert.markdown-alert-warning {
  border-left-color: var(--color-attention-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-warning .markdown-alert-title {
  color: var(--color-attention-fg);
}

.markdown-body .markdown-alert.markdown-alert-tip {
  border-left-color: var(--color-success-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-tip .markdown-alert-title {
  color: var(--color-success-fg);
}

.markdown-body .markdown-alert.markdown-alert-caution {
  border-left-color: var(--color-danger-emphasis);
}

.markdown-body .markdown-alert.markdown-alert-caution .markdown-alert-title {
  color: var(--color-danger-fg);
}
`],sourceRoot:""}]),H.locals={"markdown-body":"jhuERrGy2Ez_juioftPJ",octicon:"aqLz6oeiJK9QIlGLbUub",anchor:"Kr09SQ9Ha168wbwr2smk","octicon-link":"HHtUXtK67S7PUOICWKh8","mr-2":"xx2xJAGzaNS8rhIWQR_D",absent:"y1a3snSdabAY7BJykM_a","no-list":"l4BDvRDEZbMeFS3kKioU",emoji:"sVWZE1xPFG24WQAG7H8B",frame:"tsl_eAyXAZ6MKpaZK3dA","align-center":"eEA2sgiBEe6uUV5b9t2Y","align-right":"F_OMwli_eNu1HOaXE65n","float-left":"Boj9O06hTbDYBq9dj9Ok","float-right":"drtlILfmA__6QxELjtQb",highlight:"wEr838MNb8lUZUVrZ1EZ","csv-data":"IaL7FdKkF8ZOmpmRoi5_","blob-num":"CH7mpl5DsIO8kngyOT_0",footnotes:"_yYqs64w5pJiFM0tJU3D","data-footnote-backref":"jsS3oJKd8THYHZ0YhvDU","pl-c":"nT03WuQHZc_DdjBYsHNW","pl-c1":"wpumo5OElg7R1CR1SiSj","pl-s":"PZoXMrDFdCwY860nyAN9","pl-v":"cWEOY24yVsl_9bIiFyRB","pl-e":"Dis570V1oCSk6ba_Io3H","pl-en":"El0iqzn5ScEmDwF7oXB6","pl-smi":"DC2ctdUwt80pNJ5K1dPD","pl-s1":"HpE9p7F1THi2G0CUkYb6","pl-ent":"SPZVFdMZpTpU8ZTV4hbM","pl-k":"vXmgXAYABRbvyxmjNzYD","pl-pds":"XyKqkv_R3D6JBERjpYWp","pl-pse":"BNeIIJp52E_LYiITLNDq","pl-sr":"pRv3Yf2NpOstbVKGYMYf","pl-cce":"TYcsoypvWWZiaRt0Nwjy","pl-sre":"eXsy6SAzaRMpXzob1iFH","pl-sra":"GD2eKfSpvO2DVcgIKK71","pl-smw":"dsJYgUlXjCcPyfd4axor","pl-bu":"h_PzNrLzv30upAVl1rZF","pl-ii":"VfjTbz5D7jm39fTdPFCQ","pl-c2":"D3NpdSN5juqUCugoYucO","pl-ml":"_ijf5VQmw6C2bwb2rwy4","pl-mh":"IX7JD5tkZRXospBpkZXr","pl-ms":"o6Gb0EsPDKY6kbA2DlAE","pl-mi":"LEzWd62OuUtiJrJg0XvM","pl-mb":"_5EUReYja67HglRBg2JA","pl-md":"mKmFuRRyXwBYiKjJmd7p","pl-mi1":"SxwFwbOFPYvybSfzwsyg","pl-mc":"clUkIb_NmY8_4zOgRBpq","pl-mi2":"bJx8m9TOsXYaSj0QNroa","pl-mdr":"NkLdaDUcpWEzVt14gs43","pl-ba":"KDigDNVZSYul2AdV7fP3","pl-sg":"VlQnpUClE6XrfLw5XXQA","pl-corl":"Zepx3TDSe1C1A9DF_uP_","task-list-item":"jcVTlnE6Vbh_fYvsOZAo",enabled:"Otlzp2pKl18SMjc5l2hF",handle:"_TLWEE2zJKemwxc8gjCZ","task-list-item-checkbox":"qGdDQDu6UE6bxenQs3yV","contains-task-list":"SOYmrwDootVCiozakpl6","task-list-item-convert-container":"enhJ8uVNQ0WvDsDyVX1q","markdown-alert":"GNKmGPHnJcvpzbDuo4KA","markdown-alert-title":"QD4_kRkHBdhtEcf6CzgB","markdown-alert-note":"eVCyuX5_NeNdMltdPz3i","markdown-alert-important":"eOdjWaU7Kuu4lsg683wr","markdown-alert-warning":"DylO7Nzr98vtpzwwQqAZ","markdown-alert-tip":"FEe4cfkpQ65Z4XBsgV38","markdown-alert-caution":"m_Mu0cpLObIuSFlB2wUe"};const ut=H},4131:(Ot,L,r)=>{var y,v=r(5303);y={value:!0},L.A=void 0;var I=v(r(5211)),nt=r(7343),ot=L.A=(0,I.default)((0,nt.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"}),"Delete")},3318:(Ot,L,r)=>{var y,v=r(5303);y={value:!0},L.A=void 0;var I=v(r(5211)),nt=r(7343),ot=L.A=(0,I.default)((0,nt.jsx)("path",{d:"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2m0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19z"}),"Inbox")},4064:(Ot,L,r)=>{r.d(L,{A:()=>tt});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2926),dt=r(2458),W=r(1742),H=r(4747),q=r(3487),ut=r(7437),Dt=r(2533),K=r(6039),ct=r(3932),pt=r(8748);function wt(s){return(0,pt.Ay)("MuiButton",s)}const At=(0,ct.A)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","colorPrimary","colorSecondary","colorSuccess","colorError","colorInfo","colorWarning","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","icon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]),Y=I.createContext({}),N=I.createContext(void 0);var j=r(7343);const $=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],R=s=>{const{color:g,disableElevation:G,fullWidth:mt,size:ft,variant:Pt,classes:Lt}=s,w={root:["root",Pt,`${Pt}${(0,K.A)(g)}`,`size${(0,K.A)(ft)}`,`${Pt}Size${(0,K.A)(ft)}`,`color${(0,K.A)(g)}`,G&&"disableElevation",mt&&"fullWidth"],label:["label"],startIcon:["icon","startIcon",`iconSize${(0,K.A)(ft)}`],endIcon:["icon","endIcon",`iconSize${(0,K.A)(ft)}`]},T=(0,dt.A)(w,wt,Lt);return(0,v.A)({},Lt,T)},it=s=>(0,v.A)({},s.size==="small"&&{"& > *:nth-of-type(1)":{fontSize:18}},s.size==="medium"&&{"& > *:nth-of-type(1)":{fontSize:20}},s.size==="large"&&{"& > *:nth-of-type(1)":{fontSize:22}}),Et=(0,H.Ay)(Dt.A,{shouldForwardProp:s=>(0,q.A)(s)||s==="classes",name:"MuiButton",slot:"Root",overridesResolver:(s,g)=>{const{ownerState:G}=s;return[g.root,g[G.variant],g[`${G.variant}${(0,K.A)(G.color)}`],g[`size${(0,K.A)(G.size)}`],g[`${G.variant}Size${(0,K.A)(G.size)}`],G.color==="inherit"&&g.colorInherit,G.disableElevation&&g.disableElevation,G.fullWidth&&g.fullWidth]}})(({theme:s,ownerState:g})=>{var G,mt;const ft=s.palette.mode==="light"?s.palette.grey[300]:s.palette.grey[800],Pt=s.palette.mode==="light"?s.palette.grey.A100:s.palette.grey[700];return(0,v.A)({},s.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(s.vars||s).shape.borderRadius,transition:s.transitions.create(["background-color","box-shadow","border-color","color"],{duration:s.transitions.duration.short}),"&:hover":(0,v.A)({textDecoration:"none",backgroundColor:s.vars?`rgba(${s.vars.palette.text.primaryChannel} / ${s.vars.palette.action.hoverOpacity})`:(0,W.X4)(s.palette.text.primary,s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="text"&&g.color!=="inherit"&&{backgroundColor:s.vars?`rgba(${s.vars.palette[g.color].mainChannel} / ${s.vars.palette.action.hoverOpacity})`:(0,W.X4)(s.palette[g.color].main,s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="outlined"&&g.color!=="inherit"&&{border:`1px solid ${(s.vars||s).palette[g.color].main}`,backgroundColor:s.vars?`rgba(${s.vars.palette[g.color].mainChannel} / ${s.vars.palette.action.hoverOpacity})`:(0,W.X4)(s.palette[g.color].main,s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},g.variant==="contained"&&{backgroundColor:s.vars?s.vars.palette.Button.inheritContainedHoverBg:Pt,boxShadow:(s.vars||s).shadows[4],"@media (hover: none)":{boxShadow:(s.vars||s).shadows[2],backgroundColor:(s.vars||s).palette.grey[300]}},g.variant==="contained"&&g.color!=="inherit"&&{backgroundColor:(s.vars||s).palette[g.color].dark,"@media (hover: none)":{backgroundColor:(s.vars||s).palette[g.color].main}}),"&:active":(0,v.A)({},g.variant==="contained"&&{boxShadow:(s.vars||s).shadows[8]}),[`&.${At.focusVisible}`]:(0,v.A)({},g.variant==="contained"&&{boxShadow:(s.vars||s).shadows[6]}),[`&.${At.disabled}`]:(0,v.A)({color:(s.vars||s).palette.action.disabled},g.variant==="outlined"&&{border:`1px solid ${(s.vars||s).palette.action.disabledBackground}`},g.variant==="contained"&&{color:(s.vars||s).palette.action.disabled,boxShadow:(s.vars||s).shadows[0],backgroundColor:(s.vars||s).palette.action.disabledBackground})},g.variant==="text"&&{padding:"6px 8px"},g.variant==="text"&&g.color!=="inherit"&&{color:(s.vars||s).palette[g.color].main},g.variant==="outlined"&&{padding:"5px 15px",border:"1px solid currentColor"},g.variant==="outlined"&&g.color!=="inherit"&&{color:(s.vars||s).palette[g.color].main,border:s.vars?`1px solid rgba(${s.vars.palette[g.color].mainChannel} / 0.5)`:`1px solid ${(0,W.X4)(s.palette[g.color].main,.5)}`},g.variant==="contained"&&{color:s.vars?s.vars.palette.text.primary:(G=(mt=s.palette).getContrastText)==null?void 0:G.call(mt,s.palette.grey[300]),backgroundColor:s.vars?s.vars.palette.Button.inheritContainedBg:ft,boxShadow:(s.vars||s).shadows[2]},g.variant==="contained"&&g.color!=="inherit"&&{color:(s.vars||s).palette[g.color].contrastText,backgroundColor:(s.vars||s).palette[g.color].main},g.color==="inherit"&&{color:"inherit",borderColor:"currentColor"},g.size==="small"&&g.variant==="text"&&{padding:"4px 5px",fontSize:s.typography.pxToRem(13)},g.size==="large"&&g.variant==="text"&&{padding:"8px 11px",fontSize:s.typography.pxToRem(15)},g.size==="small"&&g.variant==="outlined"&&{padding:"3px 9px",fontSize:s.typography.pxToRem(13)},g.size==="large"&&g.variant==="outlined"&&{padding:"7px 21px",fontSize:s.typography.pxToRem(15)},g.size==="small"&&g.variant==="contained"&&{padding:"4px 10px",fontSize:s.typography.pxToRem(13)},g.size==="large"&&g.variant==="contained"&&{padding:"8px 22px",fontSize:s.typography.pxToRem(15)},g.fullWidth&&{width:"100%"})},({ownerState:s})=>s.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${At.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${At.disabled}`]:{boxShadow:"none"}}),_=(0,H.Ay)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(s,g)=>{const{ownerState:G}=s;return[g.startIcon,g[`iconSize${(0,K.A)(G.size)}`]]}})(({ownerState:s})=>(0,v.A)({display:"inherit",marginRight:8,marginLeft:-4},s.size==="small"&&{marginLeft:-2},it(s))),St=(0,H.Ay)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(s,g)=>{const{ownerState:G}=s;return[g.endIcon,g[`iconSize${(0,K.A)(G.size)}`]]}})(({ownerState:s})=>(0,v.A)({display:"inherit",marginRight:-4,marginLeft:8},s.size==="small"&&{marginRight:-2},it(s))),tt=I.forwardRef(function(g,G){const mt=I.useContext(Y),ft=I.useContext(N),Pt=(0,ot.A)(mt,g),Lt=(0,ut.A)({props:Pt,name:"MuiButton"}),{children:w,color:T="primary",component:at="button",className:yt,disabled:x=!1,disableElevation:b=!1,disableFocusRipple:Jt=!1,endIcon:D,focusVisibleClassName:z,fullWidth:Z=!1,size:V="medium",startIcon:ht,type:rt,variant:zt="text"}=Lt,Rt=(0,y.A)(Lt,$),kt=(0,v.A)({},Lt,{color:T,component:at,disabled:x,disableElevation:b,disableFocusRipple:Jt,fullWidth:Z,size:V,type:rt,variant:zt}),k=R(kt),It=ht&&(0,j.jsx)(_,{className:k.startIcon,ownerState:kt,children:ht}),Gt=D&&(0,j.jsx)(St,{className:k.endIcon,ownerState:kt,children:D}),Mt=ft||"";return(0,j.jsxs)(Et,(0,v.A)({ownerState:kt,className:(0,nt.A)(mt.className,k.root,yt,Mt),component:at,disabled:x,focusRipple:!Jt,focusVisibleClassName:(0,nt.A)(k.focusVisible,z),ref:G,type:rt},Rt,{classes:k,children:[It,w,Gt]}))})},2704:(Ot,L,r)=>{r.d(L,{A:()=>tt});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(4742),W=r(6039),H=r(7437),q=r(4747),ut=r(3932),Dt=r(8748);function K(s){return(0,Dt.Ay)("MuiCircularProgress",s)}const ct=(0,ut.A)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]),pt=null;var wt=r(7343);const vt=["className","color","disableShrink","size","style","thickness","value","variant"];let At=s=>s,jt,Y,B,N;const j=44,$=(0,dt.i7)(jt||(jt=At`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),R=(0,dt.i7)(Y||(Y=At`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),it=s=>{const{classes:g,variant:G,color:mt,disableShrink:ft}=s,Pt={root:["root",G,`color${(0,W.A)(mt)}`],svg:["svg"],circle:["circle",`circle${(0,W.A)(G)}`,ft&&"circleDisableShrink"]};return(0,ot.A)(Pt,K,g)},Et=(0,q.Ay)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(s,g)=>{const{ownerState:G}=s;return[g.root,g[G.variant],g[`color${(0,W.A)(G.color)}`]]}})(({ownerState:s,theme:g})=>(0,v.A)({display:"inline-block"},s.variant==="determinate"&&{transition:g.transitions.create("transform")},s.color!=="inherit"&&{color:(g.vars||g).palette[s.color].main}),({ownerState:s})=>s.variant==="indeterminate"&&(0,dt.AH)(B||(B=At`
      animation: ${0} 1.4s linear infinite;
    `),$)),_=(0,q.Ay)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(s,g)=>g.svg})({display:"block"}),St=(0,q.Ay)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(s,g)=>{const{ownerState:G}=s;return[g.circle,g[`circle${(0,W.A)(G.variant)}`],G.disableShrink&&g.circleDisableShrink]}})(({ownerState:s,theme:g})=>(0,v.A)({stroke:"currentColor"},s.variant==="determinate"&&{transition:g.transitions.create("stroke-dashoffset")},s.variant==="indeterminate"&&{strokeDasharray:"80px, 200px",strokeDashoffset:0}),({ownerState:s})=>s.variant==="indeterminate"&&!s.disableShrink&&(0,dt.AH)(N||(N=At`
      animation: ${0} 1.4s ease-in-out infinite;
    `),R)),tt=I.forwardRef(function(g,G){const mt=(0,H.A)({props:g,name:"MuiCircularProgress"}),{className:ft,color:Pt="primary",disableShrink:Lt=!1,size:w=40,style:T,thickness:at=3.6,value:yt=0,variant:x="indeterminate"}=mt,b=(0,y.A)(mt,vt),Jt=(0,v.A)({},mt,{color:Pt,disableShrink:Lt,size:w,thickness:at,value:yt,variant:x}),D=it(Jt),z={},Z={},V={};if(x==="determinate"){const ht=2*Math.PI*((j-at)/2);z.strokeDasharray=ht.toFixed(3),V["aria-valuenow"]=Math.round(yt),z.strokeDashoffset=`${((100-yt)/100*ht).toFixed(3)}px`,Z.transform="rotate(-90deg)"}return(0,wt.jsx)(Et,(0,v.A)({className:(0,nt.A)(D.root,ft),style:(0,v.A)({width:w,height:w},Z,T),ownerState:Jt,ref:G,role:"progressbar"},V,b,{children:(0,wt.jsx)(_,{className:D.svg,ownerState:Jt,viewBox:`${j/2} ${j/2} ${j} ${j}`,children:(0,wt.jsx)(St,{className:D.circle,style:z,ownerState:Jt,cx:j,cy:j,r:(j-at)/2,fill:"none",strokeWidth:at})})}))})},9910:(Ot,L,r)=>{r.d(L,{A:()=>jt});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(4747),W=r(7437),H=r(3932),q=r(8748);function ut(Y){return(0,q.Ay)("MuiDialogActions",Y)}const Dt=(0,H.A)("MuiDialogActions",["root","spacing"]),K=null;var ct=r(7343);const pt=["className","disableSpacing"],wt=Y=>{const{classes:B,disableSpacing:N}=Y,j={root:["root",!N&&"spacing"]};return(0,ot.A)(j,ut,B)},vt=(0,dt.Ay)("div",{name:"MuiDialogActions",slot:"Root",overridesResolver:(Y,B)=>{const{ownerState:N}=Y;return[B.root,!N.disableSpacing&&B.spacing]}})(({ownerState:Y})=>(0,v.A)({display:"flex",alignItems:"center",padding:8,justifyContent:"flex-end",flex:"0 0 auto"},!Y.disableSpacing&&{"& > :not(style) ~ :not(style)":{marginLeft:8}})),jt=I.forwardRef(function(B,N){const j=(0,W.A)({props:B,name:"MuiDialogActions"}),{className:$,disableSpacing:R=!1}=j,it=(0,y.A)(j,pt),Et=(0,v.A)({},j,{disableSpacing:R}),_=wt(Et);return(0,ct.jsx)(vt,(0,v.A)({className:(0,nt.A)(_.root,$),ownerState:Et,ref:N},it))})},8509:(Ot,L,r)=>{r.d(L,{A:()=>Y});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(4747),W=r(7437),H=r(3932),q=r(8748);function ut(B){return(0,q.Ay)("MuiDialogContent",B)}const Dt=(0,H.A)("MuiDialogContent",["root","dividers"]),K=null;var ct=r(1422),pt=r(7343);const wt=["className","dividers"],vt=B=>{const{classes:N,dividers:j}=B,$={root:["root",j&&"dividers"]};return(0,ot.A)($,ut,N)},At=(0,dt.Ay)("div",{name:"MuiDialogContent",slot:"Root",overridesResolver:(B,N)=>{const{ownerState:j}=B;return[N.root,j.dividers&&N.dividers]}})(({theme:B,ownerState:N})=>(0,v.A)({flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"20px 24px"},N.dividers?{padding:"16px 24px",borderTop:`1px solid ${(B.vars||B).palette.divider}`,borderBottom:`1px solid ${(B.vars||B).palette.divider}`}:{[`.${ct.A.root} + &`]:{paddingTop:0}})),Y=I.forwardRef(function(N,j){const $=(0,W.A)({props:N,name:"MuiDialogContent"}),{className:R,dividers:it=!1}=$,Et=(0,y.A)($,wt),_=(0,v.A)({},$,{dividers:it}),St=vt(_);return(0,pt.jsx)(At,(0,v.A)({className:(0,nt.A)(St.root,R),ownerState:_,ref:j},Et))})},3044:(Ot,L,r)=>{r.d(L,{A:()=>vt});var y=r(8733),v=r(1772),I=r(4999),nt=r(4164),ot=r(2458),dt=r(1362),W=r(4747),H=r(7437),q=r(1422),ut=r(1167),Dt=r(7343);const K=["className","id"],ct=At=>{const{classes:jt}=At,Y={root:["root"]};return(0,ot.A)(Y,q.t,jt)},pt=(0,W.Ay)(dt.A,{name:"MuiDialogTitle",slot:"Root",overridesResolver:(At,jt)=>jt.root})({padding:"16px 24px",flex:"0 0 auto"}),vt=I.forwardRef(function(jt,Y){const B=(0,H.A)({props:jt,name:"MuiDialogTitle"}),{className:N,id:j}=B,$=(0,v.A)(B,K),R=B,it=ct(R),{titleId:Et=j}=I.useContext(ut.A);return(0,Dt.jsx)(pt,(0,y.A)({component:"h2",className:(0,nt.A)(it.root,N),ownerState:R,ref:Y,variant:"h6",id:j!=null?j:Et},$))})},1422:(Ot,L,r)=>{r.d(L,{A:()=>ot,t:()=>I});var y=r(3932),v=r(8748);function I(dt){return(0,v.Ay)("MuiDialogTitle",dt)}const ot=(0,y.A)("MuiDialogTitle",["root"])},9156:(Ot,L,r)=>{r.d(L,{A:()=>Ht});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(4844),W=r(6039),H=r(9916),q=r(1678),ut=r(3043),Dt=r(7437),K=r(4747),ct=r(3932),pt=r(8748);function wt(tt){return(0,pt.Ay)("MuiDialog",tt)}const At=(0,ct.A)("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]);var jt=r(1167),Y=r(8833),B=r(2756),N=r(7343);const j=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],$=(0,K.Ay)(Y.A,{name:"MuiDialog",slot:"Backdrop",overrides:(tt,s)=>s.backdrop})({zIndex:-1}),R=tt=>{const{classes:s,scroll:g,maxWidth:G,fullWidth:mt,fullScreen:ft}=tt,Pt={root:["root"],container:["container",`scroll${(0,W.A)(g)}`],paper:["paper",`paperScroll${(0,W.A)(g)}`,`paperWidth${(0,W.A)(String(G))}`,mt&&"paperFullWidth",ft&&"paperFullScreen"]};return(0,ot.A)(Pt,wt,s)},it=(0,K.Ay)(H.A,{name:"MuiDialog",slot:"Root",overridesResolver:(tt,s)=>s.root})({"@media print":{position:"absolute !important"}}),Et=(0,K.Ay)("div",{name:"MuiDialog",slot:"Container",overridesResolver:(tt,s)=>{const{ownerState:g}=tt;return[s.container,s[`scroll${(0,W.A)(g.scroll)}`]]}})(({ownerState:tt})=>(0,v.A)({height:"100%","@media print":{height:"auto"},outline:0},tt.scroll==="paper"&&{display:"flex",justifyContent:"center",alignItems:"center"},tt.scroll==="body"&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&::after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})),_=(0,K.Ay)(ut.A,{name:"MuiDialog",slot:"Paper",overridesResolver:(tt,s)=>{const{ownerState:g}=tt;return[s.paper,s[`scrollPaper${(0,W.A)(g.scroll)}`],s[`paperWidth${(0,W.A)(String(g.maxWidth))}`],g.fullWidth&&s.paperFullWidth,g.fullScreen&&s.paperFullScreen]}})(({theme:tt,ownerState:s})=>(0,v.A)({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},s.scroll==="paper"&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},s.scroll==="body"&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"},!s.maxWidth&&{maxWidth:"calc(100% - 64px)"},s.maxWidth==="xs"&&{maxWidth:tt.breakpoints.unit==="px"?Math.max(tt.breakpoints.values.xs,444):`max(${tt.breakpoints.values.xs}${tt.breakpoints.unit}, 444px)`,[`&.${At.paperScrollBody}`]:{[tt.breakpoints.down(Math.max(tt.breakpoints.values.xs,444)+32*2)]:{maxWidth:"calc(100% - 64px)"}}},s.maxWidth&&s.maxWidth!=="xs"&&{maxWidth:`${tt.breakpoints.values[s.maxWidth]}${tt.breakpoints.unit}`,[`&.${At.paperScrollBody}`]:{[tt.breakpoints.down(tt.breakpoints.values[s.maxWidth]+32*2)]:{maxWidth:"calc(100% - 64px)"}}},s.fullWidth&&{width:"calc(100% - 64px)"},s.fullScreen&&{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,[`&.${At.paperScrollBody}`]:{margin:0,maxWidth:"100%"}})),Ht=I.forwardRef(function(s,g){const G=(0,Dt.A)({props:s,name:"MuiDialog"}),mt=(0,B.A)(),ft={enter:mt.transitions.duration.enteringScreen,exit:mt.transitions.duration.leavingScreen},{"aria-describedby":Pt,"aria-labelledby":Lt,BackdropComponent:w,BackdropProps:T,children:at,className:yt,disableEscapeKeyDown:x=!1,fullScreen:b=!1,fullWidth:Jt=!1,maxWidth:D="sm",onBackdropClick:z,onClick:Z,onClose:V,open:ht,PaperComponent:rt=ut.A,PaperProps:zt={},scroll:Rt="paper",TransitionComponent:kt=q.A,transitionDuration:k=ft,TransitionProps:It}=G,Gt=(0,y.A)(G,j),Mt=(0,v.A)({},G,{disableEscapeKeyDown:x,fullScreen:b,fullWidth:Jt,maxWidth:D,scroll:Rt}),Nt=R(Mt),bt=I.useRef(),Ft=e=>{bt.current=e.target===e.currentTarget},Kt=e=>{Z&&Z(e),bt.current&&(bt.current=null,z&&z(e),V&&V(e,"backdropClick"))},st=(0,dt.A)(Lt),d=I.useMemo(()=>({titleId:st}),[st]);return(0,N.jsx)(it,(0,v.A)({className:(0,nt.A)(Nt.root,yt),closeAfterTransition:!0,components:{Backdrop:$},componentsProps:{backdrop:(0,v.A)({transitionDuration:k,as:w},T)},disableEscapeKeyDown:x,onClose:V,open:ht,ref:g,onClick:Kt,ownerState:Mt},Gt,{children:(0,N.jsx)(kt,(0,v.A)({appear:!0,in:ht,timeout:k,role:"presentation"},It,{children:(0,N.jsx)(Et,{className:(0,nt.A)(Nt.container),onMouseDown:Ft,ownerState:Mt,children:(0,N.jsx)(_,(0,v.A)({as:rt,elevation:24,role:"dialog","aria-describedby":Pt,"aria-labelledby":st},zt,{className:(0,nt.A)(Nt.paper,zt.className),ownerState:Mt,children:(0,N.jsx)(jt.A.Provider,{value:d,children:at})}))})}))}))})},1167:(Ot,L,r)=>{r.d(L,{A:()=>I});var y=r(4999);const I=y.createContext({})},331:(Ot,L,r)=>{r.d(L,{A:()=>N});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(1742),W=r(4747),H=r(7437),q=r(2533),ut=r(6039),Dt=r(3932),K=r(8748);function ct(j){return(0,K.Ay)("MuiIconButton",j)}const wt=(0,Dt.A)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var vt=r(7343);const At=["edge","children","className","color","disabled","disableFocusRipple","size"],jt=j=>{const{classes:$,disabled:R,color:it,edge:Et,size:_}=j,St={root:["root",R&&"disabled",it!=="default"&&`color${(0,ut.A)(it)}`,Et&&`edge${(0,ut.A)(Et)}`,`size${(0,ut.A)(_)}`]};return(0,ot.A)(St,ct,$)},Y=(0,W.Ay)(q.A,{name:"MuiIconButton",slot:"Root",overridesResolver:(j,$)=>{const{ownerState:R}=j;return[$.root,R.color!=="default"&&$[`color${(0,ut.A)(R.color)}`],R.edge&&$[`edge${(0,ut.A)(R.edge)}`],$[`size${(0,ut.A)(R.size)}`]]}})(({theme:j,ownerState:$})=>(0,v.A)({textAlign:"center",flex:"0 0 auto",fontSize:j.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(j.vars||j).palette.action.active,transition:j.transitions.create("background-color",{duration:j.transitions.duration.shortest})},!$.disableRipple&&{"&:hover":{backgroundColor:j.vars?`rgba(${j.vars.palette.action.activeChannel} / ${j.vars.palette.action.hoverOpacity})`:(0,dt.X4)(j.palette.action.active,j.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},$.edge==="start"&&{marginLeft:$.size==="small"?-3:-12},$.edge==="end"&&{marginRight:$.size==="small"?-3:-12}),({theme:j,ownerState:$})=>{var R;const it=(R=(j.vars||j).palette)==null?void 0:R[$.color];return(0,v.A)({},$.color==="inherit"&&{color:"inherit"},$.color!=="inherit"&&$.color!=="default"&&(0,v.A)({color:it==null?void 0:it.main},!$.disableRipple&&{"&:hover":(0,v.A)({},it&&{backgroundColor:j.vars?`rgba(${it.mainChannel} / ${j.vars.palette.action.hoverOpacity})`:(0,dt.X4)(it.main,j.palette.action.hoverOpacity)},{"@media (hover: none)":{backgroundColor:"transparent"}})}),$.size==="small"&&{padding:5,fontSize:j.typography.pxToRem(18)},$.size==="large"&&{padding:12,fontSize:j.typography.pxToRem(28)},{[`&.${wt.disabled}`]:{backgroundColor:"transparent",color:(j.vars||j).palette.action.disabled}})}),N=I.forwardRef(function($,R){const it=(0,H.A)({props:$,name:"MuiIconButton"}),{edge:Et=!1,children:_,className:St,color:Ht="default",disabled:tt=!1,disableFocusRipple:s=!1,size:g="medium"}=it,G=(0,y.A)(it,At),mt=(0,v.A)({},it,{edge:Et,color:Ht,disabled:tt,disableFocusRipple:s,size:g}),ft=jt(mt);return(0,vt.jsx)(Y,(0,v.A)({className:(0,nt.A)(ft.root,St),centerRipple:!0,focusRipple:!s,disabled:tt,ref:R},G,{ownerState:mt,children:_}))})},3337:(Ot,L,r)=>{r.d(L,{A:()=>Y});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(2458),dt=r(4747),W=r(7437),H=r(3932),q=r(8748);function ut(B){return(0,q.Ay)("MuiListItemIcon",B)}const Dt=(0,H.A)("MuiListItemIcon",["root","alignItemsFlexStart"]),K=null;var ct=r(9199),pt=r(7343);const wt=["className"],vt=B=>{const{alignItems:N,classes:j}=B,$={root:["root",N==="flex-start"&&"alignItemsFlexStart"]};return(0,ot.A)($,ut,j)},At=(0,dt.Ay)("div",{name:"MuiListItemIcon",slot:"Root",overridesResolver:(B,N)=>{const{ownerState:j}=B;return[N.root,j.alignItems==="flex-start"&&N.alignItemsFlexStart]}})(({theme:B,ownerState:N})=>(0,v.A)({minWidth:56,color:(B.vars||B).palette.action.active,flexShrink:0,display:"inline-flex"},N.alignItems==="flex-start"&&{marginTop:8})),Y=I.forwardRef(function(N,j){const $=(0,W.A)({props:N,name:"MuiListItemIcon"}),{className:R}=$,it=(0,y.A)($,wt),Et=I.useContext(ct.A),_=(0,v.A)({},$,{alignItems:Et.alignItems}),St=vt(_);return(0,pt.jsx)(At,(0,v.A)({className:(0,nt.A)(St.root,R),ownerState:_,ref:j},it))})},9827:(Ot,L,r)=>{r.d(L,{Ay:()=>Lt});var y=r(1772),v=r(8733),I=r(4999),nt=r(4164),ot=r(400),dt=r(2458),W=r(1742),H=r(4747),q=r(7437),ut=r(2533),Dt=r(5525),K=r(7289),ct=r(6597),pt=r(9199),wt=r(3932),vt=r(8748);function At(w){return(0,vt.Ay)("MuiListItem",w)}const Y=(0,wt.A)("MuiListItem",["root","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","padding","button","secondaryAction","selected"]);var B=r(5150);function N(w){return(0,vt.Ay)("MuiListItemSecondaryAction",w)}const j=(0,wt.A)("MuiListItemSecondaryAction",["root","disableGutters"]),$=null;var R=r(7343);const it=["className"],Et=w=>{const{disableGutters:T,classes:at}=w,yt={root:["root",T&&"disableGutters"]};return(0,dt.A)(yt,N,at)},_=(0,H.Ay)("div",{name:"MuiListItemSecondaryAction",slot:"Root",overridesResolver:(w,T)=>{const{ownerState:at}=w;return[T.root,at.disableGutters&&T.disableGutters]}})(({ownerState:w})=>(0,v.A)({position:"absolute",right:16,top:"50%",transform:"translateY(-50%)"},w.disableGutters&&{right:0})),St=I.forwardRef(function(T,at){const yt=(0,q.A)({props:T,name:"MuiListItemSecondaryAction"}),{className:x}=yt,b=(0,y.A)(yt,it),Jt=I.useContext(pt.A),D=(0,v.A)({},yt,{disableGutters:Jt.disableGutters}),z=Et(D);return(0,R.jsx)(_,(0,v.A)({className:(0,nt.A)(z.root,x),ownerState:D,ref:at},b))});St.muiName="ListItemSecondaryAction";const Ht=St,tt=["className"],s=["alignItems","autoFocus","button","children","className","component","components","componentsProps","ContainerComponent","ContainerProps","dense","disabled","disableGutters","disablePadding","divider","focusVisibleClassName","secondaryAction","selected","slotProps","slots"],g=(w,T)=>{const{ownerState:at}=w;return[T.root,at.dense&&T.dense,at.alignItems==="flex-start"&&T.alignItemsFlexStart,at.divider&&T.divider,!at.disableGutters&&T.gutters,!at.disablePadding&&T.padding,at.button&&T.button,at.hasSecondaryAction&&T.secondaryAction]},G=w=>{const{alignItems:T,button:at,classes:yt,dense:x,disabled:b,disableGutters:Jt,disablePadding:D,divider:z,hasSecondaryAction:Z,selected:V}=w,ht={root:["root",x&&"dense",!Jt&&"gutters",!D&&"padding",z&&"divider",b&&"disabled",at&&"button",T==="flex-start"&&"alignItemsFlexStart",Z&&"secondaryAction",V&&"selected"],container:["container"]};return(0,dt.A)(ht,At,yt)},mt=(0,H.Ay)("div",{name:"MuiListItem",slot:"Root",overridesResolver:g})(({theme:w,ownerState:T})=>(0,v.A)({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left"},!T.disablePadding&&(0,v.A)({paddingTop:8,paddingBottom:8},T.dense&&{paddingTop:4,paddingBottom:4},!T.disableGutters&&{paddingLeft:16,paddingRight:16},!!T.secondaryAction&&{paddingRight:48}),!!T.secondaryAction&&{[`& > .${B.A.root}`]:{paddingRight:48}},{[`&.${Y.focusVisible}`]:{backgroundColor:(w.vars||w).palette.action.focus},[`&.${Y.selected}`]:{backgroundColor:w.vars?`rgba(${w.vars.palette.primary.mainChannel} / ${w.vars.palette.action.selectedOpacity})`:(0,W.X4)(w.palette.primary.main,w.palette.action.selectedOpacity),[`&.${Y.focusVisible}`]:{backgroundColor:w.vars?`rgba(${w.vars.palette.primary.mainChannel} / calc(${w.vars.palette.action.selectedOpacity} + ${w.vars.palette.action.focusOpacity}))`:(0,W.X4)(w.palette.primary.main,w.palette.action.selectedOpacity+w.palette.action.focusOpacity)}},[`&.${Y.disabled}`]:{opacity:(w.vars||w).palette.action.disabledOpacity}},T.alignItems==="flex-start"&&{alignItems:"flex-start"},T.divider&&{borderBottom:`1px solid ${(w.vars||w).palette.divider}`,backgroundClip:"padding-box"},T.button&&{transition:w.transitions.create("background-color",{duration:w.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(w.vars||w).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${Y.selected}:hover`]:{backgroundColor:w.vars?`rgba(${w.vars.palette.primary.mainChannel} / calc(${w.vars.palette.action.selectedOpacity} + ${w.vars.palette.action.hoverOpacity}))`:(0,W.X4)(w.palette.primary.main,w.palette.action.selectedOpacity+w.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:w.vars?`rgba(${w.vars.palette.primary.mainChannel} / ${w.vars.palette.action.selectedOpacity})`:(0,W.X4)(w.palette.primary.main,w.palette.action.selectedOpacity)}}},T.hasSecondaryAction&&{paddingRight:48})),ft=(0,H.Ay)("li",{name:"MuiListItem",slot:"Container",overridesResolver:(w,T)=>T.container})({position:"relative"}),Lt=I.forwardRef(function(T,at){const yt=(0,q.A)({props:T,name:"MuiListItem"}),{alignItems:x="center",autoFocus:b=!1,button:Jt=!1,children:D,className:z,component:Z,components:V={},componentsProps:ht={},ContainerComponent:rt="li",ContainerProps:{className:zt}={},dense:Rt=!1,disabled:kt=!1,disableGutters:k=!1,disablePadding:It=!1,divider:Gt=!1,focusVisibleClassName:Mt,secondaryAction:Nt,selected:bt=!1,slotProps:Ft={},slots:Kt={}}=yt,st=(0,y.A)(yt.ContainerProps,tt),d=(0,y.A)(yt,s),e=I.useContext(pt.A),n=I.useMemo(()=>({dense:Rt||e.dense||!1,alignItems:x,disableGutters:k}),[x,e.dense,Rt,k]),t=I.useRef(null);(0,K.A)(()=>{b&&t.current&&t.current.focus()},[b]);const o=I.Children.toArray(D),A=o.length&&(0,Dt.A)(o[o.length-1],["ListItemSecondaryAction"]),f=(0,v.A)({},yt,{alignItems:x,autoFocus:b,button:Jt,dense:n.dense,disabled:kt,disableGutters:k,disablePadding:It,divider:Gt,hasSecondaryAction:A,selected:bt}),m=G(f),C=(0,ct.A)(t,at),X=Kt.root||V.Root||mt,M=Ft.root||ht.root||{},O=(0,v.A)({className:(0,nt.A)(m.root,M.className,z),disabled:kt},d);let U=Z||"li";return Jt&&(O.component=Z||"div",O.focusVisibleClassName=(0,nt.A)(Y.focusVisible,Mt),U=ut.A),A?(U=!O.component&&!Z?"div":U,rt==="li"&&(U==="li"?U="div":O.component==="li"&&(O.component="div")),(0,R.jsx)(pt.A.Provider,{value:n,children:(0,R.jsxs)(ft,(0,v.A)({as:rt,className:(0,nt.A)(m.container,zt),ref:C,ownerState:f},st,{children:[(0,R.jsx)(X,(0,v.A)({},M,!(0,ot.g)(X)&&{as:U,ownerState:(0,v.A)({},f,M.ownerState)},O,{children:o})),o.pop()]}))})):(0,R.jsx)(pt.A.Provider,{value:n,children:(0,R.jsxs)(X,(0,v.A)({},M,{as:U,ref:C},!(0,ot.g)(X)&&{ownerState:(0,v.A)({},f,M.ownerState)},O,{children:[o,Nt&&(0,R.jsx)(Ht,{children:Nt})]}))})})},345:(Ot,L,r)=>{r.d(L,{A:()=>Jt});var y=r(1772),v=r(8733),I=r(4999),nt=r(4679),ot=r(2458),dt=r(5006),W=r(1806),H=r(6684),q=r(7343);function ut(D){return D.substring(2).toLowerCase()}function Dt(D,z){return z.documentElement.clientWidth<D.clientX||z.documentElement.clientHeight<D.clientY}function K(D){const{children:z,disableReactTree:Z=!1,mouseEvent:V="onClick",onClickAway:ht,touchEvent:rt="onTouchEnd"}=D,zt=I.useRef(!1),Rt=I.useRef(null),kt=I.useRef(!1),k=I.useRef(!1);I.useEffect(()=>(setTimeout(()=>{kt.current=!0},0),()=>{kt.current=!1}),[]);const It=(0,dt.A)(z.ref,Rt),Gt=(0,W.A)(bt=>{const Ft=k.current;k.current=!1;const Kt=(0,H.A)(Rt.current);if(!kt.current||!Rt.current||"clientX"in bt&&Dt(bt,Kt))return;if(zt.current){zt.current=!1;return}let st;bt.composedPath?st=bt.composedPath().indexOf(Rt.current)>-1:st=!Kt.documentElement.contains(bt.target)||Rt.current.contains(bt.target),!st&&(Z||!Ft)&&ht(bt)}),Mt=bt=>Ft=>{k.current=!0;const Kt=z.props[bt];Kt&&Kt(Ft)},Nt={ref:It};return rt!==!1&&(Nt[rt]=Mt(rt)),I.useEffect(()=>{if(rt!==!1){const bt=ut(rt),Ft=(0,H.A)(Rt.current),Kt=()=>{zt.current=!0};return Ft.addEventListener(bt,Gt),Ft.addEventListener("touchmove",Kt),()=>{Ft.removeEventListener(bt,Gt),Ft.removeEventListener("touchmove",Kt)}}},[Gt,rt]),V!==!1&&(Nt[V]=Mt(V)),I.useEffect(()=>{if(V!==!1){const bt=ut(V),Ft=(0,H.A)(Rt.current);return Ft.addEventListener(bt,Gt),()=>{Ft.removeEventListener(bt,Gt)}}},[Gt,V]),(0,q.jsx)(I.Fragment,{children:I.cloneElement(z,Nt)})}var ct=r(5515),pt=r(1331);function wt(D={}){const{autoHideDuration:z=null,disableWindowBlurListener:Z=!1,onClose:V,open:ht,resumeHideDuration:rt}=D,zt=(0,ct.A)();I.useEffect(()=>{if(!ht)return;function st(d){d.defaultPrevented||(d.key==="Escape"||d.key==="Esc")&&(V==null||V(d,"escapeKeyDown"))}return document.addEventListener("keydown",st),()=>{document.removeEventListener("keydown",st)}},[ht,V]);const Rt=(0,W.A)((st,d)=>{V==null||V(st,d)}),kt=(0,W.A)(st=>{!V||st==null||zt.start(st,()=>{Rt(null,"timeout")})});I.useEffect(()=>(ht&&kt(z),zt.clear),[ht,z,kt,zt]);const k=st=>{V==null||V(st,"clickaway")},It=zt.clear,Gt=I.useCallback(()=>{z!=null&&kt(rt!=null?rt:z*.5)},[z,rt,kt]),Mt=st=>d=>{const e=st.onBlur;e==null||e(d),Gt()},Nt=st=>d=>{const e=st.onFocus;e==null||e(d),It()},bt=st=>d=>{const e=st.onMouseEnter;e==null||e(d),It()},Ft=st=>d=>{const e=st.onMouseLeave;e==null||e(d),Gt()};return I.useEffect(()=>{if(!Z&&ht)return window.addEventListener("focus",Gt),window.addEventListener("blur",It),()=>{window.removeEventListener("focus",Gt),window.removeEventListener("blur",It)}},[Z,ht,Gt,It]),{getRootProps:(st={})=>{const d=(0,v.A)({},(0,pt.h)(D),(0,pt.h)(st));return(0,v.A)({role:"presentation"},st,d,{onBlur:Mt(d),onFocus:Nt(d),onMouseEnter:bt(d),onMouseLeave:Ft(d)})},onClickAway:k}}var vt=r(4747),At=r(2756),jt=r(7437),Y=r(6039),B=r(7076),N=r(4164),j=r(1742),$=r(3043),R=r(3932),it=r(8748);function Et(D){return(0,it.Ay)("MuiSnackbarContent",D)}const _=(0,R.A)("MuiSnackbarContent",["root","message","action"]),St=null,Ht=["action","className","message","role"],tt=D=>{const{classes:z}=D,Z={root:["root"],action:["action"],message:["message"]};return(0,ot.A)(Z,Et,z)},s=(0,vt.Ay)($.A,{name:"MuiSnackbarContent",slot:"Root",overridesResolver:(D,z)=>z.root})(({theme:D})=>{const z=D.palette.mode==="light"?.8:.98,Z=(0,j.tL)(D.palette.background.default,z);return(0,v.A)({},D.typography.body2,{color:D.vars?D.vars.palette.SnackbarContent.color:D.palette.getContrastText(Z),backgroundColor:D.vars?D.vars.palette.SnackbarContent.bg:Z,display:"flex",alignItems:"center",flexWrap:"wrap",padding:"6px 16px",borderRadius:(D.vars||D).shape.borderRadius,flexGrow:1,[D.breakpoints.up("sm")]:{flexGrow:"initial",minWidth:288}})}),g=(0,vt.Ay)("div",{name:"MuiSnackbarContent",slot:"Message",overridesResolver:(D,z)=>z.message})({padding:"8px 0"}),G=(0,vt.Ay)("div",{name:"MuiSnackbarContent",slot:"Action",overridesResolver:(D,z)=>z.action})({display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:16,marginRight:-8}),ft=I.forwardRef(function(z,Z){const V=(0,jt.A)({props:z,name:"MuiSnackbarContent"}),{action:ht,className:rt,message:zt,role:Rt="alert"}=V,kt=(0,y.A)(V,Ht),k=V,It=tt(k);return(0,q.jsxs)(s,(0,v.A)({role:Rt,square:!0,elevation:6,className:(0,N.A)(It.root,rt),ownerState:k,ref:Z},kt,{children:[(0,q.jsx)(g,{className:It.message,ownerState:k,children:zt}),ht?(0,q.jsx)(G,{className:It.action,ownerState:k,children:ht}):null]}))});function Pt(D){return(0,it.Ay)("MuiSnackbar",D)}const Lt=(0,R.A)("MuiSnackbar",["root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft"]),w=null,T=["onEnter","onExited"],at=["action","anchorOrigin","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","TransitionProps"],yt=D=>{const{classes:z,anchorOrigin:Z}=D,V={root:["root",`anchorOrigin${(0,Y.A)(Z.vertical)}${(0,Y.A)(Z.horizontal)}`]};return(0,ot.A)(V,Pt,z)},x=(0,vt.Ay)("div",{name:"MuiSnackbar",slot:"Root",overridesResolver:(D,z)=>{const{ownerState:Z}=D;return[z.root,z[`anchorOrigin${(0,Y.A)(Z.anchorOrigin.vertical)}${(0,Y.A)(Z.anchorOrigin.horizontal)}`]]}})(({theme:D,ownerState:z})=>{const Z={left:"50%",right:"auto",transform:"translateX(-50%)"};return(0,v.A)({zIndex:(D.vars||D).zIndex.snackbar,position:"fixed",display:"flex",left:8,right:8,justifyContent:"center",alignItems:"center"},z.anchorOrigin.vertical==="top"?{top:8}:{bottom:8},z.anchorOrigin.horizontal==="left"&&{justifyContent:"flex-start"},z.anchorOrigin.horizontal==="right"&&{justifyContent:"flex-end"},{[D.breakpoints.up("sm")]:(0,v.A)({},z.anchorOrigin.vertical==="top"?{top:24}:{bottom:24},z.anchorOrigin.horizontal==="center"&&Z,z.anchorOrigin.horizontal==="left"&&{left:24,right:"auto"},z.anchorOrigin.horizontal==="right"&&{right:24,left:"auto"})})}),Jt=I.forwardRef(function(z,Z){const V=(0,jt.A)({props:z,name:"MuiSnackbar"}),ht=(0,At.A)(),rt={enter:ht.transitions.duration.enteringScreen,exit:ht.transitions.duration.leavingScreen},{action:zt,anchorOrigin:{vertical:Rt,horizontal:kt}={vertical:"bottom",horizontal:"left"},autoHideDuration:k=null,children:It,className:Gt,ClickAwayListenerProps:Mt,ContentProps:Nt,disableWindowBlurListener:bt=!1,message:Ft,open:Kt,TransitionComponent:st=B.A,transitionDuration:d=rt,TransitionProps:{onEnter:e,onExited:n}={}}=V,t=(0,y.A)(V.TransitionProps,T),o=(0,y.A)(V,at),A=(0,v.A)({},V,{anchorOrigin:{vertical:Rt,horizontal:kt},autoHideDuration:k,disableWindowBlurListener:bt,TransitionComponent:st,transitionDuration:d}),f=yt(A),{getRootProps:m,onClickAway:C}=wt((0,v.A)({},A)),[X,M]=I.useState(!0),O=(0,nt.Q)({elementType:x,getSlotProps:m,externalForwardedProps:o,ownerState:A,additionalProps:{ref:Z},className:[f.root,Gt]}),U=Xt=>{M(!0),n&&n(Xt)},S=(Xt,Ut)=>{M(!1),e&&e(Xt,Ut)};return!Kt&&X?null:(0,q.jsx)(K,(0,v.A)({onClickAway:C},Mt,{children:(0,q.jsx)(x,(0,v.A)({},O,{children:(0,q.jsx)(st,(0,v.A)({appear:!0,in:Kt,timeout:d,direction:Rt==="top"?"down":"up",onEnter:S,onExited:U},t,{children:It||(0,q.jsx)(ft,(0,v.A)({message:Ft,action:zt},Nt))}))}))}))})},436:Ot=>{Ot.exports=function(L,r){return r||(r={}),L&&(L=String(L.__esModule?L.default:L),/^['"].*['"]$/.test(L)&&(L=L.slice(1,-1)),r.hash&&(L+=r.hash),/["'() \t\n]|(%20)/.test(L)||r.needQuotes?'"'.concat(L.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):L)}},7442:(Ot,L,r)=>{r.d(L,{n:()=>Pe,dh:()=>Ie});var y=r(4999),v=r(7874);function I(l){var i,u,p="";if(typeof l=="string"||typeof l=="number")p+=l;else if(typeof l=="object")if(Array.isArray(l))for(i=0;i<l.length;i++)l[i]&&(u=I(l[i]))&&(p&&(p+=" "),p+=u);else for(i in l)l[i]&&(p&&(p+=" "),p+=i);return p}function nt(){for(var l,i,u=0,p="";u<arguments.length;)(l=arguments[u++])&&(i=I(l))&&(p&&(p+=" "),p+=i);return p}const ot=nt;let dt={data:""},W=l=>typeof window=="object"?((l?l.querySelector("#_goober"):window._goober)||Object.assign((l||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:l||dt,H=l=>{let i=W(l),u=i.data;return i.data="",u},q=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,ut=/\/\*[^]*?\*\/|  +/g,Dt=/\n+/g,K=(l,i)=>{let u="",p="",a="";for(let c in l){let h=l[c];c[0]=="@"?c[1]=="i"?u=c+" "+h+";":p+=c[1]=="f"?K(h,c):c+"{"+K(h,c[1]=="k"?"":i)+"}":typeof h=="object"?p+=K(h,i?i.replace(/([^,])+/g,E=>c.replace(/(^:.*)|([^,])+/g,P=>/&/.test(P)?P.replace(/&/g,E):E?E+" "+P:P)):c):h!=null&&(c=/^--/.test(c)?c:c.replace(/[A-Z]/g,"-$&").toLowerCase(),a+=K.p?K.p(c,h):c+":"+h+";")}return u+(i&&a?i+"{"+a+"}":a)+p},ct={},pt=l=>{if(typeof l=="object"){let i="";for(let u in l)i+=u+pt(l[u]);return i}return l},wt=(l,i,u,p,a)=>{let c=pt(l),h=ct[c]||(ct[c]=(P=>{let J=0,F=11;for(;J<P.length;)F=101*F+P.charCodeAt(J++)>>>0;return"go"+F})(c));if(!ct[h]){let P=c!==l?l:(J=>{let F,et,lt=[{}];for(;F=q.exec(J.replace(ut,""));)F[4]?lt.shift():F[3]?(et=F[3].replace(Dt," ").trim(),lt.unshift(lt[0][et]=lt[0][et]||{})):lt[0][F[1]]=F[2].replace(Dt," ").trim();return lt[0]})(l);ct[h]=K(a?{["@keyframes "+h]:P}:P,u?"":"."+h)}let E=u&&ct.g?ct.g:null;return u&&(ct.g=ct[h]),((P,J,F,et)=>{et?J.data=J.data.replace(et,P):J.data.indexOf(P)===-1&&(J.data=F?P+J.data:J.data+P)})(ct[h],i,p,E),h},vt=(l,i,u)=>l.reduce((p,a,c)=>{let h=i[c];if(h&&h.call){let E=h(u),P=E&&E.props&&E.props.className||/^go/.test(E)&&E;h=P?"."+P:E&&typeof E=="object"?E.props?"":K(E,""):E===!1?"":E}return p+a+(h==null?"":h)},"");function At(l){let i=this||{},u=l.call?l(i.p):l;return wt(u.unshift?u.raw?vt(u,[].slice.call(arguments,1),i.p):u.reduce((p,a)=>Object.assign(p,a&&a.call?a(i.p):a),{}):u,W(i.target),i.g,i.o,i.k)}let jt,Y,B,N=At.bind({g:1}),j=At.bind({k:1});function $(l,i,u,p){K.p=i,jt=l,Y=u,B=p}function R(l,i){let u=this||{};return function(){let p=arguments;function a(c,h){let E=Object.assign({},c),P=E.className||a.className;u.p=Object.assign({theme:Y&&Y()},E),u.o=/ *go\d+/.test(P),E.className=At.apply(u,p)+(P?" "+P:""),i&&(E.ref=h);let J=l;return l[0]&&(J=E.as||l,delete E.as),B&&J[0]&&B(E),jt(J,E)}return i?i(a):a}}function it(l,i){for(var u=0;u<i.length;u++){var p=i[u];p.enumerable=p.enumerable||!1,p.configurable=!0,"value"in p&&(p.writable=!0),Object.defineProperty(l,p.key,p)}}function Et(l,i,u){return i&&it(l.prototype,i),u&&it(l,u),l}function _(){return _=Object.assign||function(l){for(var i=1;i<arguments.length;i++){var u=arguments[i];for(var p in u)Object.prototype.hasOwnProperty.call(u,p)&&(l[p]=u[p])}return l},_.apply(this,arguments)}function St(l,i){l.prototype=Object.create(i.prototype),l.prototype.constructor=l,l.__proto__=i}function Ht(l,i){if(l==null)return{};var u={},p=Object.keys(l),a,c;for(c=0;c<p.length;c++)a=p[c],!(i.indexOf(a)>=0)&&(u[a]=l[a]);return u}function tt(l){if(l===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return l}var s=function(){return""},g=y.createContext({enqueueSnackbar:s,closeSnackbar:s}),G={downXs:"@media (max-width:599.95px)",upSm:"@media (min-width:600px)"},mt=function(i){return i.charAt(0).toUpperCase()+i.slice(1)},ft=function(i){return""+mt(i.vertical)+mt(i.horizontal)},Pt=function(i){return!!i||i===0},Lt="unmounted",w="exited",T="entering",at="entered",yt="exiting",x=function(l){St(i,l);function i(p){var a;a=l.call(this,p)||this;var c=p.appear,h;return a.appearStatus=null,p.in?c?(h=w,a.appearStatus=T):h=at:p.unmountOnExit||p.mountOnEnter?h=Lt:h=w,a.state={status:h},a.nextCallback=null,a}i.getDerivedStateFromProps=function(a,c){var h=a.in;return h&&c.status===Lt?{status:w}:null};var u=i.prototype;return u.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},u.componentDidUpdate=function(a){var c=null;if(a!==this.props){var h=this.state.status;this.props.in?h!==T&&h!==at&&(c=T):(h===T||h===at)&&(c=yt)}this.updateStatus(!1,c)},u.componentWillUnmount=function(){this.cancelNextCallback()},u.getTimeouts=function(){var a=this.props.timeout,c=a,h=a;return a!=null&&typeof a!="number"&&typeof a!="string"&&(h=a.exit,c=a.enter),{exit:h,enter:c}},u.updateStatus=function(a,c){a===void 0&&(a=!1),c!==null?(this.cancelNextCallback(),c===T?this.performEnter(a):this.performExit()):this.props.unmountOnExit&&this.state.status===w&&this.setState({status:Lt})},u.performEnter=function(a){var c=this,h=this.props.enter,E=a,P=this.getTimeouts();if(!a&&!h){this.safeSetState({status:at},function(){c.props.onEntered&&c.props.onEntered(c.node,E)});return}this.props.onEnter&&this.props.onEnter(this.node,E),this.safeSetState({status:T},function(){c.props.onEntering&&c.props.onEntering(c.node,E),c.onTransitionEnd(P.enter,function(){c.safeSetState({status:at},function(){c.props.onEntered&&c.props.onEntered(c.node,E)})})})},u.performExit=function(){var a=this,c=this.props.exit,h=this.getTimeouts();if(!c){this.safeSetState({status:w},function(){a.props.onExited&&a.props.onExited(a.node)});return}this.props.onExit&&this.props.onExit(this.node),this.safeSetState({status:yt},function(){a.props.onExiting&&a.props.onExiting(a.node),a.onTransitionEnd(h.exit,function(){a.safeSetState({status:w},function(){a.props.onExited&&a.props.onExited(a.node)})})})},u.cancelNextCallback=function(){this.nextCallback!==null&&this.nextCallback.cancel&&(this.nextCallback.cancel(),this.nextCallback=null)},u.safeSetState=function(a,c){c=this.setNextCallback(c),this.setState(a,c)},u.setNextCallback=function(a){var c=this,h=!0;return this.nextCallback=function(){h&&(h=!1,c.nextCallback=null,a())},this.nextCallback.cancel=function(){h=!1},this.nextCallback},u.onTransitionEnd=function(a,c){this.setNextCallback(c);var h=a==null&&!this.props.addEndListener;if(!this.node||h){setTimeout(this.nextCallback,0);return}this.props.addEndListener&&this.props.addEndListener(this.node,this.nextCallback),a!=null&&setTimeout(this.nextCallback,a)},u.render=function(){var a=this.state.status;if(a===Lt)return null;var c=this.props,h=c.children,E=Ht(c,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return h(a,E)},Et(i,[{key:"node",get:function(){var a,c=(a=this.props.nodeRef)===null||a===void 0?void 0:a.current;if(!c)throw new Error("notistack - Custom snackbar is not refForwarding");return c}}]),i}(y.Component);function b(){}x.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:b,onEntering:b,onEntered:b,onExit:b,onExiting:b,onExited:b};function Jt(l,i){typeof l=="function"?l(i):l&&(l.current=i)}function D(l,i){return(0,y.useMemo)(function(){return l==null&&i==null?null:function(u){Jt(l,u),Jt(i,u)}},[l,i])}function z(l){var i=l.timeout,u=l.style,p=u===void 0?{}:u,a=l.mode;return{duration:typeof i=="object"?i[a]||0:i,easing:p.transitionTimingFunction,delay:p.transitionDelay}}var Z={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},V=function(i){i.scrollTop=i.scrollTop},ht=function(i){return Math.round(i)+"ms"};function rt(l,i){l===void 0&&(l=["all"]);var u=i||{},p=u.duration,a=p===void 0?300:p,c=u.easing,h=c===void 0?Z.easeInOut:c,E=u.delay,P=E===void 0?0:E,J=Array.isArray(l)?l:[l];return J.map(function(F){var et=typeof a=="string"?a:ht(a),lt=typeof P=="string"?P:ht(P);return F+" "+et+" "+h+" "+lt}).join(",")}function zt(l){return l&&l.ownerDocument||document}function Rt(l){var i=zt(l);return i.defaultView||window}function kt(l,i){i===void 0&&(i=166);var u;function p(){for(var a=this,c=arguments.length,h=new Array(c),E=0;E<c;E++)h[E]=arguments[E];var P=function(){l.apply(a,h)};clearTimeout(u),u=setTimeout(P,i)}return p.clear=function(){clearTimeout(u)},p}function k(l,i){var u=i.getBoundingClientRect(),p=Rt(i),a;if(i.fakeTransform)a=i.fakeTransform;else{var c=p.getComputedStyle(i);a=c.getPropertyValue("-webkit-transform")||c.getPropertyValue("transform")}var h=0,E=0;if(a&&a!=="none"&&typeof a=="string"){var P=a.split("(")[1].split(")")[0].split(",");h=parseInt(P[4],10),E=parseInt(P[5],10)}switch(l){case"left":return"translateX("+(p.innerWidth+h-u.left)+"px)";case"right":return"translateX(-"+(u.left+u.width-h)+"px)";case"up":return"translateY("+(p.innerHeight+E-u.top)+"px)";default:return"translateY(-"+(u.top+u.height-E)+"px)"}}function It(l,i){if(i){var u=k(l,i);u&&(i.style.webkitTransform=u,i.style.transform=u)}}var Gt=(0,y.forwardRef)(function(l,i){var u=l.children,p=l.direction,a=p===void 0?"down":p,c=l.in,h=l.style,E=l.timeout,P=E===void 0?0:E,J=l.onEnter,F=l.onEntered,et=l.onExit,lt=l.onExited,Yt=Ht(l,["children","direction","in","style","timeout","onEnter","onEntered","onExit","onExited"]),Q=(0,y.useRef)(null),gt=D(u.ref,Q),Bt=D(gt,i),Tt=function(Ct,re){It(a,Ct),V(Ct),J&&J(Ct,re)},Wt=function(Ct){var re=(h==null?void 0:h.transitionTimingFunction)||Z.easeOut,ie=z({timeout:P,mode:"enter",style:_({},h,{transitionTimingFunction:re})});Ct.style.webkitTransition=rt("-webkit-transform",ie),Ct.style.transition=rt("transform",ie),Ct.style.webkitTransform="none",Ct.style.transform="none"},_t=function(Ct){var re=(h==null?void 0:h.transitionTimingFunction)||Z.sharp,ie=z({timeout:P,mode:"exit",style:_({},h,{transitionTimingFunction:re})});Ct.style.webkitTransition=rt("-webkit-transform",ie),Ct.style.transition=rt("transform",ie),It(a,Ct),et&&et(Ct)},oe=function(Ct){Ct.style.webkitTransition="",Ct.style.transition="",lt&&lt(Ct)},Zt=(0,y.useCallback)(function(){Q.current&&It(a,Q.current)},[a]);return(0,y.useEffect)(function(){if(!(c||a==="down"||a==="right")){var te=kt(function(){Q.current&&It(a,Q.current)}),Ct=Rt(Q.current);return Ct.addEventListener("resize",te),function(){te.clear(),Ct.removeEventListener("resize",te)}}},[a,c]),(0,y.useEffect)(function(){c||Zt()},[c,Zt]),(0,y.createElement)(x,Object.assign({appear:!0,nodeRef:Q,onEnter:Tt,onEntered:F,onEntering:Wt,onExit:_t,onExited:oe,in:c,timeout:P},Yt),function(te,Ct){return(0,y.cloneElement)(u,_({ref:Bt,style:_({visibility:te==="exited"&&!c?"hidden":void 0},h,{},u.props.style)},Ct))})});Gt.displayName="Slide";var Mt=function(i){return y.createElement("svg",Object.assign({viewBox:"0 0 24 24",focusable:"false",style:{fontSize:20,marginInlineEnd:8,userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0}},i))},Nt=function(){return y.createElement(Mt,null,y.createElement("path",{d:`M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41
        10.59L10 14.17L17.59 6.58L19 8L10 17Z`}))},bt=function(){return y.createElement(Mt,null,y.createElement("path",{d:"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"}))},Ft=function(){return y.createElement(Mt,null,y.createElement("path",{d:`M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,
        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,
        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z`}))},Kt=function(){return y.createElement(Mt,null,y.createElement("path",{d:`M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,
        0 22,12A10,10 0 0,0 12,2Z`}))},st={default:void 0,success:y.createElement(Nt,null),warning:y.createElement(bt,null),error:y.createElement(Ft,null),info:y.createElement(Kt,null)},d={maxSnack:3,persist:!1,hideIconVariant:!1,disableWindowBlurListener:!1,variant:"default",autoHideDuration:5e3,iconVariant:st,anchorOrigin:{vertical:"bottom",horizontal:"left"},TransitionComponent:Gt,transitionDuration:{enter:225,exit:195}},e=function(i,u){var p=function(c){return typeof c=="number"||c===null};return p(i)?i:p(u)?u:d.autoHideDuration},n=function(i,u){var p=function(c,h){return h.some(function(E){return typeof c===E})};return p(i,["string","number"])?i:p(i,["object"])?_({},d.transitionDuration,{},p(u,["object"])&&u,{},i):p(u,["string","number"])?u:p(u,["object"])?_({},d.transitionDuration,{},u):d.transitionDuration},t=function(i,u){return function(p,a){return a===void 0&&(a=!1),a?_({},d[p],{},u[p],{},i[p]):p==="autoHideDuration"?e(i.autoHideDuration,u.autoHideDuration):p==="transitionDuration"?n(i.transitionDuration,u.transitionDuration):i[p]||u[p]||d[p]}};function o(l){return Object.entries(l).reduce(function(i,u){var p,a=u[0],c=u[1];return _({},i,(p={},p[a]=At(c),p))},{})}var A={SnackbarContainer:"notistack-SnackbarContainer",Snackbar:"notistack-Snackbar",CollapseWrapper:"notistack-CollapseWrapper",MuiContent:"notistack-MuiContent",MuiContentVariant:function(i){return"notistack-MuiContent-"+i}},f=o({root:{height:0},entered:{height:"auto"}}),m="0px",C=175,X=(0,y.forwardRef)(function(l,i){var u=l.children,p=l.in,a=l.onExited,c=(0,y.useRef)(null),h=(0,y.useRef)(null),E=D(i,h),P=function(){return c.current?c.current.clientHeight:0},J=function(gt){gt.style.height=m},F=function(gt){var Bt=P(),Tt=z({timeout:C,mode:"enter"}),Wt=Tt.duration,_t=Tt.easing;gt.style.transitionDuration=typeof Wt=="string"?Wt:Wt+"ms",gt.style.height=Bt+"px",gt.style.transitionTimingFunction=_t||""},et=function(gt){gt.style.height="auto"},lt=function(gt){gt.style.height=P()+"px"},Yt=function(gt){V(gt);var Bt=z({timeout:C,mode:"exit"}),Tt=Bt.duration,Wt=Bt.easing;gt.style.transitionDuration=typeof Tt=="string"?Tt:Tt+"ms",gt.style.height=m,gt.style.transitionTimingFunction=Wt||""};return(0,y.createElement)(x,{in:p,unmountOnExit:!0,onEnter:J,onEntered:et,onEntering:F,onExit:lt,onExited:a,onExiting:Yt,nodeRef:h,timeout:C},function(Q,gt){return(0,y.createElement)("div",Object.assign({ref:E,className:ot(f.root,Q==="entered"&&f.entered),style:_({pointerEvents:"all",overflow:"hidden",minHeight:m,transition:rt("height")},Q==="entered"&&{overflow:"visible"},{},Q==="exited"&&!p&&{visibility:"hidden"})},gt),(0,y.createElement)("div",{ref:c,className:A.CollapseWrapper,style:{display:"flex",width:"100%"}},u))})});X.displayName="Collapse";var M={right:"left",left:"right",bottom:"up",top:"down"},O=function(i){return i.horizontal!=="center"?M[i.horizontal]:M[i.vertical]},U=function(i){return"anchorOrigin"+ft(i)},S=function(i){i===void 0&&(i={});var u={containerRoot:!0,containerAnchorOriginTopCenter:!0,containerAnchorOriginBottomCenter:!0,containerAnchorOriginTopRight:!0,containerAnchorOriginBottomRight:!0,containerAnchorOriginTopLeft:!0,containerAnchorOriginBottomLeft:!0};return Object.keys(i).filter(function(p){return!u[p]}).reduce(function(p,a){var c;return _({},p,(c={},c[a]=i[a],c))},{})},Xt=function(){};function Ut(l,i){return l.reduce(function(u,p){return p==null?u:function(){for(var c=arguments.length,h=new Array(c),E=0;E<c;E++)h[E]=arguments[E];var P=[].concat(h);i&&P.indexOf(i)===-1&&P.push(i),u.apply(this,P),p.apply(this,P)}},Xt)}var ee=typeof window!="undefined"?y.useLayoutEffect:y.useEffect;function xt(l){var i=(0,y.useRef)(l);return ee(function(){i.current=l}),(0,y.useCallback)(function(){return i.current.apply(void 0,arguments)},[])}var $t=(0,y.forwardRef)(function(l,i){var u=l.children,p=l.className,a=l.autoHideDuration,c=l.disableWindowBlurListener,h=c===void 0?!1:c,E=l.onClose,P=l.id,J=l.open,F=l.SnackbarProps,et=F===void 0?{}:F,lt=(0,y.useRef)(),Yt=xt(function(){E&&E.apply(void 0,arguments)}),Q=xt(function(_t){!E||_t==null||(lt.current&&clearTimeout(lt.current),lt.current=setTimeout(function(){Yt(null,"timeout",P)},_t))});(0,y.useEffect)(function(){return J&&Q(a),function(){lt.current&&clearTimeout(lt.current)}},[J,a,Q]);var gt=function(){lt.current&&clearTimeout(lt.current)},Bt=(0,y.useCallback)(function(){a!=null&&Q(a*.5)},[a,Q]),Tt=function(oe){et.onMouseEnter&&et.onMouseEnter(oe),gt()},Wt=function(oe){et.onMouseLeave&&et.onMouseLeave(oe),Bt()};return(0,y.useEffect)(function(){if(!h&&J)return window.addEventListener("focus",Bt),window.addEventListener("blur",gt),function(){window.removeEventListener("focus",Bt),window.removeEventListener("blur",gt)}},[h,Bt,J]),(0,y.createElement)("div",Object.assign({ref:i},et,{className:ot(A.Snackbar,p),onMouseEnter:Tt,onMouseLeave:Wt}),u)});$t.displayName="Snackbar";var ne,qt=o({root:(ne={display:"flex",flexWrap:"wrap",flexGrow:1},ne[G.upSm]={flexGrow:"initial",minWidth:"288px"},ne)}),Qt=(0,y.forwardRef)(function(l,i){var u=l.className,p=Ht(l,["className"]);return y.createElement("div",Object.assign({ref:i,className:ot(qt.root,u)},p))});Qt.displayName="SnackbarContent";var Vt=o({root:{backgroundColor:"#313131",fontSize:"0.875rem",lineHeight:1.43,letterSpacing:"0.01071em",color:"#fff",alignItems:"center",padding:"6px 16px",borderRadius:"4px",boxShadow:"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)"},lessPadding:{paddingLeft:8*2.5+"px"},default:{backgroundColor:"#313131"},success:{backgroundColor:"#43a047"},error:{backgroundColor:"#d32f2f"},warning:{backgroundColor:"#ff9800"},info:{backgroundColor:"#2196f3"},message:{display:"flex",alignItems:"center",padding:"8px 0"},action:{display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:"16px",marginRight:"-8px"}}),se="notistack-snackbar",le=(0,y.forwardRef)(function(l,i){var u=l.id,p=l.message,a=l.action,c=l.iconVariant,h=l.variant,E=l.hideIconVariant,P=l.style,J=l.className,F=c[h],et=a;return typeof et=="function"&&(et=et(u)),y.createElement(Qt,{ref:i,role:"alert","aria-describedby":se,style:P,className:ot(A.MuiContent,A.MuiContentVariant(h),Vt.root,Vt[h],J,!E&&F&&Vt.lessPadding)},y.createElement("div",{id:se,className:Vt.message},E?null:F,p),et&&y.createElement("div",{className:Vt.action},et))});le.displayName="MaterialDesignContent";var be=(0,y.memo)(le),ve=o({wrappedRoot:{width:"100%",position:"relative",transform:"translateX(0)",top:0,right:0,bottom:0,left:0,minWidth:"288px"}}),ke=function(i){var u=(0,y.useRef)(),p=(0,y.useState)(!0),a=p[0],c=p[1],h=Ut([i.snack.onClose,i.onClose]),E=function(){i.snack.requestClose&&h(null,"instructed",i.snack.id)},P=(0,y.useCallback)(function(){u.current=setTimeout(function(){c(function(ie){return!ie})},125)},[]);(0,y.useEffect)(function(){return function(){u.current&&clearTimeout(u.current)}},[]);var J=i.snack,F=i.classes,et=i.Component,lt=et===void 0?be:et,Yt=(0,y.useMemo)(function(){return S(F)},[F]),Q=J.open,gt=J.SnackbarProps,Bt=J.TransitionComponent,Tt=J.TransitionProps,Wt=J.transitionDuration,_t=J.disableWindowBlurListener,oe=J.content,Zt=Ht(J,["open","SnackbarProps","TransitionComponent","TransitionProps","transitionDuration","disableWindowBlurListener","content","entered","requestClose","onEnter","onEntered","onExit","onExited"]),te=_({direction:O(Zt.anchorOrigin),timeout:Wt},Tt),Ct=oe;typeof Ct=="function"&&(Ct=Ct(Zt.id,Zt.message));var re=["onEnter","onEntered","onExit","onExited"].reduce(function(ie,ge){var me;return _({},ie,(me={},me[ge]=Ut([i.snack[ge],i[ge]],Zt.id),me))},{});return y.createElement(X,{in:a,onExited:re.onExited},y.createElement($t,{open:Q,id:Zt.id,disableWindowBlurListener:_t,autoHideDuration:Zt.autoHideDuration,className:ot(ve.wrappedRoot,Yt.root,Yt[U(Zt.anchorOrigin)]),SnackbarProps:gt,onClose:h},y.createElement(Bt,Object.assign({},te,{appear:!0,in:Q,onExit:re.onExit,onExited:P,onEnter:re.onEnter,onEntered:Ut([re.onEntered,E],Zt.id)}),Ct||y.createElement(lt,Object.assign({},Zt)))))},ce,pe,Ae,de,he,ae={view:{default:20,dense:4},snackbar:{default:6,dense:2}},ye="."+A.CollapseWrapper,fe=16,ue=o({root:(ce={boxSizing:"border-box",display:"flex",maxHeight:"100%",position:"fixed",zIndex:1400,height:"auto",width:"auto",transition:rt(["top","right","bottom","left","max-width"],{duration:300,easing:"ease"}),pointerEvents:"none"},ce[ye]={padding:ae.snackbar.default+"px 0px",transition:"padding 300ms ease 0ms"},ce.maxWidth="calc(100% - "+ae.view.default*2+"px)",ce[G.downXs]={width:"100%",maxWidth:"calc(100% - "+fe*2+"px)"},ce),rootDense:(pe={},pe[ye]={padding:ae.snackbar.dense+"px 0px"},pe),top:{top:ae.view.default-ae.snackbar.default+"px",flexDirection:"column"},bottom:{bottom:ae.view.default-ae.snackbar.default+"px",flexDirection:"column-reverse"},left:(Ae={left:ae.view.default+"px"},Ae[G.upSm]={alignItems:"flex-start"},Ae[G.downXs]={left:fe+"px"},Ae),right:(de={right:ae.view.default+"px"},de[G.upSm]={alignItems:"flex-end"},de[G.downXs]={right:fe+"px"},de),center:(he={left:"50%",transform:"translateX(-50%)"},he[G.upSm]={alignItems:"center"},he)}),xe=function(i){var u=i.classes,p=u===void 0?{}:u,a=i.anchorOrigin,c=i.dense,h=i.children,E=ot(A.SnackbarContainer,ue[a.vertical],ue[a.horizontal],ue.root,p.containerRoot,p["containerAnchorOrigin"+ft(a)],c&&ue.rootDense);return y.createElement("div",{className:E},h)},Ce=(0,y.memo)(xe),we=null,je={NO_PERSIST_ALL:"Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented."},Be=function(l){if(we){var i=je[l];typeof console!="undefined"&&console.error("WARNING - notistack: "+i);try{throw new Error(i)}catch(u){}}},Ee=function(i){var u=typeof i=="string"||(0,y.isValidElement)(i);return!u},ze,Re,Pe=function(l){St(i,l);function i(p){var a;return a=l.call(this,p)||this,a.enqueueSnackbar=function(c,h){if(h===void 0&&(h={}),c==null)throw new Error("enqueueSnackbar called with invalid argument");var E=Ee(c)?c:h,P=Ee(c)?c.message:c,J=E.key,F=E.preventDuplicate,et=Ht(E,["key","preventDuplicate"]),lt=Pt(J),Yt=lt?J:new Date().getTime()+Math.random(),Q=t(et,a.props),gt=_({id:Yt},et,{message:P,open:!0,entered:!1,requestClose:!1,persist:Q("persist"),action:Q("action"),content:Q("content"),variant:Q("variant"),anchorOrigin:Q("anchorOrigin"),disableWindowBlurListener:Q("disableWindowBlurListener"),autoHideDuration:Q("autoHideDuration"),hideIconVariant:Q("hideIconVariant"),TransitionComponent:Q("TransitionComponent"),transitionDuration:Q("transitionDuration"),TransitionProps:Q("TransitionProps",!0),iconVariant:Q("iconVariant",!0),style:Q("style",!0),SnackbarProps:Q("SnackbarProps",!0),className:ot(a.props.className,et.className)});return gt.persist&&(gt.autoHideDuration=void 0),a.setState(function(Bt){if(F===void 0&&a.props.preventDuplicate||F){var Tt=function(Zt){return lt?Zt.id===Yt:Zt.message===P},Wt=Bt.queue.findIndex(Tt)>-1,_t=Bt.snacks.findIndex(Tt)>-1;if(Wt||_t)return Bt}return a.handleDisplaySnack(_({},Bt,{queue:[].concat(Bt.queue,[gt])}))}),Yt},a.handleDisplaySnack=function(c){var h=c.snacks;return h.length>=a.maxSnack?a.handleDismissOldest(c):a.processQueue(c)},a.processQueue=function(c){var h=c.queue,E=c.snacks;return h.length>0?_({},c,{snacks:[].concat(E,[h[0]]),queue:h.slice(1,h.length)}):c},a.handleDismissOldest=function(c){if(c.snacks.some(function(F){return!F.open||F.requestClose}))return c;var h=!1,E=!1,P=c.snacks.reduce(function(F,et){return F+(et.open&&et.persist?1:0)},0);P===a.maxSnack&&(E=!0);var J=c.snacks.map(function(F){return!h&&(!F.persist||E)?(h=!0,F.entered?(F.onClose&&F.onClose(null,"maxsnack",F.id),a.props.onClose&&a.props.onClose(null,"maxsnack",F.id),_({},F,{open:!1})):_({},F,{requestClose:!0})):_({},F)});return _({},c,{snacks:J})},a.handleEnteredSnack=function(c,h,E){if(!Pt(E))throw new Error("handleEnteredSnack Cannot be called with undefined key");a.setState(function(P){var J=P.snacks;return{snacks:J.map(function(F){return F.id===E?_({},F,{entered:!0}):_({},F)})}})},a.handleCloseSnack=function(c,h,E){a.props.onClose&&a.props.onClose(c,h,E);var P=E===void 0;a.setState(function(J){var F=J.snacks,et=J.queue;return{snacks:F.map(function(lt){return!P&&lt.id!==E?_({},lt):lt.entered?_({},lt,{open:!1}):_({},lt,{requestClose:!0})}),queue:et.filter(function(lt){return lt.id!==E})}})},a.closeSnackbar=function(c){var h=a.state.snacks.find(function(E){return E.id===c});Pt(c)&&h&&h.onClose&&h.onClose(null,"instructed",c),a.handleCloseSnack(null,"instructed",c)},a.handleExitedSnack=function(c,h){if(!Pt(h))throw new Error("handleExitedSnack Cannot be called with undefined key");a.setState(function(E){var P=a.processQueue(_({},E,{snacks:E.snacks.filter(function(J){return J.id!==h})}));return P.queue.length===0?P:a.handleDismissOldest(P)})},ze=a.enqueueSnackbar,Re=a.closeSnackbar,a.state={snacks:[],queue:[],contextValue:{enqueueSnackbar:a.enqueueSnackbar.bind(tt(a)),closeSnackbar:a.closeSnackbar.bind(tt(a))}},a}var u=i.prototype;return u.render=function(){var a=this,c=this.state.contextValue,h=this.props,E=h.domRoot,P=h.children,J=h.dense,F=J===void 0?!1:J,et=h.Components,lt=et===void 0?{}:et,Yt=h.classes,Q=this.state.snacks.reduce(function(Bt,Tt){var Wt,_t=ft(Tt.anchorOrigin),oe=Bt[_t]||[];return _({},Bt,(Wt={},Wt[_t]=[].concat(oe,[Tt]),Wt))},{}),gt=Object.keys(Q).map(function(Bt){var Tt=Q[Bt],Wt=Tt[0];return y.createElement(Ce,{key:Bt,dense:F,anchorOrigin:Wt.anchorOrigin,classes:Yt},Tt.map(function(_t){return y.createElement(ke,{key:_t.id,snack:_t,classes:Yt,Component:lt[_t.variant],onClose:a.handleCloseSnack,onEnter:a.props.onEnter,onExit:a.props.onExit,onExited:Ut([a.handleExitedSnack,a.props.onExited],_t.id),onEntered:Ut([a.handleEnteredSnack,a.props.onEntered],_t.id)})}))});return y.createElement(g.Provider,{value:c},P,E?(0,v.createPortal)(gt,E):gt)},Et(i,[{key:"maxSnack",get:function(){return this.props.maxSnack||d.maxSnack}}]),i}(y.Component),Ie=function(){return(0,y.useContext)(g)}},7711:(Ot,L,r)=>{var y=r(5072),v=r.n(y),I=r(7825),nt=r.n(I),ot=r(7659),dt=r.n(ot),W=r(5056),H=r.n(W),q=r(540),ut=r.n(q),Dt=r(1113),K=r.n(Dt),ct=r(2274),pt={};pt.styleTagTransform=K(),pt.setAttributes=H(),pt.insert=dt().bind(null,"head"),pt.domAPI=nt(),pt.insertStyleElement=ut();var wt=v()(ct.A,pt),vt=ct.A&&ct.A.locals?ct.A.locals:void 0},1460:(Ot,L,r)=>{r.d(L,{xI:()=>k});var y=Object.defineProperty,v=Object.defineProperties,I=Object.getOwnPropertyDescriptors,nt=Object.getOwnPropertySymbols,ot=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable,W=(d,e,n)=>e in d?y(d,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):d[e]=n,H=(d,e)=>{for(var n in e||(e={}))ot.call(e,n)&&W(d,n,e[n]);if(nt)for(var n of nt(e))dt.call(e,n)&&W(d,n,e[n]);return d},q=(d,e)=>v(d,I(e)),ut=(d,e,n)=>(W(d,typeof e!="symbol"?e+"":e,n),n);function Dt(){return{async:!1,baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,hooks:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}let K=Dt();function ct(d){K=d}const pt=/[&<>"']/,wt=new RegExp(pt.source,"g"),vt=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,At=new RegExp(vt.source,"g"),jt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Y=d=>jt[d];function B(d,e){if(e){if(pt.test(d))return d.replace(wt,Y)}else if(vt.test(d))return d.replace(At,Y);return d}const N=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;function j(d){return d.replace(N,(e,n)=>(n=n.toLowerCase(),n==="colon"?":":n.charAt(0)==="#"?n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):""))}const $=/(^|[^\[])\^/g;function R(d,e){d=typeof d=="string"?d:d.source,e=e||"";const n={replace:(t,o)=>(o=o.source||o,o=o.replace($,"$1"),d=d.replace(t,o),n),getRegex:()=>new RegExp(d,e)};return n}const it=/[^\w:]/g,Et=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function _(d,e,n){if(d){let t;try{t=decodeURIComponent(j(n)).replace(it,"").toLowerCase()}catch(o){return null}if(t.indexOf("javascript:")===0||t.indexOf("vbscript:")===0||t.indexOf("data:")===0)return null}e&&!Et.test(n)&&(n=g(e,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(t){return null}return n}const St={},Ht=/^[^:]+:\/*[^/]*$/,tt=/^([^:]+:)[\s\S]*$/,s=/^([^:]+:\/*[^/]*)[\s\S]*$/;function g(d,e){St[" "+d]||(Ht.test(d)?St[" "+d]=d+"/":St[" "+d]=ft(d,"/",!0)),d=St[" "+d];const n=d.indexOf(":")===-1;return e.substring(0,2)==="//"?n?e:d.replace(tt,"$1")+e:e.charAt(0)==="/"?n?e:d.replace(s,"$1")+e:d+e}const G={exec:function(){}};function mt(d,e){const n=d.replace(/\|/g,(A,f,m)=>{let C=!1,X=f;for(;--X>=0&&m[X]==="\\";)C=!C;return C?"|":" |"}),t=n.split(/ \|/);let o=0;if(t[0].trim()||t.shift(),t.length>0&&!t[t.length-1].trim()&&t.pop(),t.length>e)t.splice(e);else for(;t.length<e;)t.push("");for(;o<t.length;o++)t[o]=t[o].trim().replace(/\\\|/g,"|");return t}function ft(d,e,n){const t=d.length;if(t===0)return"";let o=0;for(;o<t;){const A=d.charAt(t-o-1);if(A===e&&!n)o++;else if(A!==e&&n)o++;else break}return d.slice(0,t-o)}function Pt(d,e){if(d.indexOf(e[1])===-1)return-1;const n=d.length;let t=0,o=0;for(;o<n;o++)if(d[o]==="\\")o++;else if(d[o]===e[0])t++;else if(d[o]===e[1]&&(t--,t<0))return o;return-1}function Lt(d){d&&d.sanitize&&!d.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")}function w(d,e){if(e<1)return"";let n="";for(;e>1;)e&1&&(n+=d),e>>=1,d+=d;return n+d}function T(d,e,n,t){const o=e.href,A=e.title?B(e.title):null,f=d[1].replace(/\\([\[\]])/g,"$1");if(d[0].charAt(0)!=="!"){t.state.inLink=!0;const m={type:"link",raw:n,href:o,title:A,text:f,tokens:t.inlineTokens(f)};return t.state.inLink=!1,m}return{type:"image",raw:n,href:o,title:A,text:B(f)}}function at(d,e){const n=d.match(/^(\s+)(?:```)/);if(n===null)return e;const t=n[1];return e.split(`
`).map(o=>{const A=o.match(/^\s+/);if(A===null)return o;const[f]=A;return f.length>=t.length?o.slice(t.length):o}).join(`
`)}class yt{constructor(e){this.options=e||K}space(e){const n=this.rules.block.newline.exec(e);if(n&&n[0].length>0)return{type:"space",raw:n[0]}}code(e){const n=this.rules.block.code.exec(e);if(n){const t=n[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:n[0],codeBlockStyle:"indented",text:this.options.pedantic?t:ft(t,`
`)}}}fences(e){const n=this.rules.block.fences.exec(e);if(n){const t=n[0],o=at(t,n[3]||"");return{type:"code",raw:t,lang:n[2]?n[2].trim().replace(this.rules.inline._escapes,"$1"):n[2],text:o}}}heading(e){const n=this.rules.block.heading.exec(e);if(n){let t=n[2].trim();if(/#$/.test(t)){const o=ft(t,"#");(this.options.pedantic||!o||/ $/.test(o))&&(t=o.trim())}return{type:"heading",raw:n[0],depth:n[1].length,text:t,tokens:this.lexer.inline(t)}}}hr(e){const n=this.rules.block.hr.exec(e);if(n)return{type:"hr",raw:n[0]}}blockquote(e){const n=this.rules.block.blockquote.exec(e);if(n){const t=n[0].replace(/^ *>[ \t]?/gm,""),o=this.lexer.state.top;this.lexer.state.top=!0;const A=this.lexer.blockTokens(t);return this.lexer.state.top=o,{type:"blockquote",raw:n[0],tokens:A,text:t}}}list(e){let n=this.rules.block.list.exec(e);if(n){let t,o,A,f,m,C,X,M,O,U,S,Xt,Ut=n[1].trim();const ee=Ut.length>1,xt={type:"list",raw:"",ordered:ee,start:ee?+Ut.slice(0,-1):"",loose:!1,items:[]};Ut=ee?`\\d{1,9}\\${Ut.slice(-1)}`:`\\${Ut}`,this.options.pedantic&&(Ut=ee?Ut:"[*+-]");const $t=new RegExp(`^( {0,3}${Ut})((?:[	 ][^\\n]*)?(?:\\n|$))`);for(;e&&(Xt=!1,!(!(n=$t.exec(e))||this.rules.block.hr.test(e)));){if(t=n[0],e=e.substring(t.length),M=n[2].split(`
`,1)[0].replace(/^\t+/,qt=>" ".repeat(3*qt.length)),O=e.split(`
`,1)[0],this.options.pedantic?(f=2,S=M.trimLeft()):(f=n[2].search(/[^ ]/),f=f>4?1:f,S=M.slice(f),f+=n[1].length),C=!1,!M&&/^ *$/.test(O)&&(t+=O+`
`,e=e.substring(O.length+1),Xt=!0),!Xt){const qt=new RegExp(`^ {0,${Math.min(3,f-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),Qt=new RegExp(`^ {0,${Math.min(3,f-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),Vt=new RegExp(`^ {0,${Math.min(3,f-1)}}(?:\`\`\`|~~~)`),se=new RegExp(`^ {0,${Math.min(3,f-1)}}#`);for(;e&&(U=e.split(`
`,1)[0],O=U,this.options.pedantic&&(O=O.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!(Vt.test(O)||se.test(O)||qt.test(O)||Qt.test(e)));){if(O.search(/[^ ]/)>=f||!O.trim())S+=`
`+O.slice(f);else{if(C||M.search(/[^ ]/)>=4||Vt.test(M)||se.test(M)||Qt.test(M))break;S+=`
`+O}!C&&!O.trim()&&(C=!0),t+=U+`
`,e=e.substring(U.length+1),M=O.slice(f)}}xt.loose||(X?xt.loose=!0:/\n *\n *$/.test(t)&&(X=!0)),this.options.gfm&&(o=/^\[[ xX]\] /.exec(S),o&&(A=o[0]!=="[ ] ",S=S.replace(/^\[[ xX]\] +/,""))),xt.items.push({type:"list_item",raw:t,task:!!o,checked:A,loose:!1,text:S}),xt.raw+=t}xt.items[xt.items.length-1].raw=t.trimRight(),xt.items[xt.items.length-1].text=S.trimRight(),xt.raw=xt.raw.trimRight();const ne=xt.items.length;for(m=0;m<ne;m++)if(this.lexer.state.top=!1,xt.items[m].tokens=this.lexer.blockTokens(xt.items[m].text,[]),!xt.loose){const qt=xt.items[m].tokens.filter(Vt=>Vt.type==="space"),Qt=qt.length>0&&qt.some(Vt=>/\n.*\n/.test(Vt.raw));xt.loose=Qt}if(xt.loose)for(m=0;m<ne;m++)xt.items[m].loose=!0;return xt}}html(e){const n=this.rules.block.html.exec(e);if(n){const t={type:"html",raw:n[0],pre:!this.options.sanitizer&&(n[1]==="pre"||n[1]==="script"||n[1]==="style"),text:n[0]};if(this.options.sanitize){const o=this.options.sanitizer?this.options.sanitizer(n[0]):B(n[0]);t.type="paragraph",t.text=o,t.tokens=this.lexer.inline(o)}return t}}def(e){const n=this.rules.block.def.exec(e);if(n){const t=n[1].toLowerCase().replace(/\s+/g," "),o=n[2]?n[2].replace(/^<(.*)>$/,"$1").replace(this.rules.inline._escapes,"$1"):"",A=n[3]?n[3].substring(1,n[3].length-1).replace(this.rules.inline._escapes,"$1"):n[3];return{type:"def",tag:t,raw:n[0],href:o,title:A}}}table(e){const n=this.rules.block.table.exec(e);if(n){const t={type:"table",header:mt(n[1]).map(o=>({text:o})),align:n[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:n[3]&&n[3].trim()?n[3].replace(/\n[ \t]*$/,"").split(`
`):[]};if(t.header.length===t.align.length){t.raw=n[0];let o=t.align.length,A,f,m,C;for(A=0;A<o;A++)/^ *-+: *$/.test(t.align[A])?t.align[A]="right":/^ *:-+: *$/.test(t.align[A])?t.align[A]="center":/^ *:-+ *$/.test(t.align[A])?t.align[A]="left":t.align[A]=null;for(o=t.rows.length,A=0;A<o;A++)t.rows[A]=mt(t.rows[A],t.header.length).map(X=>({text:X}));for(o=t.header.length,f=0;f<o;f++)t.header[f].tokens=this.lexer.inline(t.header[f].text);for(o=t.rows.length,f=0;f<o;f++)for(C=t.rows[f],m=0;m<C.length;m++)C[m].tokens=this.lexer.inline(C[m].text);return t}}}lheading(e){const n=this.rules.block.lheading.exec(e);if(n)return{type:"heading",raw:n[0],depth:n[2].charAt(0)==="="?1:2,text:n[1],tokens:this.lexer.inline(n[1])}}paragraph(e){const n=this.rules.block.paragraph.exec(e);if(n){const t=n[1].charAt(n[1].length-1)===`
`?n[1].slice(0,-1):n[1];return{type:"paragraph",raw:n[0],text:t,tokens:this.lexer.inline(t)}}}text(e){const n=this.rules.block.text.exec(e);if(n)return{type:"text",raw:n[0],text:n[0],tokens:this.lexer.inline(n[0])}}escape(e){const n=this.rules.inline.escape.exec(e);if(n)return{type:"escape",raw:n[0],text:B(n[1])}}tag(e){const n=this.rules.inline.tag.exec(e);if(n)return!this.lexer.state.inLink&&/^<a /i.test(n[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(n[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(n[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(n[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:n[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(n[0]):B(n[0]):n[0]}}link(e){const n=this.rules.inline.link.exec(e);if(n){const t=n[2].trim();if(!this.options.pedantic&&/^</.test(t)){if(!/>$/.test(t))return;const f=ft(t.slice(0,-1),"\\");if((t.length-f.length)%2===0)return}else{const f=Pt(n[2],"()");if(f>-1){const C=(n[0].indexOf("!")===0?5:4)+n[1].length+f;n[2]=n[2].substring(0,f),n[0]=n[0].substring(0,C).trim(),n[3]=""}}let o=n[2],A="";if(this.options.pedantic){const f=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o);f&&(o=f[1],A=f[3])}else A=n[3]?n[3].slice(1,-1):"";return o=o.trim(),/^</.test(o)&&(this.options.pedantic&&!/>$/.test(t)?o=o.slice(1):o=o.slice(1,-1)),T(n,{href:o&&o.replace(this.rules.inline._escapes,"$1"),title:A&&A.replace(this.rules.inline._escapes,"$1")},n[0],this.lexer)}}reflink(e,n){let t;if((t=this.rules.inline.reflink.exec(e))||(t=this.rules.inline.nolink.exec(e))){let o=(t[2]||t[1]).replace(/\s+/g," ");if(o=n[o.toLowerCase()],!o){const A=t[0].charAt(0);return{type:"text",raw:A,text:A}}return T(t,o,t[0],this.lexer)}}emStrong(e,n,t=""){let o=this.rules.inline.emStrong.lDelim.exec(e);if(!o||o[3]&&t.match(/[\p{L}\p{N}]/u))return;const A=o[1]||o[2]||"";if(!A||A&&(t===""||this.rules.inline.punctuation.exec(t))){const f=o[0].length-1;let m,C,X=f,M=0;const O=o[0][0]==="*"?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(O.lastIndex=0,n=n.slice(-1*e.length+f);(o=O.exec(n))!=null;){if(m=o[1]||o[2]||o[3]||o[4]||o[5]||o[6],!m)continue;if(C=m.length,o[3]||o[4]){X+=C;continue}else if((o[5]||o[6])&&f%3&&!((f+C)%3)){M+=C;continue}if(X-=C,X>0)continue;C=Math.min(C,C+X+M);const U=e.slice(0,f+o.index+(o[0].length-m.length)+C);if(Math.min(f,C)%2){const Xt=U.slice(1,-1);return{type:"em",raw:U,text:Xt,tokens:this.lexer.inlineTokens(Xt)}}const S=U.slice(2,-2);return{type:"strong",raw:U,text:S,tokens:this.lexer.inlineTokens(S)}}}}codespan(e){const n=this.rules.inline.code.exec(e);if(n){let t=n[2].replace(/\n/g," ");const o=/[^ ]/.test(t),A=/^ /.test(t)&&/ $/.test(t);return o&&A&&(t=t.substring(1,t.length-1)),t=B(t,!0),{type:"codespan",raw:n[0],text:t}}}br(e){const n=this.rules.inline.br.exec(e);if(n)return{type:"br",raw:n[0]}}del(e){const n=this.rules.inline.del.exec(e);if(n)return{type:"del",raw:n[0],text:n[2],tokens:this.lexer.inlineTokens(n[2])}}autolink(e,n){const t=this.rules.inline.autolink.exec(e);if(t){let o,A;return t[2]==="@"?(o=B(this.options.mangle?n(t[1]):t[1]),A="mailto:"+o):(o=B(t[1]),A=o),{type:"link",raw:t[0],text:o,href:A,tokens:[{type:"text",raw:o,text:o}]}}}url(e,n){let t;if(t=this.rules.inline.url.exec(e)){let o,A;if(t[2]==="@")o=B(this.options.mangle?n(t[0]):t[0]),A="mailto:"+o;else{let f;do f=t[0],t[0]=this.rules.inline._backpedal.exec(t[0])[0];while(f!==t[0]);o=B(t[0]),t[1]==="www."?A="http://"+t[0]:A=t[0]}return{type:"link",raw:t[0],text:o,href:A,tokens:[{type:"text",raw:o,text:o}]}}}inlineText(e,n){const t=this.rules.inline.text.exec(e);if(t){let o;return this.lexer.state.inRawBlock?o=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):B(t[0]):t[0]:o=B(this.options.smartypants?n(t[0]):t[0]),{type:"text",raw:t[0],text:o}}}}const x={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:G,lheading:/^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/};x._label=/(?!\s*\])(?:\\.|[^\[\]\\])+/,x._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,x.def=R(x.def).replace("label",x._label).replace("title",x._title).getRegex(),x.bullet=/(?:[*+-]|\d{1,9}[.)])/,x.listItemStart=R(/^( *)(bull) */).replace("bull",x.bullet).getRegex(),x.list=R(x.list).replace(/bull/g,x.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+x.def.source+")").getRegex(),x._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",x._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,x.html=R(x.html,"i").replace("comment",x._comment).replace("tag",x._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),x.paragraph=R(x._paragraph).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.blockquote=R(x.blockquote).replace("paragraph",x.paragraph).getRegex(),x.normal=H({},x),x.gfm=q(H({},x.normal),{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),x.gfm.table=R(x.gfm.table).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.gfm.paragraph=R(x._paragraph).replace("hr",x.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",x.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",x._tag).getRegex(),x.pedantic=q(H({},x.normal),{html:R(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",x._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:G,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:R(x.normal._paragraph).replace("hr",x.hr).replace("heading",` *#{1,6} *[^
]`).replace("lheading",x.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});const b={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:G,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,rDelimUnd:/^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:G,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/};b._punctuation="!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",b.punctuation=R(b.punctuation).replace(/punctuation/g,b._punctuation).getRegex(),b.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,b.escapedEmSt=/(?:^|[^\\])(?:\\\\)*\\[*_]/g,b._comment=R(x._comment).replace("(?:-->|$)","-->").getRegex(),b.emStrong.lDelim=R(b.emStrong.lDelim).replace(/punct/g,b._punctuation).getRegex(),b.emStrong.rDelimAst=R(b.emStrong.rDelimAst,"g").replace(/punct/g,b._punctuation).getRegex(),b.emStrong.rDelimUnd=R(b.emStrong.rDelimUnd,"g").replace(/punct/g,b._punctuation).getRegex(),b._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,b._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,b._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,b.autolink=R(b.autolink).replace("scheme",b._scheme).replace("email",b._email).getRegex(),b._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,b.tag=R(b.tag).replace("comment",b._comment).replace("attribute",b._attribute).getRegex(),b._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,b._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,b._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,b.link=R(b.link).replace("label",b._label).replace("href",b._href).replace("title",b._title).getRegex(),b.reflink=R(b.reflink).replace("label",b._label).replace("ref",x._label).getRegex(),b.nolink=R(b.nolink).replace("ref",x._label).getRegex(),b.reflinkSearch=R(b.reflinkSearch,"g").replace("reflink",b.reflink).replace("nolink",b.nolink).getRegex(),b.normal=H({},b),b.pedantic=q(H({},b.normal),{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:R(/^!?\[(label)\]\((.*?)\)/).replace("label",b._label).getRegex(),reflink:R(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",b._label).getRegex()}),b.gfm=q(H({},b.normal),{escape:R(b.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),b.gfm.url=R(b.gfm.url,"i").replace("email",b.gfm._extended_email).getRegex(),b.breaks=q(H({},b.gfm),{br:R(b.br).replace("{2,}","*").getRegex(),text:R(b.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});function Jt(d){return d.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1\u201C").replace(/"/g,"\u201D").replace(/\.{3}/g,"\u2026")}function D(d){let e="",n,t;const o=d.length;for(n=0;n<o;n++)t=d.charCodeAt(n),Math.random()>.5&&(t="x"+t.toString(16)),e+="&#"+t+";";return e}class z{constructor(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||K,this.options.tokenizer=this.options.tokenizer||new yt,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const n={block:x.normal,inline:b.normal};this.options.pedantic?(n.block=x.pedantic,n.inline=b.pedantic):this.options.gfm&&(n.block=x.gfm,this.options.breaks?n.inline=b.breaks:n.inline=b.gfm),this.tokenizer.rules=n}static get rules(){return{block:x,inline:b}}static lex(e,n){return new z(n).lex(e)}static lexInline(e,n){return new z(n).inlineTokens(e)}lex(e){e=e.replace(/\r\n|\r/g,`
`),this.blockTokens(e,this.tokens);let n;for(;n=this.inlineQueue.shift();)this.inlineTokens(n.src,n.tokens);return this.tokens}blockTokens(e,n=[]){this.options.pedantic?e=e.replace(/\t/g,"    ").replace(/^ +$/gm,""):e=e.replace(/^( *)(\t+)/gm,(m,C,X)=>C+"    ".repeat(X.length));let t,o,A,f;for(;e;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(m=>(t=m.call({lexer:this},e,n))?(e=e.substring(t.raw.length),n.push(t),!0):!1))){if(t=this.tokenizer.space(e)){e=e.substring(t.raw.length),t.raw.length===1&&n.length>0?n[n.length-1].raw+=`
`:n.push(t);continue}if(t=this.tokenizer.code(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t);continue}if(t=this.tokenizer.fences(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.heading(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.hr(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.blockquote(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.list(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.html(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.def(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&(o.type==="paragraph"||o.type==="text")?(o.raw+=`
`+t.raw,o.text+=`
`+t.raw,this.inlineQueue[this.inlineQueue.length-1].src=o.text):this.tokens.links[t.tag]||(this.tokens.links[t.tag]={href:t.href,title:t.title});continue}if(t=this.tokenizer.table(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.lheading(e)){e=e.substring(t.raw.length),n.push(t);continue}if(A=e,this.options.extensions&&this.options.extensions.startBlock){let m=1/0;const C=e.slice(1);let X;this.options.extensions.startBlock.forEach(function(M){X=M.call({lexer:this},C),typeof X=="number"&&X>=0&&(m=Math.min(m,X))}),m<1/0&&m>=0&&(A=e.substring(0,m+1))}if(this.state.top&&(t=this.tokenizer.paragraph(A))){o=n[n.length-1],f&&o.type==="paragraph"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t),f=A.length!==e.length,e=e.substring(t.raw.length);continue}if(t=this.tokenizer.text(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&o.type==="text"?(o.raw+=`
`+t.raw,o.text+=`
`+t.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=o.text):n.push(t);continue}if(e){const m="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(m);break}else throw new Error(m)}}return this.state.top=!0,n}inline(e,n=[]){return this.inlineQueue.push({src:e,tokens:n}),n}inlineTokens(e,n=[]){let t,o,A,f=e,m,C,X;if(this.tokens.links){const M=Object.keys(this.tokens.links);if(M.length>0)for(;(m=this.tokenizer.rules.inline.reflinkSearch.exec(f))!=null;)M.includes(m[0].slice(m[0].lastIndexOf("[")+1,-1))&&(f=f.slice(0,m.index)+"["+w("a",m[0].length-2)+"]"+f.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(m=this.tokenizer.rules.inline.blockSkip.exec(f))!=null;)f=f.slice(0,m.index)+"["+w("a",m[0].length-2)+"]"+f.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(m=this.tokenizer.rules.inline.escapedEmSt.exec(f))!=null;)f=f.slice(0,m.index+m[0].length-2)+"++"+f.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex),this.tokenizer.rules.inline.escapedEmSt.lastIndex--;for(;e;)if(C||(X=""),C=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(M=>(t=M.call({lexer:this},e,n))?(e=e.substring(t.raw.length),n.push(t),!0):!1))){if(t=this.tokenizer.escape(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.tag(e)){e=e.substring(t.raw.length),o=n[n.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(t=this.tokenizer.link(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.reflink(e,this.tokens.links)){e=e.substring(t.raw.length),o=n[n.length-1],o&&t.type==="text"&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(t=this.tokenizer.emStrong(e,f,X)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.codespan(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.br(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.del(e)){e=e.substring(t.raw.length),n.push(t);continue}if(t=this.tokenizer.autolink(e,D)){e=e.substring(t.raw.length),n.push(t);continue}if(!this.state.inLink&&(t=this.tokenizer.url(e,D))){e=e.substring(t.raw.length),n.push(t);continue}if(A=e,this.options.extensions&&this.options.extensions.startInline){let M=1/0;const O=e.slice(1);let U;this.options.extensions.startInline.forEach(function(S){U=S.call({lexer:this},O),typeof U=="number"&&U>=0&&(M=Math.min(M,U))}),M<1/0&&M>=0&&(A=e.substring(0,M+1))}if(t=this.tokenizer.inlineText(A,Jt)){e=e.substring(t.raw.length),t.raw.slice(-1)!=="_"&&(X=t.raw.slice(-1)),C=!0,o=n[n.length-1],o&&o.type==="text"?(o.raw+=t.raw,o.text+=t.text):n.push(t);continue}if(e){const M="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(M);break}else throw new Error(M)}}return n}}class Z{constructor(e){this.options=e||K}code(e,n,t){const o=(n||"").match(/\S*/)[0];if(this.options.highlight){const A=this.options.highlight(e,o);A!=null&&A!==e&&(t=!0,e=A)}return e=e.replace(/\n$/,"")+`
`,o?'<pre><code class="'+this.options.langPrefix+B(o)+'">'+(t?e:B(e,!0))+`</code></pre>
`:"<pre><code>"+(t?e:B(e,!0))+`</code></pre>
`}blockquote(e){return`<blockquote>
${e}</blockquote>
`}html(e){return e}heading(e,n,t,o){if(this.options.headerIds){const A=this.options.headerPrefix+o.slug(t);return`<h${n} id="${A}">${e}</h${n}>
`}return`<h${n}>${e}</h${n}>
`}hr(){return this.options.xhtml?`<hr/>
`:`<hr>
`}list(e,n,t){const o=n?"ol":"ul",A=n&&t!==1?' start="'+t+'"':"";return"<"+o+A+`>
`+e+"</"+o+`>
`}listitem(e){return`<li>${e}</li>
`}checkbox(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "}paragraph(e){return`<p>${e}</p>
`}table(e,n){return n&&(n=`<tbody>${n}</tbody>`),`<table>
<thead>
`+e+`</thead>
`+n+`</table>
`}tablerow(e){return`<tr>
${e}</tr>
`}tablecell(e,n){const t=n.header?"th":"td";return(n.align?`<${t} align="${n.align}">`:`<${t}>`)+e+`</${t}>
`}strong(e){return`<strong>${e}</strong>`}em(e){return`<em>${e}</em>`}codespan(e){return`<code>${e}</code>`}br(){return this.options.xhtml?"<br/>":"<br>"}del(e){return`<del>${e}</del>`}link(e,n,t){if(e=_(this.options.sanitize,this.options.baseUrl,e),e===null)return t;let o='<a href="'+e+'"';return n&&(o+=' title="'+n+'"'),o+=">"+t+"</a>",o}image(e,n,t){if(e=_(this.options.sanitize,this.options.baseUrl,e),e===null)return t;let o=`<img src="${e}" alt="${t}"`;return n&&(o+=` title="${n}"`),o+=this.options.xhtml?"/>":">",o}text(e){return e}}class V{strong(e){return e}em(e){return e}codespan(e){return e}del(e){return e}html(e){return e}text(e){return e}link(e,n,t){return""+t}image(e,n,t){return""+t}br(){return""}}class ht{constructor(){this.seen={}}serialize(e){return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")}getNextSafeSlug(e,n){let t=e,o=0;if(this.seen.hasOwnProperty(t)){o=this.seen[e];do o++,t=e+"-"+o;while(this.seen.hasOwnProperty(t))}return n||(this.seen[e]=o,this.seen[t]=0),t}slug(e,n={}){const t=this.serialize(e);return this.getNextSafeSlug(t,n.dryrun)}}class rt{constructor(e){this.options=e||K,this.options.renderer=this.options.renderer||new Z,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new V,this.slugger=new ht}static parse(e,n){return new rt(n).parse(e)}static parseInline(e,n){return new rt(n).parseInline(e)}parse(e,n=!0){let t="",o,A,f,m,C,X,M,O,U,S,Xt,Ut,ee,xt,$t,ne,qt,Qt,Vt;const se=e.length;for(o=0;o<se;o++){if(S=e[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[S.type]&&(Vt=this.options.extensions.renderers[S.type].call({parser:this},S),Vt!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(S.type))){t+=Vt||"";continue}switch(S.type){case"space":continue;case"hr":{t+=this.renderer.hr();continue}case"heading":{t+=this.renderer.heading(this.parseInline(S.tokens),S.depth,j(this.parseInline(S.tokens,this.textRenderer)),this.slugger);continue}case"code":{t+=this.renderer.code(S.text,S.lang,S.escaped);continue}case"table":{for(O="",M="",m=S.header.length,A=0;A<m;A++)M+=this.renderer.tablecell(this.parseInline(S.header[A].tokens),{header:!0,align:S.align[A]});for(O+=this.renderer.tablerow(M),U="",m=S.rows.length,A=0;A<m;A++){for(X=S.rows[A],M="",C=X.length,f=0;f<C;f++)M+=this.renderer.tablecell(this.parseInline(X[f].tokens),{header:!1,align:S.align[f]});U+=this.renderer.tablerow(M)}t+=this.renderer.table(O,U);continue}case"blockquote":{U=this.parse(S.tokens),t+=this.renderer.blockquote(U);continue}case"list":{for(Xt=S.ordered,Ut=S.start,ee=S.loose,m=S.items.length,U="",A=0;A<m;A++)$t=S.items[A],ne=$t.checked,qt=$t.task,xt="",$t.task&&(Qt=this.renderer.checkbox(ne),ee?$t.tokens.length>0&&$t.tokens[0].type==="paragraph"?($t.tokens[0].text=Qt+" "+$t.tokens[0].text,$t.tokens[0].tokens&&$t.tokens[0].tokens.length>0&&$t.tokens[0].tokens[0].type==="text"&&($t.tokens[0].tokens[0].text=Qt+" "+$t.tokens[0].tokens[0].text)):$t.tokens.unshift({type:"text",text:Qt}):xt+=Qt),xt+=this.parse($t.tokens,ee),U+=this.renderer.listitem(xt,qt,ne);t+=this.renderer.list(U,Xt,Ut);continue}case"html":{t+=this.renderer.html(S.text);continue}case"paragraph":{t+=this.renderer.paragraph(this.parseInline(S.tokens));continue}case"text":{for(U=S.tokens?this.parseInline(S.tokens):S.text;o+1<se&&e[o+1].type==="text";)S=e[++o],U+=`
`+(S.tokens?this.parseInline(S.tokens):S.text);t+=n?this.renderer.paragraph(U):U;continue}default:{const le='Token with "'+S.type+'" type was not found.';if(this.options.silent){console.error(le);return}else throw new Error(le)}}}return t}parseInline(e,n){n=n||this.renderer;let t="",o,A,f;const m=e.length;for(o=0;o<m;o++){if(A=e[o],this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[A.type]&&(f=this.options.extensions.renderers[A.type].call({parser:this},A),f!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(A.type))){t+=f||"";continue}switch(A.type){case"escape":{t+=n.text(A.text);break}case"html":{t+=n.html(A.text);break}case"link":{t+=n.link(A.href,A.title,this.parseInline(A.tokens,n));break}case"image":{t+=n.image(A.href,A.title,A.text);break}case"strong":{t+=n.strong(this.parseInline(A.tokens,n));break}case"em":{t+=n.em(this.parseInline(A.tokens,n));break}case"codespan":{t+=n.codespan(A.text);break}case"br":{t+=n.br();break}case"del":{t+=n.del(this.parseInline(A.tokens,n));break}case"text":{t+=n.text(A.text);break}default:{const C='Token with "'+A.type+'" type was not found.';if(this.options.silent){console.error(C);return}else throw new Error(C)}}}return t}}class zt{constructor(e){this.options=e||K}preprocess(e){return e}postprocess(e){return e}}ut(zt,"passThroughHooks",new Set(["preprocess","postprocess"]));function Rt(d,e,n){return t=>{if(t.message+=`
Please report this to https://github.com/markedjs/marked.`,d){const o="<p>An error occurred:</p><pre>"+B(t.message+"",!0)+"</pre>";if(e)return Promise.resolve(o);if(n){n(null,o);return}return o}if(e)return Promise.reject(t);if(n){n(t);return}throw t}}function kt(d,e){return(n,t,o)=>{typeof t=="function"&&(o=t,t=null);const A=H({},t);t=H(H({},k.defaults),A);const f=Rt(t.silent,t.async,o);if(typeof n=="undefined"||n===null)return f(new Error("marked(): input parameter is undefined or null"));if(typeof n!="string")return f(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected"));if(Lt(t),t.hooks&&(t.hooks.options=t),o){const m=t.highlight;let C;try{t.hooks&&(n=t.hooks.preprocess(n)),C=d(n,t)}catch(O){return f(O)}const X=function(O){let U;if(!O)try{t.walkTokens&&k.walkTokens(C,t.walkTokens),U=e(C,t),t.hooks&&(U=t.hooks.postprocess(U))}catch(S){O=S}return t.highlight=m,O?f(O):o(null,U)};if(!m||m.length<3||(delete t.highlight,!C.length))return X();let M=0;k.walkTokens(C,function(O){O.type==="code"&&(M++,setTimeout(()=>{m(O.text,O.lang,function(U,S){if(U)return X(U);S!=null&&S!==O.text&&(O.text=S,O.escaped=!0),M--,M===0&&X()})},0))}),M===0&&X();return}if(t.async)return Promise.resolve(t.hooks?t.hooks.preprocess(n):n).then(m=>d(m,t)).then(m=>t.walkTokens?Promise.all(k.walkTokens(m,t.walkTokens)).then(()=>m):m).then(m=>e(m,t)).then(m=>t.hooks?t.hooks.postprocess(m):m).catch(f);try{t.hooks&&(n=t.hooks.preprocess(n));const m=d(n,t);t.walkTokens&&k.walkTokens(m,t.walkTokens);let C=e(m,t);return t.hooks&&(C=t.hooks.postprocess(C)),C}catch(m){return f(m)}}}function k(d,e,n){return kt(z.lex,rt.parse)(d,e,n)}k.options=k.setOptions=function(d){return k.defaults=H(H({},k.defaults),d),ct(k.defaults),k},k.getDefaults=Dt,k.defaults=K,k.use=function(...d){const e=k.defaults.extensions||{renderers:{},childTokens:{}};d.forEach(n=>{const t=H({},n);if(t.async=k.defaults.async||t.async||!1,n.extensions&&(n.extensions.forEach(o=>{if(!o.name)throw new Error("extension name required");if(o.renderer){const A=e.renderers[o.name];A?e.renderers[o.name]=function(...f){let m=o.renderer.apply(this,f);return m===!1&&(m=A.apply(this,f)),m}:e.renderers[o.name]=o.renderer}if(o.tokenizer){if(!o.level||o.level!=="block"&&o.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");e[o.level]?e[o.level].unshift(o.tokenizer):e[o.level]=[o.tokenizer],o.start&&(o.level==="block"?e.startBlock?e.startBlock.push(o.start):e.startBlock=[o.start]:o.level==="inline"&&(e.startInline?e.startInline.push(o.start):e.startInline=[o.start]))}o.childTokens&&(e.childTokens[o.name]=o.childTokens)}),t.extensions=e),n.renderer){const o=k.defaults.renderer||new Z;for(const A in n.renderer){const f=o[A];o[A]=(...m)=>{let C=n.renderer[A].apply(o,m);return C===!1&&(C=f.apply(o,m)),C}}t.renderer=o}if(n.tokenizer){const o=k.defaults.tokenizer||new yt;for(const A in n.tokenizer){const f=o[A];o[A]=(...m)=>{let C=n.tokenizer[A].apply(o,m);return C===!1&&(C=f.apply(o,m)),C}}t.tokenizer=o}if(n.hooks){const o=k.defaults.hooks||new zt;for(const A in n.hooks){const f=o[A];zt.passThroughHooks.has(A)?o[A]=m=>{if(k.defaults.async)return Promise.resolve(n.hooks[A].call(o,m)).then(X=>f.call(o,X));const C=n.hooks[A].call(o,m);return f.call(o,C)}:o[A]=(...m)=>{let C=n.hooks[A].apply(o,m);return C===!1&&(C=f.apply(o,m)),C}}t.hooks=o}if(n.walkTokens){const o=k.defaults.walkTokens;t.walkTokens=function(A){let f=[];return f.push(n.walkTokens.call(this,A)),o&&(f=f.concat(o.call(this,A))),f}}k.setOptions(t)})},k.walkTokens=function(d,e){let n=[];for(const t of d)switch(n=n.concat(e.call(k,t)),t.type){case"table":{for(const o of t.header)n=n.concat(k.walkTokens(o.tokens,e));for(const o of t.rows)for(const A of o)n=n.concat(k.walkTokens(A.tokens,e));break}case"list":{n=n.concat(k.walkTokens(t.items,e));break}default:k.defaults.extensions&&k.defaults.extensions.childTokens&&k.defaults.extensions.childTokens[t.type]?k.defaults.extensions.childTokens[t.type].forEach(function(o){n=n.concat(k.walkTokens(t[o],e))}):t.tokens&&(n=n.concat(k.walkTokens(t.tokens,e)))}return n},k.parseInline=kt(z.lexInline,rt.parseInline),k.Parser=rt,k.parser=rt.parse,k.Renderer=Z,k.TextRenderer=V,k.Lexer=z,k.lexer=z.lex,k.Tokenizer=yt,k.Slugger=ht,k.Hooks=zt,k.parse=k;const It=k.options,Gt=k.setOptions,Mt=k.use,Nt=k.walkTokens,bt=k.parseInline,Ft=null,Kt=rt.parse,st=z.lex}}]);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,